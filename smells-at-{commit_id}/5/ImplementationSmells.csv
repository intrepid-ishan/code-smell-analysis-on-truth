Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[jan=1` feb=2]>. " + "It has unexpected items <[march=3]>");" is 151.,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[feb=2` jan=1]>. " + "It has unexpected items <[march=3]>");" is 151.,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly these elements in order " + "<[jan=1` march=3` feb=2]>");" is 147.,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessage("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 151.,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,170
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "The subject is missing the following entries: {april=4} and " + "has the following extra entries: {feb=2} and "+ "has the following different entries: {march=(5` 3)}");" is 287.,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "The subject has the following different entries: {march=(4` 3)}");" is 183.,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,216
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that foo (<{jan=1` feb=2` march=3}>) is equal to <{jan=1` feb=2` march=4}>." + " The subject has the following different entries: {march=(4` 3)}");" is 189.,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,233
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "The subject has the following extra entries: {march=3}");" is 165.,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "The subject is missing the following entries: {march=3}");" is 166.,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "The subject is missing the following entries: {mar=3} " + "and has the following extra entries: {march=3}");" is 223.,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,302
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,302
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,323
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,334
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,361
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,361
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 146.,470
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <null=kluever>. " + "However` it has a mapping from <null> to <null>");" is 140.,485
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=null}> contains entry <a=A>. " + "However` it has a mapping from <a> to <null>");" is 125.,601
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=A}> contains entry <a=null>. " + "However` it has a mapping from <a> to <A>");" is 122.,616
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,630
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 192.,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 205.,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 136.,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,688
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,696
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failsMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,704
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 172.,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 128.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 128.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Empty catch clause,The method has an empty catch block.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(TestVerb.class.getMethods())).filter(new Predicate<Method>(){" is 131.,50
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 129.,50
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 13,46
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 12,46
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledCollections,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that crazy list (<[a` b` c]>) contains all of <[c` d]>. " + "It is missing <[d]>");" is 125.,81
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Long Statement,The length of the statement "assertThat(error).hasMessage("Not true that crazy list has values within 1.0E-7 of <[1.3` 1.0]>. " + "It differs at indexes <[1]>");" is 132.,94
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Magic Number,The method contains a magic number: 0.0000001f,94
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,51
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,61
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.0>");" is 150.,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.0,144
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has first element <1>. " + "It does contain this element` but the first element is <0>");" is 141.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has last element <1>. " + "It does contain this element` but the last element is <2>");" is 139.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has first element <1>. " + "It does not contain this element` and the first element is <0>");" is 139.,117
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has last element <1>. " + "It does not contain this element` and the last element is <0>");" is 137.,117
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,53
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,53
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,83
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,83
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <5> (java.lang.Integer) " + "is equal to <5> (com.google.common.truth.SubjectTest$IntWrapper)");" is 143.,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <ab> is the same instance as <ab>" + " (although their toString() representations are the same)");" is 138.,204
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithDifferentTypesAndSameToString,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <true> (java.lang.String) is the same" + " instance as <true> (java.lang.Boolean)");" is 124.,219
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <4.5> is an instance of <java.lang.Long>." + " It is an instance of <java.lang.Double>");" is 129.,476
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Magic Number,The method contains a magic number: 4.5,476
truth,com.google.common.truth,SubjectTest,isNotInstanceOfFail,Magic Number,The method contains a magic number: 5,494
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,688
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <Foo{nums=[1` 2]}> is equal to <Foo{nums=[1` 2]}> " + "(although their toString() representations are the same)");" is 161.,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1` 2` 3]> is equal to <[1` 2` 3]> " + "(although their toString() representations are the same)");" is 147.,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2L,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3L,741
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 12,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 13,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,54
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,54
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 12,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 13,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,89
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,89
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,141
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,141
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,176
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,176
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,204
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,213
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,222
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,67
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,80
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 5,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 5,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,154
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,223
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 163.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,246
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 166.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,276
truth,com.google.common.truth,MultisetSubjectTest,multisetIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,41
truth,com.google.common.truth,MultisetSubjectTest,multisetIsNotEmpty,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,79
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,98
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.Object> " + "is assignable to <class java.lang.String>");" is 121.,43
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversedDifferentTypes,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.String> " + "is assignable to <class java.lang.Exception>");" is 124.,56
truth,com.google.common.truth,AbstractArraySubjectTest,canBeUsedInSubjectFactories,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 5,42
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 5,54
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 3,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 5,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,69
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,69
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,147
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,163
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Float) is equal to <%s> (java.lang.Double)"`1.23f`1.23));" is 127.,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,358
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,379
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,401
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.POSITIVE_INFINITY+ ">");" is 127.,410
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,426
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.NEGATIVE_INFINITY+ ">");" is 127.,435
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,451
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,471
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,492
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,40
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,51
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,148
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,38
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,60
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,65
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5,85
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,323
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Long Method,The method has 114 lines of code.,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "expected:<[foobar]> but was:<[message]>");" is 147.,50
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_MessageHasNullMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <\"message\"> is null");" is 143.,65
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_Named_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for NPE(java.lang.NullPointerException): " + "expected:<[foobar]> but was:<[message]>");" is 152.,78
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_NullMessageHasMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <null> is equal to <\"message\">");" is 154.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first key <1>. " + "It does contain this key` but the first key is <0>");" is 135.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last key <1>. " + "It does contain this key` but the last key is <2>");" is 133.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has first key <1>. " + "It does not contain this key` and the first key is <0>");" is 129.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has last key <1>. " + "It does not contain this key` and the last key is <0>");" is 127.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=0>. " + "It does contain this entry` but the first entry is <0=0>");" is 145.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=0>. " + "It does contain this entry` but the last entry is <2=0>");" is 143.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the first entry is <0=0>");" is 173.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the last entry is <2=0>");" is 171.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has first entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the first entry is <0=0>");" is 191.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has last entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the last entry is <2=2>");" is 189.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has first entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the first entry is <0=0>");" is 204.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has last entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the last entry is <3=3>");" is 202.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has first entry <2=2>. " + "It does not contain this entry` and the first entry is <1=0>");" is 139.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has last entry <2=2>. " + "It does not contain this entry` and the last entry is <1=0>");" is 137.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isNotEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,420
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 153.,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 130.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,598
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 156.,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 133.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0);" is 128.,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 127.,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.0>");" is 190.,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 178.,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 168.,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1039
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1108
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,41
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,47
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,60
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,95
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,105
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[5]` [A]]>." + " It differs at index <[0][0]>");" is 128.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A` B]` [5]]> is equal to <[[A]` [5]]>." + " It differs at index <[0][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[A]` [5` 6]]>." + " It differs at index <[1][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,166
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,191
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,216
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(String[][]) [[A]` [B]]> is equal to <[[B]` [A]]>." + " It differs at index <[0][0]>");" is 128.,291
truth,com.google.common.truth,ObjectArraySubjectTest,SetArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 133.,308
truth,com.google.common.truth,ObjectArraySubjectTest,primitiveMultiDimensionalArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(int[][]) [[1` 2]` [3]` [4` 5` 6]]> " + "is equal to <[[1` 2]` [3]` [4` 5` 6` 7]]>. It differs at index <[2][3]>");" is 156.,330
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,105
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,121
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,91
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,91
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,AtomicLongMapSubjectTest,isEqualToFail,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{}> is equal to <{}> " + "(although their toString() representations are the same)");" is 133.,34
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,100
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,109
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,121
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,272
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,147
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,163
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Double) is equal to <%s> (java.lang.Float)"`1.23`1.23f));" is 127.,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,358
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,379
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,401
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.POSITIVE_INFINITY+ ">");" is 128.,410
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,426
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.NEGATIVE_INFINITY+ ">");" is 128.,435
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,451
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,471
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,492
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2L,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,36
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2L,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,46
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2L,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,65
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2L,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2L,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5L,85
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,64
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 3,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 5,93
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 5,103
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 3,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 3,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 4,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains all of <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 131.,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains all of <[1` null` null` 3]>. " + "It is missing <[null]>");" is 123.,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 7,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithElementsThatThrowWhenYouCallHashCode,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[HCT` HCT]> contains exactly <[HCT]>. " + "It has unexpected items <[HCT]>");" is 125.,476
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInErrorMessageIsOrdered,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[foo OR bar]> contains exactly <[foo` bar]>. " + "It is missing <[foo` bar]> and has unexpected items <[foo OR bar]>");" is 160.,531
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3]>. " + "It is missing <[2 [2 copies]]>");" is 126.,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 132.,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 2` 2` 2` 3]> contains exactly <[1` 2` 2` 3]>. " + "It has unexpected items <[2 [2 copies]]>");" is 142.,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains exactly <[1` null` null` 3]>. " + "It is missing <[null]>");" is 124.,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 4]>. " + "It is missing <[4]> and has unexpected items <[3]>");" is 140.,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 3]> contains exactly <[1` 2` 4` 4]>. " + "It is missing <[4 [2 copies]]> and has unexpected items <[3 [2 copies]]>");" is 168.,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2` 3` 4]]>. " + "It is missing <[[1` 2` 3` 4]]> and has unexpected items <[1` 2` 3` 4]>. " + "Passing an iterable to the varargs method containsExactly(Object...) is "+ "often not the correct thing to do. Did you mean to call "+ "containsExactlyElementsIn(Iterable) instead?");" is 355.,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1` 2` 3]>. " + "It has unexpected items <[4]>");" is 122.,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2]` [3` 4]]>. " + "It is missing <[[1` 2]` [3` 4]]> and has unexpected items <[1` 2` 3` 4]>");" is 172.,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1]>. " + "It has unexpected items <[2` 3` 4]>");" is 122.,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 2,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 3,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 4,810
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 4,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,828
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,828
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 2,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 4,837
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 3,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 4,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,855
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,855
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,933
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,933
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Magic Number,The method contains a magic number: 456,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 134.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Magic Number,The method contains a magic number: 2345,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,990
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Statement,The length of the statement "IterableSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 148.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 123,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 456,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Magic Number,The method contains a magic number: 2345,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 178.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Magic Number,The method contains a magic number: 456,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 207.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1100
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 226.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 201.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 201.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 207.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 268.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 508.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` 0x80` +256]> contains` in order` exactly one element " + "that parses to each element of <[64` 128` 256` 128]>");" is 166.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 64,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 256,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 226.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 245.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 220.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` +64` fi` fo` 0x80` +256` fum]> contains` in order` " + "at least one element that parses to each element of <[64` 128` 256` 128]>");" is 185.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Magic Number,The method contains a magic number: 128,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128).inOrder();" is 123.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 64,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 256,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 64,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 256,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Magic Number,The method contains a magic number: 128,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 255,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 256,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 257,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 180.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 255,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 257,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 255,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 256,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 257,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 193.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 255,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 257,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 255,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 256,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 257,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains at least one element that parses to each of " + "<[256]>");" is 203.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains at least one element that parses to each of " + "<[null]>");" is 205.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 255,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 257,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 255,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 256,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 257,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains at least one element that " + "parses to each of <[256]>");" is 211.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains at least one element that " + "parses to each of <[null]>");" is 213.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 255,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 257,1694
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,138
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,138
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isNotEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,420
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 152.,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 129.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,598
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 155.,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 132.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0f);" is 132.,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 130.,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of <2.0>");" is 198.,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <Infinity>");" is 186.,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <NaN>");" is 176.,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1037
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,1084
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,1091
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1108
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,43
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,43
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,59
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,59
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 197.,59
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 171.,100
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,128
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,139
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that " + "<Values for key <1> (<[5]>) in multymap (<{1=[5]}>)> contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 187.,156
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 5,156
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 4,156
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that " + "valuez (<Values for key <1> (<[5]>) in <{1=[5]}>>) contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 185.,171
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 5,171
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 4,171
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,186
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,196
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,196
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 123.,294
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 129.,308
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 126.,323
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 152.,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 142.,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 154.,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 196.,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(e.getMessage()).startsWith(String.format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 124.,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 158.,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,558
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 220.,567
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,567
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 225.,585
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,585
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 156.,603
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,603
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,620
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,629
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,638
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 215.,647
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,647
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,equals,Long Statement,The length of the statement "return this.message.equals(that.message()) && (this.cause == null ? that.cause() == null : this.cause.equals(that.cause()));" is 124.,42
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,hashCode,Magic Number,The method contains a magic number: 1000003,55
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,hashCode,Magic Number,The method contains a magic number: 1000003,55
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[jan=1` feb=2]>. " + "It has unexpected items <[march=3]>");" is 151.,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[feb=2` jan=1]>. " + "It has unexpected items <[march=3]>");" is 151.,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly these elements in order " + "<[jan=1` march=3` feb=2]>");" is 147.,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessage("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 151.,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,170
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "The subject is missing the following entries: {april=4} and " + "has the following extra entries: {feb=2} and "+ "has the following different entries: {march=(5` 3)}");" is 287.,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "The subject has the following different entries: {march=(4` 3)}");" is 183.,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,216
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that foo (<{jan=1` feb=2` march=3}>) is equal to <{jan=1` feb=2` march=4}>." + " The subject has the following different entries: {march=(4` 3)}");" is 189.,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,233
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "The subject has the following extra entries: {march=3}");" is 165.,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "The subject is missing the following entries: {march=3}");" is 166.,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "The subject is missing the following entries: {mar=3} " + "and has the following extra entries: {march=3}");" is 223.,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,302
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,302
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,323
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,334
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,361
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,361
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 146.,470
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <null=kluever>. " + "However` it has a mapping from <null> to <null>");" is 140.,485
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=null}> contains entry <a=A>. " + "However` it has a mapping from <a> to <null>");" is 125.,601
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=A}> contains entry <a=null>. " + "However` it has a mapping from <a> to <A>");" is 122.,616
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,630
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 192.,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 205.,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 136.,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,688
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,696
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failsMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,704
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 172.,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 128.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 128.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Empty catch clause,The method has an empty catch block.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(TestVerb.class.getMethods())).filter(new Predicate<Method>(){" is 131.,50
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 129.,50
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 13,46
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 12,46
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledCollections,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that crazy list (<[a` b` c]>) contains all of <[c` d]>. " + "It is missing <[d]>");" is 125.,81
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Long Statement,The length of the statement "assertThat(error).hasMessage("Not true that crazy list has values within 1.0E-7 of <[1.3` 1.0]>. " + "It differs at indexes <[1]>");" is 132.,94
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Magic Number,The method contains a magic number: 0.0000001f,94
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,51
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,61
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.0>");" is 150.,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.0,144
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has first element <1>. " + "It does contain this element` but the first element is <0>");" is 141.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has last element <1>. " + "It does contain this element` but the last element is <2>");" is 139.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has first element <1>. " + "It does not contain this element` and the first element is <0>");" is 139.,117
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has last element <1>. " + "It does not contain this element` and the last element is <0>");" is 137.,117
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,53
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,53
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,83
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,83
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <5> (java.lang.Integer) " + "is equal to <5> (com.google.common.truth.SubjectTest$IntWrapper)");" is 143.,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <ab> is the same instance as <ab>" + " (although their toString() representations are the same)");" is 138.,204
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithDifferentTypesAndSameToString,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <true> (java.lang.String) is the same" + " instance as <true> (java.lang.Boolean)");" is 124.,219
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <4.5> is an instance of <java.lang.Long>." + " It is an instance of <java.lang.Double>");" is 129.,476
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Magic Number,The method contains a magic number: 4.5,476
truth,com.google.common.truth,SubjectTest,isNotInstanceOfFail,Magic Number,The method contains a magic number: 5,494
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,688
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <Foo{nums=[1` 2]}> is equal to <Foo{nums=[1` 2]}> " + "(although their toString() representations are the same)");" is 161.,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1` 2` 3]> is equal to <[1` 2` 3]> " + "(although their toString() representations are the same)");" is 147.,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2L,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3L,741
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 12,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 13,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,54
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,54
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 12,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 13,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,89
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,89
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,141
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,141
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,176
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,176
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,204
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,213
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,222
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,67
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,80
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 5,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 5,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,154
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,223
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 163.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,246
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 166.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,276
truth,com.google.common.truth,MultisetSubjectTest,multisetIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,41
truth,com.google.common.truth,MultisetSubjectTest,multisetIsNotEmpty,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,79
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,98
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.Object> " + "is assignable to <class java.lang.String>");" is 121.,43
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversedDifferentTypes,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.String> " + "is assignable to <class java.lang.Exception>");" is 124.,56
truth,com.google.common.truth,AbstractArraySubjectTest,canBeUsedInSubjectFactories,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 5,42
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 5,54
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 3,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 5,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,69
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,69
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,147
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,163
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Float) is equal to <%s> (java.lang.Double)"`1.23f`1.23));" is 127.,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,358
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,379
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,401
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.POSITIVE_INFINITY+ ">");" is 127.,410
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,426
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.NEGATIVE_INFINITY+ ">");" is 127.,435
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,451
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,471
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,492
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,40
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,51
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,148
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,38
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,60
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,65
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5,85
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,323
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Long Method,The method has 114 lines of code.,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "expected:<[foobar]> but was:<[message]>");" is 147.,50
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_MessageHasNullMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <\"message\"> is null");" is 143.,65
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_Named_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for NPE(java.lang.NullPointerException): " + "expected:<[foobar]> but was:<[message]>");" is 152.,78
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_NullMessageHasMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <null> is equal to <\"message\">");" is 154.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first key <1>. " + "It does contain this key` but the first key is <0>");" is 135.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last key <1>. " + "It does contain this key` but the last key is <2>");" is 133.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has first key <1>. " + "It does not contain this key` and the first key is <0>");" is 129.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has last key <1>. " + "It does not contain this key` and the last key is <0>");" is 127.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=0>. " + "It does contain this entry` but the first entry is <0=0>");" is 145.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=0>. " + "It does contain this entry` but the last entry is <2=0>");" is 143.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the first entry is <0=0>");" is 173.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the last entry is <2=0>");" is 171.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has first entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the first entry is <0=0>");" is 191.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has last entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the last entry is <2=2>");" is 189.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has first entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the first entry is <0=0>");" is 204.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has last entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the last entry is <3=3>");" is 202.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has first entry <2=2>. " + "It does not contain this entry` and the first entry is <1=0>");" is 139.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has last entry <2=2>. " + "It does not contain this entry` and the last entry is <1=0>");" is 137.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isNotEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,420
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 153.,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 130.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,598
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 156.,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 133.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0);" is 128.,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 127.,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.0>");" is 190.,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 178.,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 168.,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1039
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1108
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,41
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,47
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,60
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,95
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,105
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[5]` [A]]>." + " It differs at index <[0][0]>");" is 128.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A` B]` [5]]> is equal to <[[A]` [5]]>." + " It differs at index <[0][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[A]` [5` 6]]>." + " It differs at index <[1][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,166
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,191
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,216
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(String[][]) [[A]` [B]]> is equal to <[[B]` [A]]>." + " It differs at index <[0][0]>");" is 128.,291
truth,com.google.common.truth,ObjectArraySubjectTest,SetArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 133.,308
truth,com.google.common.truth,ObjectArraySubjectTest,primitiveMultiDimensionalArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(int[][]) [[1` 2]` [3]` [4` 5` 6]]> " + "is equal to <[[1` 2]` [3]` [4` 5` 6` 7]]>. It differs at index <[2][3]>");" is 156.,330
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,105
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,121
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,91
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,91
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,AtomicLongMapSubjectTest,isEqualToFail,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{}> is equal to <{}> " + "(although their toString() representations are the same)");" is 133.,34
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,100
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,109
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,121
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,272
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,147
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,163
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Double) is equal to <%s> (java.lang.Float)"`1.23`1.23f));" is 127.,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,358
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,379
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,401
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.POSITIVE_INFINITY+ ">");" is 128.,410
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,426
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.NEGATIVE_INFINITY+ ">");" is 128.,435
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,451
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,471
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,492
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2L,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,36
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2L,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,46
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2L,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,65
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2L,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2L,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5L,85
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,64
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 3,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 5,93
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 5,103
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 3,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 3,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 4,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains all of <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 131.,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains all of <[1` null` null` 3]>. " + "It is missing <[null]>");" is 123.,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 7,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithElementsThatThrowWhenYouCallHashCode,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[HCT` HCT]> contains exactly <[HCT]>. " + "It has unexpected items <[HCT]>");" is 125.,476
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInErrorMessageIsOrdered,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[foo OR bar]> contains exactly <[foo` bar]>. " + "It is missing <[foo` bar]> and has unexpected items <[foo OR bar]>");" is 160.,531
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3]>. " + "It is missing <[2 [2 copies]]>");" is 126.,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 132.,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 2` 2` 2` 3]> contains exactly <[1` 2` 2` 3]>. " + "It has unexpected items <[2 [2 copies]]>");" is 142.,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains exactly <[1` null` null` 3]>. " + "It is missing <[null]>");" is 124.,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 4]>. " + "It is missing <[4]> and has unexpected items <[3]>");" is 140.,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 3]> contains exactly <[1` 2` 4` 4]>. " + "It is missing <[4 [2 copies]]> and has unexpected items <[3 [2 copies]]>");" is 168.,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2` 3` 4]]>. " + "It is missing <[[1` 2` 3` 4]]> and has unexpected items <[1` 2` 3` 4]>. " + "Passing an iterable to the varargs method containsExactly(Object...) is "+ "often not the correct thing to do. Did you mean to call "+ "containsExactlyElementsIn(Iterable) instead?");" is 355.,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1` 2` 3]>. " + "It has unexpected items <[4]>");" is 122.,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2]` [3` 4]]>. " + "It is missing <[[1` 2]` [3` 4]]> and has unexpected items <[1` 2` 3` 4]>");" is 172.,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1]>. " + "It has unexpected items <[2` 3` 4]>");" is 122.,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 2,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 3,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 4,810
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 4,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,828
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,828
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 2,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 4,837
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 3,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 4,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,855
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,855
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,933
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,933
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Magic Number,The method contains a magic number: 456,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 134.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Magic Number,The method contains a magic number: 2345,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,990
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Statement,The length of the statement "IterableSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 148.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 123,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 456,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Magic Number,The method contains a magic number: 2345,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 178.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Magic Number,The method contains a magic number: 456,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 207.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1100
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 226.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 201.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 201.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 207.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 268.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 508.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` 0x80` +256]> contains` in order` exactly one element " + "that parses to each element of <[64` 128` 256` 128]>");" is 166.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 64,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 256,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 226.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 245.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 220.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` +64` fi` fo` 0x80` +256` fum]> contains` in order` " + "at least one element that parses to each element of <[64` 128` 256` 128]>");" is 185.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Magic Number,The method contains a magic number: 128,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128).inOrder();" is 123.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 64,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 256,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 64,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 256,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Magic Number,The method contains a magic number: 128,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 255,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 256,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 257,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 180.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 255,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 257,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 255,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 256,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 257,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 193.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 255,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 257,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 255,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 256,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 257,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains at least one element that parses to each of " + "<[256]>");" is 203.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains at least one element that parses to each of " + "<[null]>");" is 205.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 255,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 257,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 255,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 256,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 257,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains at least one element that " + "parses to each of <[256]>");" is 211.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains at least one element that " + "parses to each of <[null]>");" is 213.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 255,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 257,1694
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,138
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,138
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isNotEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,420
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 152.,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 129.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,598
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 155.,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 132.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0f);" is 132.,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 130.,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of <2.0>");" is 198.,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <Infinity>");" is 186.,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <NaN>");" is 176.,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1037
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,1084
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,1091
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1108
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,43
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,43
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,59
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,59
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 197.,59
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 171.,100
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,128
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,139
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that " + "<Values for key <1> (<[5]>) in multymap (<{1=[5]}>)> contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 187.,156
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 5,156
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 4,156
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that " + "valuez (<Values for key <1> (<[5]>) in <{1=[5]}>>) contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 185.,171
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 5,171
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 4,171
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,186
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,196
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,196
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 123.,294
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 129.,308
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 126.,323
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 152.,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 142.,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 154.,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 196.,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(e.getMessage()).startsWith(String.format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 124.,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 158.,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,558
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 220.,567
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,567
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 225.,585
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,585
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 156.,603
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,603
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,620
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,629
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,638
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 215.,647
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,647
truth,com.google.common.truth,PrimitiveShortArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,ObjectArraySubject,apply,Complex Method,Cyclomatic complexity of the method is 10,73
truth,com.google.common.truth,ObjectArraySubject,checkArrayEqualsRecursive,Complex Conditional,The conditional expression actual != null && actual.getClass().isArray() && expected != null && expected.getClass().isArray() is complex.,166
truth,com.google.common.truth,ObjectArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,198
truth,com.google.common.truth,DoubleSubject,isWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,78
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,102
truth,com.google.common.truth,DoubleSubject,isNotWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,118
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,140
truth,com.google.common.truth,DoubleSubject,isFinite,Complex Conditional,The conditional expression actual() == null || actual().isNaN() || actual().isInfinite() is complex.,243
truth,com.google.common.truth,StringSubject,isEqualTo,Complex Method,Cyclomatic complexity of the method is 8,43
truth,com.google.common.truth,StringSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that " + actualAsString() + " is equal to (%s)<%s>"`expected.getClass().getName()`expected);" is 121.,43
truth,com.google.common.truth,AbstractArraySubject,failWithBadType,Long Statement,The length of the statement "failWithRawMessage("Incompatible types compared. expected: %s` actual: %s%s"`Platform.compressType(expectedTypeString)`underlyingType()`brackets());" is 148.,73
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isEqualTo,Long Statement,The length of the statement "throw new UnsupportedOperationException("Comparing raw equality of doubles is often unsafe. Use either " + "usingTolerance(someTolerance).containsExactly(someValues).inOrder() to compare with" + "a tolerance or usingExactEquality().containsExactly(someValues).inOrder() if you"+ "really want exact equality instead.");" is 318.,56
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Arrays are of different lengths. expected: %s` actual %s"`Doubles.asList(expectedArray)`Doubles.asList(actual));" is 132.,74
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isNotEqualTo,Long Statement,The length of the statement "throw new UnsupportedOperationException("Comparing raw equality of doubles is unsafe` " + "use isNotEqualTo(double[] array` double tolerance) instead.");" is 153.,116
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,132
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 122.,223
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,223
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,223
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 122.,240
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,240
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,240
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesNotWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 124.,276
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 124.,298
truth,com.google.common.truth,SubjectUtils,accumulate,Magic Number,The method contains a magic number: 2,31
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. However` it has a mapping from <%s> to <%s>"`actualAsString()`entry`key`actual().asMap().get(key));" is 157.,90
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualAsString()`entry`value`keys);" is 150.,90
truth,com.google.common.truth,MultimapSubject,isEqualTo,Complex Conditional,The conditional expression (actual() instanceof ListMultimap && other instanceof SetMultimap) || (actual() instanceof SetMultimap && other instanceof ListMultimap) is complex.,134
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "if ((actual() instanceof ListMultimap && other instanceof SetMultimap) || (actual() instanceof SetMultimap && other instanceof ListMultimap)) {" is 143.,134
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s is equal to %s <%s>. " + "A %s cannot equal a %s if either is non-empty."`mapType1`actualAsString()`mapType2`other`mapType1`mapType2);" is 174.,134
truth,com.google.common.truth,MultimapSubject,containsExactly,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. It is missing <%s> and has unexpected items <%s>"`actualAsString()`failVerb`expectedMultimap`countDuplicatesMultimap(missing)`countDuplicatesMultimap(extra));" is 204.,182
truth,com.google.common.truth,Subject,failComparingToStrings,Complex Conditional,The conditional expression !needsClassDisambiguation && sameToStrings && compareToStrings is complex.,315
truth,com.google.common.truth,Subject,failComparingToStrings,Long Parameter List,The method has 5 parameters. ,315
truth,com.google.common.truth,Subject,failWithBadResults,Long Statement,The length of the statement "String message=format("Not true that %s %s <%s>. It %s <%s>"`actualAsString()`verb`expected`failVerb`(actual == null) ? "null reference" : actual);" is 147.,360
truth,com.google.common.truth,SortedMapSubject,hasFirstKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first key <%s>. " + "It does contain this key` but the first key is <%s>"`actualAsString()`key`actualAsNavigableMap().firstKey());" is 171.,54
truth,com.google.common.truth,SortedMapSubject,hasFirstKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first key <%s>. " + "It does not contain this key` and the first key is <%s>"`actualAsString()`key`actualAsNavigableMap().firstKey());" is 175.,54
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Complex Method,Cyclomatic complexity of the method is 10,74
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. " + "It does contain this entry` but the first entry is <%s>"`actualAsString()`expectedEntry`actualFirstEntry);" is 170.,74
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>` the first value is <%s>"`actualAsString()`expectedEntry`actualFirstEntry.getValue());" is 144.,74
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>` the first key is <%s>"`actualAsString()`expectedEntry`actualFirstKey);" is 129.,74
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. It does contain this key` " + "but the key is mapped to <%s>` and the first entry is <%s>"`actualAsString()`expectedEntry`actualAsNavigableMap().get(key)`actualFirstEntry);" is 231.,74
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. It does contain this value` but the value is " + "mapped from the keys <%s>` and the first entry is <%s>"`actualAsString()`expectedEntry`keys`actualFirstEntry);" is 219.,74
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. " + "It does not contain this entry` and the first entry is <%s>"`actualAsString()`expectedEntry`actualFirstEntry);" is 174.,74
truth,com.google.common.truth,SortedMapSubject,hasLastKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last key <%s>. " + "It does contain this key` but the last key is <%s>"`actualAsString()`key`actualAsNavigableMap().lastKey());" is 168.,125
truth,com.google.common.truth,SortedMapSubject,hasLastKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last key <%s>. " + "It does not contain this key` and the last key is <%s>"`actualAsString()`key`actualAsNavigableMap().lastKey());" is 172.,125
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Complex Method,Cyclomatic complexity of the method is 10,145
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. " + "It does contain this entry` but the last entry is <%s>"`actualAsString()`expectedEntry`actualLastEntry);" is 167.,145
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>` the last value is <%s>"`actualAsString()`expectedEntry`actualLastEntry.getValue());" is 141.,145
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>` the last key is <%s>"`actualAsString()`expectedEntry`actualLastKey);" is 126.,145
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. It does contain this key` " + "but the key is mapped to <%s>` and the last entry is <%s>"`actualAsString()`expectedEntry`actualAsNavigableMap().get(key)`actualLastEntry);" is 228.,145
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. It does contain this value` but the value is " + "mapped from the keys <%s>` and the last entry is <%s>"`actualAsString()`expectedEntry`keys`actualLastEntry);" is 216.,145
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. " + "It does not contain this entry` and the last entry is <%s>"`actualAsString()`expectedEntry`actualLastEntry);" is 171.,145
truth,com.google.common.truth,PrimitiveLongArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,StringUtil,format,Magic Number,The method contains a magic number: 16,43
truth,com.google.common.truth,StringUtil,format,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,PrimitiveByteArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveCharArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveBooleanArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,SortedSetSubject,hasFirstElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first element <%s>. " + "It does contain this element` but the first element is <%s>"`actualAsString()`element`actualAsNavigableSet().first());" is 184.,47
truth,com.google.common.truth,SortedSetSubject,hasFirstElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first element <%s>. " + "It does not contain this element` and the first element is <%s>"`actualAsString()`element`actualAsNavigableSet().first());" is 188.,47
truth,com.google.common.truth,SortedSetSubject,hasLastElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last element <%s>. " + "It does contain this element` but the last element is <%s>"`actualAsString()`element`actualAsNavigableSet().last());" is 181.,67
truth,com.google.common.truth,SortedSetSubject,hasLastElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last element <%s>. " + "It does not contain this element` and the last element is <%s>"`actualAsString()`element`actualAsNavigableSet().last());" is 185.,67
truth,com.google.common.truth,Platform,stripIfInPackage,Complex Conditional,The conditional expression type.startsWith(packagePrefix) && (type.indexOf('.'`packagePrefix.length()) == -1) && Character.isUpperCase(type.charAt(packagePrefix.length())) is complex.,116
truth,com.google.common.truth,Platform,stripIfInPackage,Long Statement,The length of the statement "if (type.startsWith(packagePrefix) && (type.indexOf('.'`packagePrefix.length()) == -1) && Character.isUpperCase(type.charAt(packagePrefix.length()))) {" is 151.,116
truth,com.google.common.truth,PrimitiveFloatArraySubject,isEqualTo,Long Statement,The length of the statement "throw new UnsupportedOperationException("Comparing raw equality of floats is often unsafe. Use either " + "usingTolerance(someTolerance).containsExactly(someValues).inOrder() to compare with" + "a tolerance or usingExactEquality().containsExactly(someValues).inOrder() if you"+ "really want exact equality instead.");" is 317.,56
truth,com.google.common.truth,PrimitiveFloatArraySubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Arrays are of different lengths. expected: %s` actual %s"`Floats.asList(expectedArray)`Floats.asList(actual));" is 130.,74
truth,com.google.common.truth,PrimitiveFloatArraySubject,isNotEqualTo,Long Statement,The length of the statement "throw new UnsupportedOperationException("Comparing raw equality of floats is unsafe` " + "use isNotEqualTo(float[] array` float tolerance) instead.");" is 150.,116
truth,com.google.common.truth,PrimitiveFloatArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,132
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 121.,223
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,223
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,223
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 121.,240
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,240
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,240
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesNotWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 123.,276
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 123.,298
truth,com.google.common.truth,Platform,getArrayLength,Complex Method,Cyclomatic complexity of the method is 10,76
truth,com.google.common.truth,Platform,getFromArray,Complex Method,Cyclomatic complexity of the method is 12,103
truth,com.google.common.truth,MapSubject,isEqualTo,Complex Method,Cyclomatic complexity of the method is 8,45
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. However` it has a mapping from <%s> to <%s>"`actualAsString()`entry`key`actual().get(key));" is 149.,112
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualAsString()`entry`value`keys);" is 150.,112
truth,com.google.common.truth,MapSubject,accumulateMap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,163
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,163
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,163
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,163
truth,com.google.common.truth,PrimitiveIntArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,Correspondence,equals,Long Statement,The length of the statement "throw new UnsupportedOperationException("Correspondence.equals(object) is not supported. If you meant to compare objects` use" + " .compare(actual` expected) instead.");" is 169.,114
truth,com.google.common.truth,FloatSubject,isWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,78
truth,com.google.common.truth,FloatSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,102
truth,com.google.common.truth,FloatSubject,isNotWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,118
truth,com.google.common.truth,FloatSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,140
truth,com.google.common.truth,FloatSubject,isFinite,Complex Conditional,The conditional expression actual() == null || actual().isNaN() || actual().isInfinite() is complex.,241
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Complex Method,Cyclomatic complexity of the method is 13,274
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "String failSuffix=addElementsInWarning ? ". Passing an iterable to the varargs method containsExactly(Object...) is " + "often not the correct thing to do. Did you mean to call " + "containsExactlyElementsIn(Iterable) instead?" : "";" is 233.,274
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains exactly <%s>. " + "It is missing <%s> and has unexpected items <%s>%s"`actualAsString()`required`countDuplicates(missing)`countDuplicates(extra)`failSuffix);" is 203.,274
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithBadResultsAndSuffix("contains exactly"`required`"has unexpected items"`countDuplicates(Lists.newArrayList(actualIter))`failSuffix);" is 139.,274
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithBadResultsAndSuffix("contains exactly"`required`"is missing"`countDuplicates(Lists.newArrayList(requiredIter))`failSuffix);" is 131.,274
truth,com.google.common.truth,IterableSubject,failWithBadResultsAndSuffix,Long Parameter List,The method has 5 parameters. ,381
truth,com.google.common.truth,IterableSubject,failWithBadResultsAndSuffix,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. It %s <%s>%s"`actualAsString()`verb`expected`failVerb`(actual == null) ? "null reference" : actual`suffix);" is 153.,381
truth,com.google.common.truth,StreamSubjectTest,testIsEqualToList,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hello]> (java.util.stream.ReferencePipeline$Head) " + "is equal to <[hello]> (java.util.Arrays$ArrayList)");" is 157.,43
truth,com.google.common.truth,StreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,58
truth,com.google.common.truth,StreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,StreamSubjectTest,testContainsNoneIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hello]> contains no elements in <[hello` hell]>. " + "It contains <[hello]>");" is 127.,224
truth,com.google.common.truth,StreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hell` hello]> contains all of <[hell` hello` goodbye]>. " + "It is missing <[goodbye]>");" is 138.,242
truth,com.google.common.truth,StreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hell` hello]> contains all elements in <[hell` hello` goodbye]>. " + "It is missing <[goodbye]>");" is 147.,277
truth,com.google.common.truth,StreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hell` hello]> contains exactly <[hell]>. " + "It has unexpected items <[hello]>");" is 131.,313
truth,com.google.common.truth,StreamSubjectTest,testContainsExactly_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hell` hello]> contains exactly " + "these elements in order <[hello` hell]>");" is 127.,331
truth,com.google.common.truth,StreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hell` hello]> contains exactly <[hell]>. " + "It has unexpected items <[hello]>");" is 131.,350
truth,com.google.common.truth,StreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[hell` hello]> contains exactly " + "these elements in order <[hello` hell]>");" is 127.,370
truth,com.google.common.truth,OptionalIntSubjectTest,namedOptionalInt,Magic Number,The method contains a magic number: 1337,37
truth,com.google.common.truth,OptionalIntSubjectTest,namedOptionalInt,Magic Number,The method contains a magic number: 42,37
truth,com.google.common.truth,OptionalIntSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337,62
truth,com.google.common.truth,OptionalIntSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337,94
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,105
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,105
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337,110
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337,121
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42,121
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42,142
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42,142
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 2,142
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42,142
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 30,142
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 3,142
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337,157
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42,157
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337,167
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42,167
truth,com.google.common.truth,OptionalIntSubjectTest,assumption,Empty catch clause,The method has an empty catch block.,172
truth,com.google.common.truth,OptionalDoubleSubjectTest,namedOptionalDouble,Magic Number,The method contains a magic number: 1337.0,37
truth,com.google.common.truth,OptionalDoubleSubjectTest,namedOptionalDouble,Magic Number,The method contains a magic number: 42.0,37
truth,com.google.common.truth,OptionalDoubleSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337.0,62
truth,com.google.common.truth,OptionalDoubleSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337.0,94
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,105
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,105
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337.0,110
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337.0,121
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42.0,121
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42.0,142
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42.0,142
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 2,142
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42.0,142
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 30.0,142
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 3,142
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337.0,157
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42.0,157
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337.0,167
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42.0,167
truth,com.google.common.truth,OptionalDoubleSubjectTest,assumption,Empty catch clause,The method has an empty catch block.,172
truth,com.google.common.truth,OptionalLongSubjectTest,namedOptionalLong,Magic Number,The method contains a magic number: 1337L,37
truth,com.google.common.truth,OptionalLongSubjectTest,namedOptionalLong,Magic Number,The method contains a magic number: 42L,37
truth,com.google.common.truth,OptionalLongSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337L,61
truth,com.google.common.truth,OptionalLongSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337L,93
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,104
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,104
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337L,109
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337L,120
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42L,120
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42L,141
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42L,141
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 42L,141
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 30L,141
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithEmptyRespectsFailureStrategy,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337L,156
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42L,156
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337L,166
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42L,166
truth,com.google.common.truth,OptionalLongSubjectTest,assumption,Empty catch clause,The method has an empty catch block.,171
truth,com.google.common.truth,OptionalTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,143
truth,com.google.common.truth,OptionalTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,143
truth,com.google.common.truth,OptionalTest,assumption,Empty catch clause,The method has an empty catch block.,154
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 42,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 41,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 37802,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,sundar,Magic Number,The method contains a magic number: 5243,55
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 42,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 41,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 37802,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,sundar,Magic Number,The method contains a magic number: 5243,55
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 5,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 2,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 3,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 5,35
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 5,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 3,47
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 5,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 2,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 3,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 5,35
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 5,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 3,47
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsEqualToFailed,Long Statement,The length of the statement "expectRegex(e`"Not true that messages compare equal\\.\\s*" + "(Differences were found:\\n.*|No differences were reported\\..*)");" is 130.,152
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsNotEqualToFailed,Long Statement,The length of the statement "expectRegex(e`"Not true that messages compare not equal\\.\\s*" + "(Only ignorable differences were found:\\n.*|" + "No differences were found\\..*)");" is 151.,159
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectRegex,Long Statement,The length of the statement "expect.withFailureMessage(String.format("Expected <%s> to match '%s'."`regex`t.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(t.getMessage()).matches()).isTrue();" is 181.,168
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectNoRegex,Long Statement,The length of the statement "expect.withFailureMessage(String.format("Expected <%s> to match '%s'."`regex`t.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(t.getMessage()).matches()).isFalse();" is 182.,175
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 134.,142
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 133.,142
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 130.,142
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 135.,142
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 131.,158
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 136.,158
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 133.,158
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 132.,158
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 145.,174
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 150.,174
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 147.,174
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 146.,174
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 148.,190
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 147.,190
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 144.,190
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 149.,190
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message message=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 141.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage1=parse("o_int: 999999 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage2=parse("o_int: 3 o_sub_test_message: { o_int: 999999 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage3=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 999999 r_string: \"bar\" }");" is 151.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage4=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"999999\" }");" is 149.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"999999\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 146.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "FieldScope fieldScope=FieldScopes.ignoringFields(getFieldNumber("o_sub_test_message")).allowingFieldDescriptors(getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_int"));" is 196.,270
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message scopeMessage=parse("o_int: 1 r_string: \"x\" o_test_message: { o_int: 1 } " + "r_test_message: { r_string: \"x\" } r_test_message: { o_int: 1 } " + "o_sub_test_message: { o_test_message: { o_int: 1 } }");" is 212.,331
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"2\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } "+ "o_sub_test_message: { o_int: 2 o_test_message: { o_int: 1 r_string: \"2\" } }");" is 276.,331
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message diffMessage=parse("o_int: 4 r_string: \"4\" o_test_message: {o_int: 4 r_string: \"3\" } " + "r_test_message: { o_int: 4 r_string: \"4\" } " + "r_test_message: { o_int: 4 r_string: \"4\" }"+ "o_sub_test_message: { r_string: \"3\" o_int: 3 "+ "o_test_message: { o_int: 4 r_string: \"3\" } }");" is 299.,331
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"3\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" }"+ "o_sub_test_message: { o_int: 3 o_test_message: { o_int: 1 r_string: \"3\" } }");" is 277.,331
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message scopeMessage=newBuilder().setUnknownFields(UnknownFieldSet.newBuilder().addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).build()).addField(21`Field.newBuilder().addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).build()).build()).addGroup(UnknownFieldSet.newBuilder().addField(2`Field.newBuilder().addFixed64(1).build()).build()).build()).build()).build();" is 486.,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message message=newBuilder().setUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(2).addFixed64(2).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(2).addLengthDelimited(ByteString.copyFrom("2"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(2).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(2).addFixed64(2).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(2).build()).addField(2`Field.newBuilder().addFixed32(2).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(2).build()).build()).build()).build()).build();" is 792.,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message diffMessage=newBuilder().setUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(4).addFixed64(4).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(4).addLengthDelimited(ByteString.copyFrom("4"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(4).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(4).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build()).build();" is 796.,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message eqMessage=newBuilder().setUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build()).build();" is 794.,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,407
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testInvalidFieldNumber,Magic Number,The method contains a magic number: 999,671
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 145.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage1=parse("o_int: 111 r_string: \"foo\" o_sub_test_message: { o_int: 222 " + "o_sub_sub_test_message: { o_int: 333 r_string: \"bar\" } }");" is 154.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage2=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 148.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage3=parse("r_string: \"foo\" o_sub_test_message: { " + "o_sub_sub_test_message: { r_string: \"bar\" } }");" is 121.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage4=parse("o_int: 333 r_string: \"foo\" o_sub_test_message: { o_int: 111 " + "o_sub_sub_test_message: { o_int: 222 r_string: \"bar\" } }");" is 154.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "FieldDescriptor bottom=getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_sub_sub_test_message").getMessageType().findFieldByName("o_int");" is 165.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "ImmutableMap<String`FieldScope> fieldScopes=ImmutableMap.of("BASIC"`FieldScopes.ignoringFieldDescriptors(top`middle`bottom)`"CHAINED"`FieldScopes.ignoringFieldDescriptors(top).ignoringFieldDescriptors(middle).ignoringFieldDescriptors(bottom)`"REPEATED"`FieldScopes.ignoringFieldDescriptors(top`middle).ignoringFieldDescriptors(middle`bottom));" is 343.,699
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqMessage1`eqMessage2);" is 131.,769
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqMessage1`eqMessage2);" is 180.,769
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,769
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 200.,769
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 194.,769
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 200.,769
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(listOf())).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,827
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,827
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(listOf())).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 144.,827
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 144.,827
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,864
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "assertThat(message).withPartialScope(FieldScopes.fromSetFields(TestMessage3.newBuilder().setOInt(2).build()`TestMessage3.newBuilder().addRString("foo").build())).isEqualTo(eqMessage);" is 183.,878
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "expectSubstr(expected`"Message given to FieldScopes.fromSetFields() " + "does not have the same descriptor as the message being tested");" is 137.,878
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Magic Number,The method contains a magic number: 2,878
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "expectThat(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage1);" is 144.,903
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "assertThat(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage2);" is 144.,903
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,80
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,248
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,248
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqIgnoredMessage1`eqRepeatedMessage2);" is 124.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 127.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqRepeatedMessage1`eqRepeatedMessage2);" is 125.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqIgnoredMessage2));" is 126.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqRepeatedMessage2)).ignoringFields(ignoreFieldNumber).containsAllOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 142.,324
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqIgnoredMessage1)).ignoringRepeatedFieldOrder().containsAllIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2));" is 146.,324
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsNoneOf(eqRepeatedMessage1`eqIgnoredMessage2);" is 125.,392
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,392
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsNoneIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 128.,392
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,392
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "assertThat(listOf(message1)).withPartialScope(FieldScopes.fromSetFields(message2)).ignoringRepeatedFieldOrder().contains(message2);" is 131.,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectSubstr(expected`"assertThat(proto).withPartialScope(FieldScopes.fromSetFields({o_int: 3\n" + "r_string: \"baz\"\n" + "r_string: \"qux\"\n"+ "})).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 200.,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "assertThat(listOf(message1)).ignoringRepeatedFieldOrder().ignoringFieldScope(FieldScopes.ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string"))).ignoringFieldAbsence().contains(message2);" is 199.,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectSubstr(expected`"assertThat(proto)" + ".ignoringRepeatedFieldOrder()" + ".ignoringFieldScope("+ "FieldScopes.ignoringFields(" + fullMessageName() + ".o_int` "+ fullMessageName()+ ".r_string))"+ ".ignoringFieldAbsence()"+ ".isEqualTo(target)");" is 249.,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectSubstr(expected`"assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_enum` "+ fullMessageName()+ ".o_test_message)"+ ".reportingMismatchesOnly()"+ ".isEqualTo(target)");" is 189.,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Magic Number,The method contains a magic number: 4,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Magic Number,The method contains a magic number: 7,430
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(listOf(TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrder().containsExactly(TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 346.,497
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compareByOIntAscending,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,514
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compare,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,516
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1111,90
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 10,90
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 100,90
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1000,90
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,111
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 139.,128
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,142
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,158
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,158
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,158
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,158
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,158
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message message=newBuilder().setUnknownFields(UnknownFieldSet.newBuilder().addField(99`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build()).build();" is 162.,84
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message diffMessage=newBuilder().setUnknownFields(UnknownFieldSet.newBuilder().addField(93`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build()).build();" is 166.,84
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 99,84
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,84
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 93,84
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,84
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message nestedMessage=parse("r_test_message: { o_int: 33 r_string: \"foo\" r_string: \"bar\" } " + "r_test_message: { o_int: 44 r_string: \"baz\" r_string: \"qux\" } ");" is 169.,127
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message diffNestedMessage=parse("r_test_message: { o_int: 33 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 44 r_string: \"bar\" r_string: \"foo\" } ");" is 173.,127
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message eqNestedMessage=parse("r_test_message: { o_int: 44 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 33 r_string: \"bar\" r_string: \"foo\" } ");" is 171.,127
truth,com.google.common.truth.extensions.proto,ProtoSubject,isEqualTo,Complex Conditional,The conditional expression getSubject() == null || expected == null || getSubject().getClass() != expected.getClass() is complex.,132
truth,com.google.common.truth.extensions.proto,ProtoSubject,isNotEqualTo,Complex Conditional,The conditional expression getSubject() == null || expected == null || getSubject().getClass() != expected.getClass() is complex.,160
truth,com.google.common.truth.extensions.proto,ProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has all required fields set. Missing: %s"`getTrimmedDisplaySubject()`getSubject().findInitializationErrors());" is 147.,174
truth,com.google.common.truth.extensions.proto,MessageDifferencer,approximatelyEquivalent,Long Statement,The length of the statement "return newBuilder().setMessageFieldComparison(MessageFieldComparison.EQUIVALENT).setFloatComparison(FloatComparison.APPROXIMATE).build().compare(message1`message2);" is 164.,390
truth,com.google.common.truth.extensions.proto,MessageDifferencer,ignoringFields,Long Statement,The length of the statement "@Override public boolean isIgnored( Message message1` Message message2` FieldDescriptor fieldDescriptor` List<SpecificField> fieldPath){" is 136.,431
truth,com.google.common.truth.extensions.proto,MessageDifferencer,mergeCriteria,Long Statement,The length of the statement "@Override public boolean isIgnored( Message message1` Message message2` FieldDescriptor fieldDescriptor` List<SpecificField> fieldPath){" is 136.,442
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareWithFields,Long Parameter List,The method has 5 parameters. ,786
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compare,Complex Conditional,The conditional expression message1 == message2 && (reporter == null || !reportMatches) is complex.,805
truth,com.google.common.truth.extensions.proto,MessageDifferencer,checkSameDescriptor,Long Statement,The length of the statement "Preconditions.checkArgument(message1.getDescriptorForType().equals(message2.getDescriptorForType())`"Comparison between two messages with different descriptors: %s and %s"`message1.getClass()`message2.getClass());" is 213.,824
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareUnknownFields,Complex Conditional,The conditional expression identical && (reporter == null || !reportMatches) is complex.,839
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareUnknownFields,Complex Method,Cyclomatic complexity of the method is 20,839
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareUnknownFields,Long Parameter List,The method has 6 parameters. ,839
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRequestedFields,Long Parameter List,The method has 6 parameters. ,918
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareWithFieldsInternal,Complex Method,Cyclomatic complexity of the method is 18,955
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareWithFieldsInternal,Long Parameter List,The method has 6 parameters. ,955
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Parameter List,The method has 7 parameters. ,1048
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Statement,The length of the statement "Preconditions.checkArgument(field.getJavaType() == JavaType.MESSAGE`"FieldComparator should not return RECURSE for fields not being submessages!");" is 147.,1048
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Statement,The length of the statement "Message nextMessage1=field.isRepeated() ? (Message)message1.getRepeatedField(field`index1) : (Message)message1.getField(field);" is 127.,1048
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Statement,The length of the statement "Message nextMessage2=field.isRepeated() ? (Message)message2.getRepeatedField(field`index2) : (Message)message2.getField(field);" is 127.,1048
truth,com.google.common.truth.extensions.proto,MessageDifferencer,report,Long Parameter List,The method has 7 parameters. ,1076
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRepeatedField,Complex Conditional,The conditional expression count1 != count2 && reporter == null && !treatedAsSubset is complex.,1100
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRepeatedField,Complex Method,Cyclomatic complexity of the method is 18,1100
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRepeatedField,Long Parameter List,The method has 5 parameters. ,1100
truth,com.google.common.truth.extensions.proto,MessageDifferencer,matchRepeatedFieldIndices,Long Parameter List,The method has 6 parameters. ,1191
truth,com.google.common.truth.extensions.proto,MessageDifferencer,isMatch,Long Parameter List,The method has 7 parameters. ,1230
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,toIgnoreCriteria,Long Identifier,The length of the field matchStateAppliesForAllSubPaths is 31.,56
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,toIgnoreCriteria,Long Statement,The length of the statement "@Override public boolean isIgnored( Message message1` Message message2` @Nullable FieldDescriptor fieldDescriptor` List<SpecificField> fieldPath){" is 146.,56
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,isIgnored,Long Identifier,The length of the field matchStateAppliesForAllSubPaths is 31.,64
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,matchStateAppliesForAllSubPaths,Long Identifier,The length of the field matchStateAppliesForAllSubPaths is 31.,190
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringRepeatedFieldOrder,Long Statement,The length of the statement "return toBuilder().setIgnoreRepeatedFieldOrder(true).addUsingCorrespondenceString(".ignoringRepeatedFieldOrder()").build();" is 123.,97
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,withPartialScope,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(FieldScopeLogic.and(fieldScopeLogic()`partialScope.logic())).addUsingCorrespondenceFieldScopeString(".withPartialScope(%s)"`partialScope).build();" is 184.,111
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFields,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(fieldScopeLogic().ignoringFields(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers).build();" is 171.,118
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(fieldScopeLogic().ignoringFieldDescriptors(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDescriptors(%s)"`fieldDescriptors).build();" is 203.,125
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldScope,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(FieldScopeLogic.and(fieldScopeLogic()`FieldScopeLogic.not(fieldScope.logic()))).addUsingCorrespondenceFieldScopeString(".ignoringFieldScope(%s)"`fieldScope).build();" is 203.,133
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,makeMessageDifferencer,Long Statement,The length of the statement "return MessageDifferencer.newBuilder().setMessageFieldComparison(ignoreFieldAbsence() ? MessageDifferencer.MessageFieldComparison.EQUIVALENT : MessageDifferencer.MessageFieldComparison.EQUAL).setRepeatedFieldComparison(ignoreRepeatedFieldOrder() ? MessageDifferencer.RepeatedFieldComparison.AS_SET : MessageDifferencer.RepeatedFieldComparison.AS_LIST).setReportMatches(!reportMismatchesOnly()).addIgnoreCriteria(fieldScopeLogic().toIgnoreCriteria(descriptor)).build();" is 468.,145
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toCorrespondence,Long Statement,The length of the statement "return "is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to";" is 123.,164
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toString,Long Statement,The length of the statement "return "is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to";" is 123.,174
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,create,Long Identifier,The length of the parameter usingCorrespondenceStringFunction is 33.,50
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(message)`Functions.constant(String.format("FieldScopes.fromSetFields({%s})"`message.toString())));" is 141.,65
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none()`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`messages.toString())));" is 125.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "checkArgument(optDescriptor.isPresent()`"Cannot create scope from messages with different descriptors: %s"`getDescriptors(messages));" is 133.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(builder.build())`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`formatList(messages))));" is 149.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFields,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.ignoringFields(%s)"`fieldNumbers));" is 149.,100
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.ignoringFieldDescriptors(%s)"`join(fieldDescriptors))));" is 181.,106
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.allowingFields(%s)"`fieldNumbers));" is 150.,113
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.allowingFieldDescriptors(%s)"`join(fieldDescriptors))));" is 182.,119
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFields,Long Statement,The length of the statement "return create(logic().ignoringFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers));" is 129.,157
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFieldDescriptors,Long Statement,The length of the statement "return create(logic().ignoringFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDesciptors(%s)"`fieldDescriptors));" is 160.,165
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFields,Long Statement,The length of the statement "return create(logic().allowingFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".allowingFields(%s)"`fieldNumbers));" is 129.,175
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFieldDescriptors,Long Statement,The length of the statement "return create(logic().allowingFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".allowingFieldDescriptors(%s)"`fieldDescriptors));" is 161.,183
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,addUsingCorrespondenceFieldDescriptorsString,Long Statement,The length of the statement "return FieldScopeUtil.concat(usingCorrespondenceStringFunction()`Functions.constant(String.format(fmt`join(fieldDescriptors))));" is 128.,200
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "TestMessageLite2WithRequiredFields withoutRequiredFields=TestMessageLite2WithRequiredFields.newBuilder().setOptionalString("foo").buildPartial();" is 145.,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto2Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite2.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite2.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite2.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite2.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite2.newBuilder().buildPartial()).setMessageWithoutRequiredFields(withoutRequiredFields).build();" is 672.,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto3Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite3.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite3.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite3.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite3.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite3.newBuilder().buildPartial()).build();" is 617.,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`"Not true that \\(.*\\) proto is equal to the expected \\(.*\\) object\\.\\s*" + "They are not of the same class\\.");" is 132.,174
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that protos are different\\.\\s*Both are \\(%s\\) <.*optional_int: 3.*>\\."`Pattern.quote(config.nonEmptyMessage().getClass().getName())));" is 177.,174
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testHasAllRequiredFields_failures,Long Statement,The length of the statement "expectRegex(e`"Not true that <.*> has all required fields set\\.\\s*" + "\\(Lite runtime could not determine which fields were missing\\.\\)");" is 143.,211
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testDefaultInstance_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that \\(%s\\) <.*\\[empty proto\\].*> is not a default " + "proto instance\\.\\s*It has no set values\\."`Pattern.quote(config.defaultInstance().getClass().getName())));" is 207.,238
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,expectRegex,Long Statement,The length of the statement "expect.withFailureMessage(String.format("Expected <%s> to match '%s'."`regex`e.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(e.getMessage()).matches()).isTrue();" is 181.,294
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,expectNoRegex,Long Statement,The length of the statement "expect.withFailureMessage(String.format("Expected <%s> to match '%s'."`regex`e.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(e.getMessage()).matches()).isFalse();" is 182.,301
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,getTrimmedToString,Long Statement,The length of the statement "String objectToString=String.format("# %s@%s"`messageLite.getClass().getName()`Integer.toHexString(messageLite.hashCode()));" is 124.,74
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that (%s) %s is equal to the expected (%s) object. " + "They are not of the same class."`actual().getClass().getName()`internalCustomName() != null ? internalCustomName() + " (proto)" : "proto"`expected.getClass().getName());" is 254.,97
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualTo,Long Statement,The length of the statement "failureStrategy.failComparing("Not true that protos are equal:"`String.format("(%s) %s"`expected.getClass().getName()`theirString)`String.format("(%s) %s"`actual().getClass().getName()`ourString));" is 197.,97
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that protos are different. Both are (%s) <%s>."`actual().getClass().getName()`getTrimmedToString(actual()));" is 137.,141
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualToDefaultInstance,Long Statement,The length of the statement "failWithRawMessage("Not true that (%s) %s is not a default proto instance. It has no set values."`actual().getClass().getName()`getTrimmedDisplaySubject());" is 156.,175
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has all required fields set. " + "(Lite runtime could not determine which fields were missing.)"`getTrimmedDisplaySubject());" is 162.,184
