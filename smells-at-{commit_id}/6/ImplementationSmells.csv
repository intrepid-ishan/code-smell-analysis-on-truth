Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[jan=1` feb=2]>. " + "It has unexpected items <[march=3]>");" is 151.,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[feb=2` jan=1]>. " + "It has unexpected items <[march=3]>");" is 151.,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly these elements in order " + "<[jan=1` march=3` feb=2]>");" is 147.,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessage("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 151.,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,170
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "The subject is missing the following entries: {april=4} and " + "has the following extra entries: {feb=2} and "+ "has the following different entries: {march=(5` 3)}");" is 287.,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "The subject has the following different entries: {march=(4` 3)}");" is 183.,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,216
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that foo (<{jan=1` feb=2` march=3}>) is equal to <{jan=1` feb=2` march=4}>." + " The subject has the following different entries: {march=(4` 3)}");" is 189.,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,233
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "The subject has the following extra entries: {march=3}");" is 165.,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "The subject is missing the following entries: {march=3}");" is 166.,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "The subject is missing the following entries: {mar=3} " + "and has the following extra entries: {march=3}");" is 223.,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,302
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,302
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,323
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,334
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,361
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,361
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 146.,470
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <null=kluever>. " + "However` it has a mapping from <null> to <null>");" is 140.,485
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=null}> contains entry <a=A>. " + "However` it has a mapping from <a> to <null>");" is 125.,601
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=A}> contains entry <a=null>. " + "However` it has a mapping from <a> to <A>");" is 122.,616
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,630
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 192.,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 205.,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 136.,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,688
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,696
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failsMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,704
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 172.,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 128.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 128.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Empty catch clause,The method has an empty catch block.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(TestVerb.class.getMethods())).filter(new Predicate<Method>(){" is 131.,50
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 129.,50
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 13,46
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 12,46
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledCollections,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that crazy list (<[a` b` c]>) contains all of <[c` d]>. " + "It is missing <[d]>");" is 125.,81
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Long Statement,The length of the statement "assertThat(error).hasMessage("Not true that crazy list has values within 1.0E-7 of <[1.3` 1.0]>. " + "It differs at indexes <[1]>");" is 132.,94
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Magic Number,The method contains a magic number: 0.0000001f,94
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,51
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,61
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.0>");" is 150.,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.0,144
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has first element <1>. " + "It does contain this element` but the first element is <0>");" is 141.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has last element <1>. " + "It does contain this element` but the last element is <2>");" is 139.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has first element <1>. " + "It does not contain this element` and the first element is <0>");" is 139.,117
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has last element <1>. " + "It does not contain this element` and the last element is <0>");" is 137.,117
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,53
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,53
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,83
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,83
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <5> (java.lang.Integer) " + "is equal to <5> (com.google.common.truth.SubjectTest$IntWrapper)");" is 143.,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <ab> is the same instance as <ab>" + " (although their toString() representations are the same)");" is 138.,204
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithDifferentTypesAndSameToString,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <true> (java.lang.String) is the same" + " instance as <true> (java.lang.Boolean)");" is 124.,219
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <4.5> is an instance of <java.lang.Long>." + " It is an instance of <java.lang.Double>");" is 129.,476
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Magic Number,The method contains a magic number: 4.5,476
truth,com.google.common.truth,SubjectTest,isNotInstanceOfFail,Magic Number,The method contains a magic number: 5,494
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,688
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <Foo{nums=[1` 2]}> is equal to <Foo{nums=[1` 2]}> " + "(although their toString() representations are the same)");" is 161.,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1` 2` 3]> is equal to <[1` 2` 3]> " + "(although their toString() representations are the same)");" is 147.,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2L,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3L,741
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 12,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 13,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,54
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,54
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 12,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 13,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,89
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,89
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,141
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,141
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,176
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,176
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,204
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,213
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,222
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,67
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,80
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 5,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 5,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,154
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,223
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 163.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,246
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 166.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,276
truth,com.google.common.truth,MultisetSubjectTest,multisetIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,41
truth,com.google.common.truth,MultisetSubjectTest,multisetIsNotEmpty,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,79
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,98
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.Object> " + "is assignable to <class java.lang.String>");" is 121.,43
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversedDifferentTypes,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.String> " + "is assignable to <class java.lang.Exception>");" is 124.,56
truth,com.google.common.truth,AbstractArraySubjectTest,canBeUsedInSubjectFactories,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 5,42
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 5,54
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 3,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 5,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,69
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,69
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,147
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,163
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Float) is equal to <%s> (java.lang.Double)"`1.23f`1.23));" is 127.,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,358
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,379
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,401
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.POSITIVE_INFINITY+ ">");" is 127.,410
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,426
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.NEGATIVE_INFINITY+ ">");" is 127.,435
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,451
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,471
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,492
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,40
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,51
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,148
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,38
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,60
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,65
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5,85
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,323
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Long Method,The method has 114 lines of code.,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "expected:<[foobar]> but was:<[message]>");" is 147.,50
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_MessageHasNullMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <\"message\"> is null");" is 143.,65
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_Named_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for NPE(java.lang.NullPointerException): " + "expected:<[foobar]> but was:<[message]>");" is 152.,78
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_NullMessageHasMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <null> is equal to <\"message\">");" is 154.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first key <1>. " + "It does contain this key` but the first key is <0>");" is 135.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last key <1>. " + "It does contain this key` but the last key is <2>");" is 133.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has first key <1>. " + "It does not contain this key` and the first key is <0>");" is 129.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has last key <1>. " + "It does not contain this key` and the last key is <0>");" is 127.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=0>. " + "It does contain this entry` but the first entry is <0=0>");" is 145.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=0>. " + "It does contain this entry` but the last entry is <2=0>");" is 143.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the first entry is <0=0>");" is 173.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the last entry is <2=0>");" is 171.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has first entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the first entry is <0=0>");" is 191.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has last entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the last entry is <2=2>");" is 189.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has first entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the first entry is <0=0>");" is 204.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has last entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the last entry is <3=3>");" is 202.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has first entry <2=2>. " + "It does not contain this entry` and the first entry is <1=0>");" is 139.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has last entry <2=2>. " + "It does not contain this entry` and the last entry is <1=0>");" is 137.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isNotEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,420
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 153.,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 130.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,598
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 156.,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 133.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0);" is 128.,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 127.,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.0>");" is 190.,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 178.,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 168.,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1039
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1108
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,41
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,47
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,60
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,95
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,105
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[5]` [A]]>." + " It differs at index <[0][0]>");" is 128.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A` B]` [5]]> is equal to <[[A]` [5]]>." + " It differs at index <[0][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[A]` [5` 6]]>." + " It differs at index <[1][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,166
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,191
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,216
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(String[][]) [[A]` [B]]> is equal to <[[B]` [A]]>." + " It differs at index <[0][0]>");" is 128.,291
truth,com.google.common.truth,ObjectArraySubjectTest,SetArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 133.,308
truth,com.google.common.truth,ObjectArraySubjectTest,primitiveMultiDimensionalArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(int[][]) [[1` 2]` [3]` [4` 5` 6]]> " + "is equal to <[[1` 2]` [3]` [4` 5` 6` 7]]>. It differs at index <[2][3]>");" is 156.,330
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,105
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,121
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,91
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,91
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,AtomicLongMapSubjectTest,isEqualToFail,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{}> is equal to <{}> " + "(although their toString() representations are the same)");" is 133.,34
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,100
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,109
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,121
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,272
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,147
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,163
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Double) is equal to <%s> (java.lang.Float)"`1.23`1.23f));" is 127.,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,358
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,379
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,401
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.POSITIVE_INFINITY+ ">");" is 128.,410
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,426
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.NEGATIVE_INFINITY+ ">");" is 128.,435
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,451
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,471
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,492
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2L,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,36
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2L,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,46
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2L,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,65
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2L,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2L,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5L,85
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,64
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 3,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 5,93
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 5,103
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 3,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 3,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 4,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains all of <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 131.,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains all of <[1` null` null` 3]>. " + "It is missing <[null]>");" is 123.,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 7,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithElementsThatThrowWhenYouCallHashCode,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[HCT` HCT]> contains exactly <[HCT]>. " + "It has unexpected items <[HCT]>");" is 125.,476
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInErrorMessageIsOrdered,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[foo OR bar]> contains exactly <[foo` bar]>. " + "It is missing <[foo` bar]> and has unexpected items <[foo OR bar]>");" is 160.,531
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3]>. " + "It is missing <[2 [2 copies]]>");" is 126.,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 132.,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 2` 2` 2` 3]> contains exactly <[1` 2` 2` 3]>. " + "It has unexpected items <[2 [2 copies]]>");" is 142.,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains exactly <[1` null` null` 3]>. " + "It is missing <[null]>");" is 124.,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 4]>. " + "It is missing <[4]> and has unexpected items <[3]>");" is 140.,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 3]> contains exactly <[1` 2` 4` 4]>. " + "It is missing <[4 [2 copies]]> and has unexpected items <[3 [2 copies]]>");" is 168.,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2` 3` 4]]>. " + "It is missing <[[1` 2` 3` 4]]> and has unexpected items <[1` 2` 3` 4]>. " + "Passing an iterable to the varargs method containsExactly(Object...) is "+ "often not the correct thing to do. Did you mean to call "+ "containsExactlyElementsIn(Iterable) instead?");" is 355.,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1` 2` 3]>. " + "It has unexpected items <[4]>");" is 122.,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2]` [3` 4]]>. " + "It is missing <[[1` 2]` [3` 4]]> and has unexpected items <[1` 2` 3` 4]>");" is 172.,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1]>. " + "It has unexpected items <[2` 3` 4]>");" is 122.,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 2,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 3,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 4,810
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 4,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,828
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,828
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 2,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 4,837
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 3,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 4,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,855
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,855
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,933
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,933
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Magic Number,The method contains a magic number: 456,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 134.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Magic Number,The method contains a magic number: 2345,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,990
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Statement,The length of the statement "IterableSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 148.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 123,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 456,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Magic Number,The method contains a magic number: 2345,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 178.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Magic Number,The method contains a magic number: 456,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 207.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1100
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 226.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 201.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 201.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 207.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 268.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 508.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` 0x80` +256]> contains` in order` exactly one element " + "that parses to each element of <[64` 128` 256` 128]>");" is 166.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 64,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 256,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 226.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 245.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 220.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` +64` fi` fo` 0x80` +256` fum]> contains` in order` " + "at least one element that parses to each element of <[64` 128` 256` 128]>");" is 185.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Magic Number,The method contains a magic number: 128,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128).inOrder();" is 123.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 64,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 256,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 64,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 256,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Magic Number,The method contains a magic number: 128,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 255,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 256,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 257,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 180.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 255,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 257,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 255,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 256,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 257,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 193.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 255,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 257,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 255,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 256,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 257,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains at least one element that parses to each of " + "<[256]>");" is 203.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains at least one element that parses to each of " + "<[null]>");" is 205.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 255,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 257,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 255,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 256,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 257,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains at least one element that " + "parses to each of <[256]>");" is 211.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains at least one element that " + "parses to each of <[null]>");" is 213.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 255,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 257,1694
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,138
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,138
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isNotEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,420
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 152.,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 129.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,598
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 155.,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 132.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0f);" is 132.,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 130.,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of <2.0>");" is 198.,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <Infinity>");" is 186.,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <NaN>");" is 176.,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1037
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,1084
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,1091
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1108
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,43
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,43
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,59
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,59
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 197.,59
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 171.,100
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,128
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,139
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that " + "<Values for key <1> (<[5]>) in multymap (<{1=[5]}>)> contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 187.,156
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 5,156
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 4,156
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that " + "valuez (<Values for key <1> (<[5]>) in <{1=[5]}>>) contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 185.,171
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 5,171
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 4,171
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,186
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,186
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,196
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,196
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 123.,294
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 129.,308
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 126.,323
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,355
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,366
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,392
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,404
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 152.,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,414
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 142.,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,433
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 154.,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,454
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 196.,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,499
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(e.getMessage()).startsWith(String.format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 124.,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,518
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 158.,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,537
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,558
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 220.,567
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,567
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 225.,585
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,585
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 156.,603
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,603
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,620
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,629
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,638
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 215.,647
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,647
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,equals,Long Statement,The length of the statement "return this.message.equals(that.message()) && (this.cause == null ? that.cause() == null : this.cause.equals(that.cause()));" is 124.,42
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,hashCode,Magic Number,The method contains a magic number: 1000003,55
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,hashCode,Magic Number,The method contains a magic number: 1000003,55
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,84
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,84
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,84
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,94
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,94
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Duplicate keys ([jan x 2` feb x 2]) cannot be passed to containsExactly().");" is 126.,108
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[jan=1` feb=2` march=3]> contains exactly <[jan=1` feb=2]>. " + "It has unexpected items <[march=3]>");" is 185.,122
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,122
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 3,122
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,122
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[jan=1` feb=2` march=3]> contains exactly <[feb=2` jan=1]>. " + "It has unexpected items <[march=3]>");" is 185.,136
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,136
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 3,136
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,136
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[jan=1` feb=2` march=3]> contains exactly these elements in order " + "<[jan=1` march=3` feb=2]>");" is 181.,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,150
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 167.,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,169
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,169
truth,com.google.common.truth,MapSubjectTest,containsExactly_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[jan=1` feb=2]> contains exactly <[jan=1` feb=2]>. It is missing " + "<[jan=1` feb=2] (Map.Entry<java.lang.String` java.lang.Integer>)> and has " + "unexpected items "+ "<[jan=1` feb=2] (Map.Entry<java.lang.String` java.lang.Long>)>");" is 317.,190
truth,com.google.common.truth,MapSubjectTest,containsExactly_failsWithSameToString,Magic Number,The method contains a magic number: 2L,190
truth,com.google.common.truth,MapSubjectTest,containsExactly_failsWithSameToString,Magic Number,The method contains a magic number: 2,190
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "The subject is missing the following entries: {april=4} and " + "has the following extra entries: {feb=2} and "+ "has the following different entries: {march=(5` 3)}");" is 321.,213
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,213
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,213
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,213
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,213
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "The subject has the following different entries: {march=(4` 3)}");" is 217.,228
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,228
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,228
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,228
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,228
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that foo (<{jan=1` feb=2` march=3}>) is equal to <{jan=1` feb=2` march=4}>." + " The subject has the following different entries: {march=(4` 3)}");" is 223.,241
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,241
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,241
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,241
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,241
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "The subject has the following extra entries: {march=3}");" is 199.,254
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,254
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,254
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,254
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "The subject is missing the following entries: {march=3}");" is 200.,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "The subject is missing the following entries: {mar=3} " + "and has the following extra entries: {march=3}");" is 257.,280
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,280
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,280
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,280
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,280
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is not equal to <{jan=1` feb=2` march=3}>");" is 151.,294
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,312
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,321
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,336
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,336
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,336
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,336
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,346
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,346
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=value1` 2=value2` 1=value3}> contains key <1 (java.lang.Integer)>. " + "However` it does contain keys <[1 (java.lang.Long)` 1 (java.lang.String)]>.");" is 235.,379
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,379
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithNullStringAndNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=value1}> contains key <null (null type)>. However` " + "it does contain keys <[null] (java.lang.String)>.");" is 196.,392
truth,com.google.common.truth,MapSubjectTest,doesNotContainKeyFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=kluever}> does not contain key <kurt>");" is 128.,419
truth,com.google.common.truth,MapSubjectTest,doesNotContainNullKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=null}> does not contain key <null>");" is 125.,428
truth,com.google.common.truth,MapSubjectTest,containsEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=kluever}> contains entry <greg=kick>");" is 127.,444
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfKey,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=value1` 2=value2}> contains entry " + "<1=value1 (Map.Entry<java.lang.Integer` java.lang.String>)>. " + "However` it does contain keys <[1] (java.lang.Long)>.");" is 318.,453
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfKey,Magic Number,The method contains a magic number: 2L,453
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfValue,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=null}> contains entry <1=null " + "(Map.Entry<java.lang.Integer` null type>)>. However` it does contain values " + "<[null] (java.lang.String)>.");" is 304.,468
truth,com.google.common.truth,MapSubjectTest,containsNullKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=kluever}> contains entry <null=null>");" is 127.,480
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 187.,496
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=null}> contains entry <null=kluever>. " + "However` it has a mapping from <null> to <null>");" is 181.,508
truth,com.google.common.truth,MapSubjectTest,doesNotContainEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=kluever}> does not contain entry <kurt=kluever>");" is 138.,529
truth,com.google.common.truth,MapSubjectTest,doesNotContainNullEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=null}> does not contain entry <null=null>");" is 132.,546
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=A}> contains entry <a=a>. " + "However` it has a mapping from <a> to <A>");" is 160.,596
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=null}> contains entry <a=A>. " + "However` it has a mapping from <a> to <null>");" is 166.,607
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=A}> contains entry <a=null>. " + "However` it has a mapping from <a> to <A>");" is 163.,619
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,630
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 128.,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 233.,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`456);" is 128.,654
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 246.,654
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,654
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 128.,670
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 177.,670
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,670
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,685
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,693
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failsMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,701
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`456);" is 134.,709
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 213.,709
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,709
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,724
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,724
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,732
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,732
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,732
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456);" is 130.,741
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 291.,741
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,741
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 150.,757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 393.,757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"cab"`123);" is 140.,775
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 424.,775
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,775
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,775
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`321);" is 140.,793
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 424.,793
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,793
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,793
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 150.,811
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 271.,811
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,811
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,811
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,828
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,828
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,828
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,828
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,828
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Empty catch clause,The method has an empty catch block.,840
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,840
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,840
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,840
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,852
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,852
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,871
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 291.,871
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,871
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,888
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 393.,888
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,888
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,888
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,888
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,907
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 424.,907
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,907
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,907
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,926
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 424.,926
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,926
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,926
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 148.,945
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 271.,945
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,945
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,945
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,963
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,963
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,963
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,963
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,963
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchStandardSubjectBuilderInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(StandardSubjectBuilder.class.getMethods())).filter(new Predicate<Method>(){" is 145.,51
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchStandardSubjectBuilderInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 129.,51
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 13,45
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 12,45
truth,com.google.common.truth,RelabeledSubjectsTest,relabeledBooleans,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Foo (<false>) was expected to be true` but was false");" is 122.,54
truth,com.google.common.truth,RelabeledSubjectsTest,relabeledObject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Not true that Foo (<\"a string\">) is an instance of <java.lang.Integer>");" is 141.,63
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledCollections,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that crazy list (<[a` b` c]>) contains all of <[c` d]>. " + "It is missing <[d]>");" is 159.,74
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that crazy list (<[1.3` 1.1]>) contains exactly one element that is a " + "finite number within 1.0E-7 of each element of <[1.3` 1.0]>. It is missing an " + "element that is a finite number within 1.0E-7 of <1.0> and has unexpected "+ "elements <[1.1]>");" is 331.,88
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Magic Number,The method contains a magic number: 1.0E-7,88
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Magic Number,The method contains a magic number: 1.3f,88
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveLongArrays,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("crazy list (<[123` 456]>) should have contained <789>");" is 123.,106
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveLongArrays,Magic Number,The method contains a magic number: 789L,106
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledObjectArrays,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("crazy list (<[cat` dog]>) should have contained <rabbit>");" is 126.,115
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,53
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,63
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,76
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,91
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,106
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,115
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,115
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,125
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,125
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,125
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,125
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,125
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,139
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,139
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,139
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,139
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,139
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of(1.02`2.04`3.08)).comparingElementsUsing(tolerance(0.05)).contains(3.0);" is 121.,146
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.0>");" is 184.,146
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,146
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,146
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,146
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,146
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.0,146
truth,com.google.common.truth,PrimitiveCharArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(char[]) [a` q]> is equal to <[q` a]>");" is 122.,51
truth,com.google.common.truth,PrimitiveCharArraySubjectTest,isEqualTo_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: int[]` actual: char[]");" is 129.,59
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,38
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"kurt\"> has a length of 5. It is 4.");" is 122.,48
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,48
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,56
truth,com.google.common.truth,StringSubjectTest,stringMatchesPatternWithFail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"abcaaadev\"> fails to match <.*aaa.*>");" is 124.,225
truth,com.google.common.truth,StringSubjectTest,stringContainsMatchString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<\"aaa\"> should have contained a match for <.*b.*>");" is 121.,239
truth,com.google.common.truth,StringSubjectTest,stringContainsMatchPattern,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<\"aaa\"> should have contained a match for <.*b.*>");" is 121.,249
truth,com.google.common.truth,StringSubjectTest,stringDoesNotContainMatchString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<\"aba\"> should not have contained a match for <.*b.*>");" is 125.,259
truth,com.google.common.truth,StringSubjectTest,stringDoesNotContainMatchStringUsesFind,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<\"aba\"> should not have contained a match for <[b]>");" is 123.,269
truth,com.google.common.truth,StringSubjectTest,stringDoesNotContainMatchPattern,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<\"aba\"> should not have contained a match for <.*b.*>");" is 125.,277
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0` 1` 2]> has first element <1>. " + "It does contain this element` but the first element is <0>");" is 182.,96
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,96
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0` 1` 2]> has last element <1>. " + "It does contain this element` but the last element is <2>");" is 180.,106
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition_2,Magic Number,The method contains a magic number: 2,106
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0]> has first element <1>. " + "It does not contain this element` and the first element is <0>");" is 180.,116
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0]> has last element <1>. " + "It does not contain this element` and the last element is <0>");" is 178.,126
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,56
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,56
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,86
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,86
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <5> (java.lang.Integer) " + "is equal to <5> (com.google.common.truth.SubjectTest$IntWrapper)");" is 177.,149
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,149
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,149
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithObjects,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <Object 1> is the same instance as <Object 2>");" is 129.,192
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <ab> is the same instance as <ab>" + " (although their toString() representations are the same)");" is 179.,202
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithDifferentTypesAndSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <true> (java.lang.String) is the same" + " instance as <true> (java.lang.Boolean)");" is 165.,214
truth,com.google.common.truth,SubjectTest,isNotSameAsFailureWithNulls,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <null> is not the same instance as <null>");" is 125.,232
truth,com.google.common.truth,SubjectTest,isNotSameAsFailureWithSameObject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <Object 1> is not the same instance as <Object 1>");" is 133.,248
truth,com.google.common.truth,SubjectTest,isEqualToFailureWithDifferentTypesAndSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <true> (java.lang.String) is equal to" + " <true> (java.lang.Boolean)");" is 153.,359
truth,com.google.common.truth,SubjectTest,isNotEqualToFailureWithSameObject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <Object 1> is not equal to <Object 1>");" is 121.,401
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <4.5> is an instance of <java.lang.Long>." + " It is an instance of <java.lang.Double>");" is 170.,440
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Magic Number,The method contains a magic number: 4.5,440
truth,com.google.common.truth,SubjectTest,isNotInstanceOfFail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<5> expected not to be an instance of java.lang.Number` but was.");" is 134.,455
truth,com.google.common.truth,SubjectTest,isNotInstanceOfFail,Magic Number,The method contains a magic number: 5,455
truth,com.google.common.truth,SubjectTest,isInFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"x\"> is equal to any element in <[a` b` c]>");" is 130.,473
truth,com.google.common.truth,SubjectTest,isInNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <null> is equal to any element in <[a` b` c]>");" is 129.,491
truth,com.google.common.truth,SubjectTest,isInEmptyFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"b\"> is equal to any element in <[]>");" is 123.,499
truth,com.google.common.truth,SubjectTest,isAnyOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"x\"> is equal to any of <[a` b` c]>");" is 122.,517
truth,com.google.common.truth,SubjectTest,isAnyOfNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <null> is equal to any of <[a` b` c]>");" is 121.,535
truth,com.google.common.truth,SubjectTest,isNotInFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"b\"> is not in [a` b` c]. It was found at index 1");" is 136.,548
truth,com.google.common.truth,SubjectTest,isNotInNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <null> is not in [a` b` null]. It was found at index 2");" is 138.,561
truth,com.google.common.truth,SubjectTest,isNoneOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <\"b\"> is not in [a` b` c]. It was found at index 1");" is 136.,582
truth,com.google.common.truth,SubjectTest,isNoneOfNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <null> is not in [a` b` null]. It was found at index 2");" is 138.,595
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,615
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,615
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,629
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <Foo{nums=[1` 2]}> is equal to <Foo{nums=[1` 2]}> " + "(although their toString() representations are the same)");" is 195.,679
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,679
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,679
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> is equal to <[1` 2` 3]> " + "(although their toString() representations are the same)");" is 181.,692
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2,692
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2L,692
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3L,692
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 12,36
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 13,36
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,50
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,50
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageThat,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("This is a custom message: The subject was expected to be true` but was false");" is 128.,64
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 12,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 13,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,92
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,92
truth,com.google.common.truth,CustomFailureMessageTest,customMessage,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("This is a custom message: The subject was expected to be true` but was false");" is 128.,106
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,120
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,120
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,137
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,137
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,151
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,151
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageThat_withPlaceholders,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("This is a custom message: The subject was expected to be true` but was false");" is 128.,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,179
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,179
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,193
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,193
truth,com.google.common.truth,CustomFailureMessageTest,customMessage_withPlaceholders,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("This is a custom message: The subject was expected to be true` but was false");" is 128.,207
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,221
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,230
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,239
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"org.junit.Bar"`"com.google.testing.junit.Car"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Gar");" is 213.,37
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createCollapsedStackTraceElement("Testing framework"`5)`createStackTraceElement("com.example.Gar")});" is 219.,37
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"com.example.Helper"`"org.junit.Bar"`"com.example.Helper"`"com.google.testing.junit.Car"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Gar");" is 255.,60
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createStackTraceElement("junit.Foo")`createStackTraceElement("com.example.Helper")`createStackTraceElement("org.junit.Bar")`createStackTraceElement("com.example.Helper")`createCollapsedStackTraceElement("Testing framework"`3)`createStackTraceElement("com.example.Gar")});" is 389.,60
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Magic Number,The method contains a magic number: 3,60
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"org.junit.Bar"`"java.lang.reflect.Car"`"sun.reflect.Dar"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.google.common.truth.Gar"`"com.google.common.truth.Har"`"com.example.Jar");" is 284.,89
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createCollapsedStackTraceElement("Testing framework"`2)`createCollapsedStackTraceElement("Reflective call"`2)`createCollapsedStackTraceElement("Testing framework"`2)`createCollapsedStackTraceElement("Truth framework"`2)`createStackTraceElement("com.example.Jar")});" is 383.,89
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,StackTraceCleanerTest,removesTestingAndReflectiveFramesOnBottom,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.Foo"`"com.example.Bar"`"sun.reflect.Car"`"org.junit.Dar"`"java.lang.reflect.Far"`"junit.Gar"`"com.google.testing.junit.Har"`"java.lang.reflect.Jar"`"java.lang.reflect.JarJar"`"com.google.testing.junit.Kar");" is 270.,132
truth,com.google.common.truth,StackTraceCleanerTest,removesTestingAndReflectiveFramesOnBottom,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.Foo")`createStackTraceElement("com.example.Bar")});" is 160.,132
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.common.truth.MyTest")});" is 132.,157
truth,com.google.common.truth,StackTraceCleanerTest,createCollapsedStackTraceElement,Long Statement,The length of the statement "return new StackTraceElement("[[" + frameworkName + ": "+ collapsed+ " frames collapsed ("+ StackTraceCleaner.CLEANER_LINK+ ")]]"`""`""`0);" is 139.,267
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,41
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,41
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,70
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,70
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,70
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,81
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,81
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,81
truth,com.google.common.truth,ComparableSubjectTest,isEquivalentAccordingToCompareTo,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<2.0> should have had the same value as <2.1> (scale is ignored)");" is 134.,92
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 5,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsSmaller,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsSmaller,Magic Number,The method contains a magic number: 4,115
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 5,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsGreater,Magic Number,The method contains a magic number: 4,133
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsGreater,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,152
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,152
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,152
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,152
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,152
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,152
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,195
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,195
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,195
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,195
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,201
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,201
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,219
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,219
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,242
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 163.,242
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,242
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,272
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 166.,272
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,272
truth,com.google.common.truth,MultisetSubjectTest,multisetIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,44
truth,com.google.common.truth,MultisetSubjectTest,multisetIsNotEmpty,Magic Number,The method contains a magic number: 5,53
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,68
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,68
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,87
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,87
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[kurt x 2` kluever]> has a count for <kurt> of <3>. It is <2>");" is 146.,97
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,97
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <class java.lang.Object> " + "is assignable to <class java.lang.String>");" is 155.,45
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversedDifferentTypes,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <class java.lang.String> " + "is assignable to <class java.lang.Exception>");" is 158.,55
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<10> should have had the same value as <3> (scale is ignored)");" is 131.,49
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,49
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,49
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<10> should have had the same value as <3> (scale is ignored)");" is 131.,59
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,59
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<10> should have had the same value as <3> (scale is ignored)");" is 131.,68
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,68
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,68
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_string,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<10> should have had the same value as <3> (scale is ignored)");" is 131.,77
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,52
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,66
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 166.,66
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,83
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,83
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,97
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,97
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,114
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,174
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,190
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,206
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,206
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,206
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,206
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,219
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,287
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,312
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> (java.lang.Float) is equal to <%s> (java.lang.Double)"`1.23f`1.23));" is 168.,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,FloatSubjectTest,assertThatIsEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,354
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,366
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,366
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,366
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,366
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,366
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,377
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,389
truth,com.google.common.truth,FloatSubjectTest,assertThatIsZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,400
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,411
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNonZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,422
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,433
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,442
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`"Not true that testValue (<" + value + ">) is equal to <"+ Float.POSITIVE_INFINITY+ ">");" is 123.,442
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,455
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,464
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`"Not true that testValue (<" + value + ">) is equal to <"+ Float.NEGATIVE_INFINITY+ ">");" is 123.,464
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,477
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,486
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,498
truth,com.google.common.truth,FloatSubjectTest,assertThatIsFiniteFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,509
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,520
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,531
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,44
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,44
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,53
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,53
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,TableSubjectTest,containsFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> contains mapping for row/column <row> <row>");" is 145.,93
truth,com.google.common.truth,TableSubjectTest,doesNotContainFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> does not contain mapping for " + "row/column <row> <col>");" is 158.,111
truth,com.google.common.truth,TableSubjectTest,containsCellFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> contains cell <(row`row)=val>");" is 131.,129
truth,com.google.common.truth,TableSubjectTest,doesNotContainCellFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> does not contain cell <(row`col)=val>");" is 139.,151
truth,com.google.common.truth,ExpectFailureTest,expectFail_notEquals,Magic Number,The method contains a magic number: 4,32
truth,com.google.common.truth,ExpectFailureTest,expectFail_notEquals,Magic Number,The method contains a magic number: 4,32
truth,com.google.common.truth,ExpectFailureTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,ExpectFailureTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnSuccess,Magic Number,The method contains a magic number: 4,62
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnSuccess,Magic Number,The method contains a magic number: 4,62
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultipleFailures,Magic Number,The method contains a magic number: 5,70
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultipleFailures,Magic Number,The method contains a magic number: 4,70
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Magic Number,The method contains a magic number: 4,78
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Magic Number,The method contains a magic number: 4,78
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings_thatFail,Magic Number,The method contains a magic number: 5,86
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings_thatFail,Magic Number,The method contains a magic number: 4,86
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,93
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,93
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,35
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,35
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,35
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,35
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,40
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,47
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,47
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,47
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,58
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,79
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,87
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,87
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(int[]) [2` 3]> is equal to <[3` 2]>");" is 121.,100
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,100
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,100
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,100
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,100
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: int[]");" is 129.,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,116
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,116
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,121
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,121
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,121
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,121
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,126
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,126
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,131
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,131
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,131
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,131
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,39
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,59
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,59
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,64
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,64
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,64
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,72
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail_actualNull,Magic Number,The method contains a magic number: 5,94
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail_expectNull,Magic Number,The method contains a magic number: 5,102
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,110
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,110
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,110
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,117
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,117
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,117
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,130
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,130
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,136
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,136
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,136
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,136
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,136
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,136
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,143
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,143
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,143
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,143
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,143
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,143
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,198
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,198
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,206
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,206
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,235
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,235
truth,com.google.common.truth,IntegerSubjectTest,overflowOnPrimitives_shouldBeEqualAfterCast_min,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <-2147483648> is not equal to <-2147483648>");" is 127.,268
truth,com.google.common.truth,IntegerSubjectTest,overflowOnPrimitives_shouldBeEqualAfterCast_max,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <2147483647> is not equal to <2147483647>");" is 125.,276
truth,com.google.common.truth,IntegerSubjectTest,overflowBetweenIntegerAndLong_shouldBeDifferent_min,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <-2147483648> is equal to <-9223372036854775808>");" is 132.,284
truth,com.google.common.truth,IntegerSubjectTest,overflowBetweenIntegerAndLong_shouldBeDifferent_max,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <2147483647> is equal to <9223372036854775807>");" is 130.,292
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,300
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,300
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,300
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,320
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,320
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,320
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,340
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_long,Magic Number,The method contains a magic number: 42,361
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_long,Magic Number,The method contains a magic number: 42L,361
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_Long,Magic Number,The method contains a magic number: 42,369
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_Long,Magic Number,The method contains a magic number: 42L,369
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_long,Magic Number,The method contains a magic number: 42,377
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_long,Magic Number,The method contains a magic number: 42L,377
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_Long,Magic Number,The method contains a magic number: 42,385
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_Long,Magic Number,The method contains a magic number: 42L,385
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_int,Magic Number,The method contains a magic number: 42L,393
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_int,Magic Number,The method contains a magic number: 42,393
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_Integer,Magic Number,The method contains a magic number: 42L,401
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_Integer,Magic Number,The method contains a magic number: 42,401
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_int,Magic Number,The method contains a magic number: 42L,409
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_int,Magic Number,The method contains a magic number: 42,409
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_Integer,Magic Number,The method contains a magic number: 42L,417
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_Integer,Magic Number,The method contains a magic number: 42,417
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_int,Magic Number,The method contains a magic number: 42,425
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_int,Magic Number,The method contains a magic number: 42,425
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_Integer,Magic Number,The method contains a magic number: 42,433
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_Integer,Magic Number,The method contains a magic number: 42,433
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_int,Magic Number,The method contains a magic number: 42,441
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_int,Magic Number,The method contains a magic number: 42,441
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_Integer,Magic Number,The method contains a magic number: 42,449
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Integer_Integer,Magic Number,The method contains a magic number: 42,449
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_long,Magic Number,The method contains a magic number: 42L,457
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_long,Magic Number,The method contains a magic number: 42L,457
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_Long,Magic Number,The method contains a magic number: 42L,465
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_Long,Magic Number,The method contains a magic number: 42L,465
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_long,Magic Number,The method contains a magic number: 42L,473
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_long,Magic Number,The method contains a magic number: 42L,473
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_Long,Magic Number,The method contains a magic number: 42L,481
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_Long_Long,Magic Number,The method contains a magic number: 42L,481
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_intToChar,Magic Number,The method contains a magic number: 42,489
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_intToChar,Magic Number,The method contains a magic number: 42,489
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_charToInt,Magic Number,The method contains a magic number: 42,498
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_charToInt,Magic Number,The method contains a magic number: 42,498
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object> actualFirst=new ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object>(){" is 150.,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object> expectedFirst=new ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object>(){" is 152.,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,523
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,523
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "expected:<[foobar]> but was:<[message]>");" is 165.,54
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_MessageHasNullMessage_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <\"message\"> is null");" is 161.,65
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_Named_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected message for NPE(java.lang.NullPointerException): " + "expected:<[foobar]> but was:<[message]>");" is 170.,74
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_NullMessageHasMessage_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <null> is equal to <\"message\">");" is 172.,84
truth,com.google.common.truth,ThrowableSubjectTest,hasCauseThat_message_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected cause for java.lang.Exception: Unexpected message for " + "java.io.IOException: expected:<[message]> but was:<[barfoo]>");" is 196.,114
truth,com.google.common.truth,ThrowableSubjectTest,hasCauseThat_instanceOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected cause for java.lang.Exception: Not true that <java.io.IOException: " + "barfoo> is an instance of <java.lang.RuntimeException>. " + "It is an instance of <java.io.IOException>");" is 252.,125
truth,com.google.common.truth,ThrowableSubjectTest,hasCauseThat_tooDeep_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected cause for java.lang.Exception: " + "Causal chain is not deep enough - add a .isNotNull() check?");" is 172.,137
truth,com.google.common.truth,ThrowableSubjectTest,hasCauseThat_deepNull_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Unexpected cause for java.lang.Exception: Unexpected cause for " + "java.lang.RuntimeException: Unexpected message for java.io.IOException: " + "expected:<[message]> but was:<[buzz]>");" is 248.,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_1,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has first key <1>. " + "It does contain this key` but the first key is <0>");" is 176.,96
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_1,Magic Number,The method contains a magic number: 2,96
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has last key <1>. " + "It does contain this key` but the last key is <2>");" is 174.,106
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_2,Magic Number,The method contains a magic number: 2,106
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent_1,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0}> has first key <1>. " + "It does not contain this key` and the first key is <0>");" is 170.,116
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0}> has last key <1>. " + "It does not contain this key` and the last key is <0>");" is 168.,126
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,136
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,136
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,136
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,144
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,144
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,144
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has first entry <1=0>. " + "It does contain this entry` but the first entry is <0=0>");" is 186.,183
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,183
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has last entry <1=0>. " + "It does contain this entry` but the last entry is <2=0>");" is 184.,193
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition_2,Magic Number,The method contains a magic number: 2,193
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has first entry <0=0>` the first key is <1>");" is 140.,203
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,203
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has last entry <0=0>` the last key is <2>");" is 138.,211
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey_2,Magic Number,The method contains a magic number: 2,211
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has first entry <1=1>` the first value is <0>");" is 142.,219
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,219
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has last entry <2=2>` the last value is <0>");" is 140.,227
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Magic Number,The method contains a magic number: 2,227
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Magic Number,The method contains a magic number: 2,227
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Magic Number,The method contains a magic number: 2,227
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has first entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the first entry is <0=0>");" is 214.,235
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has last entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the last entry is <2=0>");" is 212.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition_2,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=2}> has first entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the first entry is <0=0>");" is 232.,255
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,255
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=2}> has last entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the last entry is <2=2>");" is 230.,265
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Magic Number,The method contains a magic number: 10,265
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=1` 3=3}> has first entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the first entry is <0=0>");" is 245.,275
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,275
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,275
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,275
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,275
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=1` 3=3}> has last entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the last entry is <3=3>");" is 243.,289
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 10,289
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0}> has first entry <2=2>. " + "It does not contain this entry` and the first entry is <1=0>");" is 180.,303
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0}> has last entry <2=2>. " + "It does not contain this entry` and the last entry is <1=0>");" is 178.,313
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent_2,Magic Number,The method contains a magic number: 2,313
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent_2,Magic Number,The method contains a magic number: 2,313
truth,com.google.common.truth,PrimitiveBooleanArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(boolean[]) [true` false` true]> is equal to <[false` true` true]>");" is 151.,51
truth,com.google.common.truth,PrimitiveBooleanArraySubjectTest,isEqualTo_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: boolean[]");" is 133.,60
truth,com.google.common.truth,PrimitiveBooleanArraySubjectTest,isNotEqualTo_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(boolean[]) [true` false]> unexpectedly equal to [true` false].");" is 134.,83
truth,com.google.common.truth,PrimitiveBooleanArraySubjectTest,isNotEqualTo_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(boolean[]) [true` false]> unexpectedly equal to [true` false].");" is 134.,91
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Long Statement,The length of the statement "assertThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0)).isEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0));" is 155.,45
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2d,45
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4d,45
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2d,45
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4d,45
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2]> is equal to <[" + justOverTwoPointTwo + "]>");" is 146.,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> is equal to <[3.3` 2.2]>");" is 132.,60
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,60
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,60
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,60
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,60
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> is equal to <[2.2` 3.3` 4.4]>");" is 137.,68
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,68
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,68
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,68
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,68
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 4.4d,68
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> is equal to <[2.2]>");" is 127.,76
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,76
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,76
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,76
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_PlusMinusZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [0.0]> is equal to <[-0.0]>");" is 123.,84
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: double[]");" is 132.,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 2.2d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 5.4d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 2.2d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 5.4d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,106
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,106
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,106
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,106
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,106
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> is equal to <[2.2` " + roughly3point3 + "]>");" is 151.,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> is equal to <[3.3` 2.2]>");" is 132.,128
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,128
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,128
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,128
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,128
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Arrays are of different lengths. expected: [2.2` 3.3` 1.1]` actual [2.2` 3.3]");" is 147.,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Arrays are of different lengths. expected: [2.2]` actual [2.2` 3.3]");" is 137.,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: double[]");" is 132.,161
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,161
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,161
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,161
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`POSITIVE_INFINITY)).isEqualTo(array(2.2d`POSITIVE_INFINITY)`DEFAULT_TOLERANCE);" is 123.,173
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> is equal to <[2.2` Infinity]>");" is 142.,173
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,173
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,173
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_SameInfinity,Magic Number,The method contains a magic number: 2.2d,185
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> is equal to <[2.2` Infinity]>");" is 137.,194
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,194
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,194
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,194
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Arrays are of different lengths. expected: [Infinity]` actual [2.2` 3.3]");" is 142.,206
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,206
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,206
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [NaN]> is equal to <[NaN]>");" is 122.,218
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0)).isNotEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0));" is 180.,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(double[]) [2.2` 5.4` Infinity` -Infinity` NaN` 0.0` -0.0]> unexpectedly equal to " + "[2.2` 5.4` Infinity` -Infinity` NaN` 0.0` -0.0].");" is 206.,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2d,240
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2d,240
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,245
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,245
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,245
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,245
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2d,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3d,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2d,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3d,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 4.4d,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2d,255
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 3.3d,255
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2d,255
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 2.2d,265
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 3.3d,265
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 4.4d,265
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,270
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,270
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,270
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,270
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 2.2d,276
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 3.3d,276
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 2.2d,276
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 3.3d,276
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 1.1d,276
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Shorter,Magic Number,The method contains a magic number: 2.2d,282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Shorter,Magic Number,The method contains a magic number: 3.3d,282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Shorter,Magic Number,The method contains a magic number: 2.2d,282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentTypes,Magic Number,The method contains a magic number: 2.2d,288
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentTypes,Magic Number,The method contains a magic number: 3.3d,288
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(double[]) [2.2` 3.3]> unexpectedly equal to [2.2` 3.3].");" is 127.,294
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,294
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 3.3d,294
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,294
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 3.3d,294
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(double[]) [2.2` 3.3]> unexpectedly equal to [2.2` " + roughly3point3 + "].");" is 146.,306
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,306
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,306
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,306
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,306
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isNotEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,319
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,319
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,319
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,319
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,319
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(double[]) [2.2` 3.3]> unexpectedly equal to [2.2` 3.3].");" is 127.,327
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailSame,Magic Number,The method contains a magic number: 2.2d,327
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailSame,Magic Number,The method contains a magic number: 3.3d,327
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,337
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,337
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(double[]) [2.2` Infinity]> unexpectedly equal to [2.2` Infinity].");" is 137.,344
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,344
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_OneInfinity,Magic Number,The method contains a magic number: 2.2d,356
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_OneInfinity,Magic Number,The method contains a magic number: 3.3d,356
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_OneInfinity,Magic Number,The method contains a magic number: 2.2d,356
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,362
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithToleranceParameter_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,362
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,374
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,374
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,374
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,374
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 196.,386
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,386
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,386
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,386
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,386
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 185.,402
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,402
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,402
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,402
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,402
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 191.,416
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,416
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,416
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,416
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,416
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,416
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 181.,430
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,430
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,430
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,430
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`POSITIVE_INFINITY);" is 126.,440
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 192.,440
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,440
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,440
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 192.,454
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,454
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 187.,465
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,465
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,465
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,465
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 186.,479
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,479
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,479
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 172.,493
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3d,513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2d,513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,533
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,533
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,533
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,533
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2d,540
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4d,540
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,540
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,540
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0d,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0d,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 153.,554
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,554
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,554
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,554
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,554
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`roughly3point3));" is 136.,561
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 196.,561
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,561
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,561
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,561
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,561
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(3.3d`2.2d));" is 126.,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 185.,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`3.3d`1.1d));" is 131.,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 191.,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d));" is 121.,605
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 181.,605
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,605
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,605
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,605
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 152.,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 192.,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 139.,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 187.,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(POSITIVE_INFINITY));" is 134.,647
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 186.,647
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,647
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,647
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 172.,661
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,675
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,675
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,675
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,687
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,687
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,687
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,697
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,697
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,697
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,697
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,697
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,709
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,709
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,709
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,709
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` 3.3]>");" is 152.,721
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,721
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,721
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,721
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,721
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 171.,735
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,735
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,735
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,735
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,735
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,752
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,752
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,752
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,752
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,752
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` 3.3]>");" is 152.,760
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2d,760
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3d,760
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`POSITIVE_INFINITY);" is 129.,771
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 167.,771
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,771
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,771
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 167.,786
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,786
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 162.,798
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,798
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3d,798
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,798
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,813
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,813
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [NaN]> has values not within 5.0E-6 of <[NaN]>");" is 142.,819
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,828
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,828
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,828
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,839
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3d,839
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2d,839
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,850
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,850
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,850
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,850
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,850
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,861
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,861
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,861
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,861
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2d,869
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3d,869
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,869
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,869
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2d,877
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3d,877
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,877
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,877
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,885
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,885
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,885
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,885
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,885
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`3.3d));" is 129.,893
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` 3.3]>");" is 152.,893
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,893
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,893
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,893
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,893
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`roughly3point3));" is 139.,907
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 171.,907
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,907
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,907
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,907
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,907
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 156.,924
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,924
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,924
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,924
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,924
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 155.,932
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 167.,932
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,932
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,932
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 142.,947
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 162.,947
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,947
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3d,947
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,947
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,962
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,962
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(double[]) [NaN]> has values not within 5.0E-6 of <[NaN]>");" is 142.,970
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,983
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,983
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,983
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,996
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,996
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,996
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,1009
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,1009
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,1009
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,1009
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,1009
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0);" is 128.,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 127.,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0);" is 122.,1036
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.0>");" is 224.,1036
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,1036
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0,1036
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,1036
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`POSITIVE_INFINITY`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(POSITIVE_INFINITY);" is 129.,1054
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 212.,1054
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0,1054
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 202.,1070
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0,1070
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`Integer.MAX_VALUE + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(Integer.MAX_VALUE);" is 133.,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter((double)Long.MIN_VALUE`NEGATIVE_INFINITY)`3.0)).usingTolerance(1 << 12).contains(Long.MIN_VALUE);" is 128.,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`2.0 + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(BigInteger.valueOf(2));" is 123.,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`2.0 + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(BigDecimal.valueOf(2.0));" is 125.,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2L,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 12,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1126
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1126
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1126
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0,1135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0,1135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0`1.0));" is 144.,1147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0`99.99));" is 140.,1154
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number "+ "within "+ DEFAULT_TOLERANCE+ " of each element of <[2.0` 99.99]>. It is missing an element that is a finite "+ "number within "+ DEFAULT_TOLERANCE+ " of <99.99>");" is 349.,1154
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1154
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1154
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1154
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1154
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(1.0`2.0)).inOrder();" is 154.,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.0,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0`1.0)).inOrder();" is 148.,1184
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains` in order` at least one element that is a finite number "+ "within "+ DEFAULT_TOLERANCE+ " of each element of <[2.0` 1.0]>");" is 262.,1184
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1184
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0,1184
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1184
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99`2.0));" is 146.,1204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99`999.999));" is 144.,1211
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of any element in <[99.99` 999.999]>");" is 252.,1211
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1211
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1211
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1211
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 999.999,1211
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0`1.0`3.0));" is 150.,1229
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1229
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1229
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1229
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1229
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0`1.0));" is 140.,1236
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains exactly one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of each element of <[2.0` 1.0]>. It has unexpected elements <[3.0]>");" is 282.,1236
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1236
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1236
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1236
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(1.0`2.0`3.0)).inOrder();" is 160.,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.0,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.0,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0`1.0`3.0)).inOrder();" is 154.,1262
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains` in order` exactly one element that is a finite number "+ "within "+ DEFAULT_TOLERANCE+ " of each element of <[2.0` 1.0` 3.0]>");" is 266.,1262
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1262
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0,1262
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1262
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0,1262
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99`999.999));" is 151.,1282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 999.999,1282
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0`justOverTwoPlusTolerance`3.0)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99`2.0));" is 141.,1289
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains no element that is a finite number within "+ DEFAULT_TOLERANCE+ " of any element in <[99.99` 2.0]>. It contains at least one element that is a "+ "finite number within "+ DEFAULT_TOLERANCE+ " of each of <[2.0]>");" is 350.,1289
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1289
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1289
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1289
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1289
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1310
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0,1310
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1310
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 178.,1315
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1315
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0,1315
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1315
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value 9007199254740993 in assertion using exact double equality was a long " + "with an absolute value greater than 2^52 which has no exact double " + "representation");" is 227.,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact double equality was of unsupported type " + BigInteger.class + " (it may not have an exact double representation)");" is 205.,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact double equality was of unsupported type " + BigDecimal.class + " (it may not have an exact double representation)");" is 205.,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2L,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1331
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0,1378
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0,1383
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 168.,1388
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1388
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1398
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1398
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1398
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains at least one element that is exactly equal " + "to each element of <[2.0` 99.99]>. It is missing an element that is exactly " + "equal to <99.99>");" is 256.,1412
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1412
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1412
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1412
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1412
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1427
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.0,1427
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1427
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains` in order` at least one element that is " + "exactly equal to each element of <[2.0` 1.0]>");" is 201.,1432
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1432
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0,1432
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1432
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1447
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1447
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1447
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1447
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains at least one element that is exactly equal " + "to any element in <[99.99` 999.999]>");" is 195.,1452
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1452
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1452
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1452
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 999.999,1452
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1466
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1466
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1466
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1466
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains exactly one element that is exactly equal " + "to each element of <[2.0` 1.0]>. It has unexpected elements <[3.0]>");" is 225.,1471
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1471
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1471
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1471
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.0,1485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.0,1485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.0,1485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains` in order` exactly one element that is " + "exactly equal to each element of <[2.0` 1.0` 3.0]>");" is 205.,1493
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1493
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0,1493
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0,1493
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0,1493
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.0,1508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.0,1508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 999.999,1508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains no element that is exactly equal to any " + "element in <[99.99` 2.0]>. It contains at least one element that is exactly " + "equal to each of <[2.0]>");" is 261.,1513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.0,1513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1513
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.0,1513
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,37
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,37
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,42
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,49
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,54
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,62
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthMultiFail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(Object[][]) [[A]` [5]]> has length <1>");" is 124.,70
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,78
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,92
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,100
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(Object[]) [A` 5]> is equal to <[5` A]>. It differs at index <[0]>");" is 151.,114
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,114
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,114
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional_00,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[5]` [A]]>." + " It differs at index <[0][0]>");" is 169.,123
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional_01,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(Object[][]) [[A` B]` [5]]> is equal to <[[A]` [5]]>." + " It differs at index <[0][1]>");" is 172.,136
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional_11,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[A]` [5` 6]]>." + " It differs at index <[1][1]>");" is 172.,150
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,163
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,172
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,172
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,185
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,190
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,190
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEqualsMultiDimensional,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(Object[][]) [[A]` [5]]> unexpectedly equal to [[A]` [5]].");" is 129.,198
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,209
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSameMultiDimensional,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(Object[][]) [[A]` [5]]> unexpectedly equal to [[A]` [5]].");" is 129.,219
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalLength,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(String[]) [A` B]> has length 2. Expected length is 1");" is 124.,250
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalLengthMultiDimensional,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(String[][]) [[A]` [B]]> has length 2. Expected length is 1");" is 130.,258
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(String[]) [A` B]> is equal to <[B` A]>. It differs at index <[0]>");" is 151.,269
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(String[][]) [[A]` [B]]> is equal to <[[B]` [A]]>." + " It differs at index <[0][0]>");" is 169.,278
truth,com.google.common.truth,ObjectArraySubjectTest,SetArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "expectFailure.whenTesting().that(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 155.,295
truth,com.google.common.truth,ObjectArraySubjectTest,SetArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(Set[]) [[A]` [B]]> is equal to <[[B]` [A]]>. " + "It differs at index <[0]>");" is 161.,295
truth,com.google.common.truth,ObjectArraySubjectTest,primitiveMultiDimensionalArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(int[][]) [[1` 2]` [3]` [4` 5` 6]]> " + "is equal to <[[1` 2]` [3]` [4` 5` 6` 7]]>. It differs at index <[2][3]>");" is 197.,316
truth,com.google.common.truth,ObjectArraySubjectTest,primitiveMultiDimensionalArrayIsNotEqualTo_Fail_Equal,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(int[][]) [[1` 2]` [3]` [4` 5` 6]]> unexpectedly " + "equal to [[1` 2]` [3]` [4` 5` 6]].");" is 159.,335
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,104
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,121
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,34
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,34
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,39
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,46
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,46
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,46
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,46
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(long[]) [2` 3]> is equal to <[3` 2]>");" is 122.,51
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,51
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,51
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: int[]` actual: long[]");" is 129.,59
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,59
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,59
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,90
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,90
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,ExpectTest,expectFailWithExceptionNoMessage,Long Statement,The length of the statement "thrown.expectMessage("3. Failures occurred before an exception was thrown while the test was running: " + "java.lang.IllegalStateException");" is 141.,75
truth,com.google.common.truth,ExpectTest,expectFailWithExceptionWithMessage,Long Statement,The length of the statement "thrown.expectMessage("3. Failures occurred before an exception was thrown while the test was running: " + "java.lang.IllegalStateException: testing");" is 150.,88
truth,com.google.common.truth,ExpectTest,expectFailWithFailuresBeforeAssume,Long Statement,The length of the statement "thrown.expectMessage("3. Failures occurred before an assumption was violated: " + "com.google.common.truth.TruthJUnit$ThrowableAssumptionViolatedException: testing");" is 166.,114
truth,com.google.common.truth,AtomicLongMapSubjectTest,isEqualToFail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{}> is equal to <{}> " + "(although their toString() representations are the same)");" is 167.,37
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,95
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=1}> has a size of <2>. It is <1>");" is 123.,104
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,114
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=1}> has a sum of <2>. It is <1>");" is 122.,134
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,134
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainKeyFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=1}> does not contain key <kurt>");" is 122.,168
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,196
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,206
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,206
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=1}> does not contain entry <kurt=1>");" is 126.,214
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapLacksKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=1}> does not contain key <kurt>");" is 122.,234
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth,PrimitiveShortArraySubjectTest,asListWithoutCastingFails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 1` 0]> contains all of <[1` 0]>. It is missing " + "<[1` 0] (java.lang.Integer)>. However` it does contain " + "<[1 [2 copies]` 0] (java.lang.Short)>.");" is 239.,51
truth,com.google.common.truth,PrimitiveShortArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(short[]) [1` 0` 1]> is equal to <[0` 1` 1]>");" is 129.,62
truth,com.google.common.truth,PrimitiveShortArraySubjectTest,isEqualTo_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: short[]");" is 131.,70
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,52
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,66
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 166.,66
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,83
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,83
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,97
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,97
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,114
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,174
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,190
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,206
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,206
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,206
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,206
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,219
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,287
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,312
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> (java.lang.Double) is equal to <%s> (java.lang.Float)"`1.23`1.23f));" is 168.,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,337
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,337
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,355
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,367
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,367
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,367
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,367
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,367
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,378
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,390
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,401
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,412
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNonZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,423
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,434
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,443
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`"Not true that testValue (<" + value + ">) is equal to <"+ Double.POSITIVE_INFINITY+ ">");" is 124.,443
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,456
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,465
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "expectFailureWithMessage(callback`"Not true that testValue (<" + value + ">) is equal to <"+ Double.NEGATIVE_INFINITY+ ">");" is 124.,465
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,478
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,487
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,498
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsFiniteFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,509
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,520
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,531
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2L,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,36
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2L,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,46
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2L,63
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,63
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,63
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2L,71
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,71
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail_nullActual,Magic Number,The method contains a magic number: 5L,84
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail_nullExpected,Magic Number,The method contains a magic number: 5L,92
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,100
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,100
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,47
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,47
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> has a size of <4>. It is <3>");" is 124.,57
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,57
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,65
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,74
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,74
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[1` 2` 3` 2]> should have contained <2 (java.lang.Integer)> but doesn't. However` " + "it does contain <[2 [2 copies]] (java.lang.Long)>.");" is 208.,84
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2L,84
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 3L,84
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2L,84
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToStringAndNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[1` null]> should have contained <null (null type)> but doesn't. However` it does " + "contain <[null] (java.lang.String)>.");" is 194.,94
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,104
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,104
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 3,112
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 5,112
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 3,120
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 5,120
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,128
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,138
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,146
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,146
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,151
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[1` 2` 2` 3]> has the following duplicates: <[2 x 2]>");" is 124.,156
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,156
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,156
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,156
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,169
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,169
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains any of <[5` 6` 0]>");" is 123.,179
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,179
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,179
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,179
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains any of <[2` 3] (java.lang.Integer)>. " + "However` it does contain <[2` 3] (java.lang.Long)>.");" is 198.,187
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,187
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 3L,187
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 3,187
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3` 3]> contains any of <[2` 3` 3] (java.lang.Integer)>. " + "However` it does contain <[3 [2 copies]] (java.lang.Long)>.");" is 206.,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndNullInSubject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[null` abc]> contains any of <[def` null] (java.lang.String)>. " + "However` it does contain <[null (null type)]>.");" is 199.,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndNullInExpectation,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[null` abc]> contains any of " + "<[def (java.lang.String)` null (null type)]>. " + "However` it does contain <[null] (java.lang.String)>.");" is 223.,217
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,242
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 3,242
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,242
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,252
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,252
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,257
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,257
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains all of <[1` 2` 4]>. It is missing <[4]>");" is 144.,262
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,262
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 3,262
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,262
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 4,262
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithExtras,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[y` x]> contains all of <[x` y` z]>. It is missing <[z]>");" is 141.,270
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithExtraCopiesOfOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[y` x]> contains all of <[x` y` y]>. It is missing <[y]>");" is 141.,278
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains all of <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 172.,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,286
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains all of <[4` 4` 4]>. It is missing <[4 [3 copies]]>");" is 152.,300
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,300
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,300
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,300
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,300
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` null` 3]> contains all of <[1` null` null` 3]>. " + "It is missing <[null]>");" is 164.,309
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,309
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,309
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains all of <[1` 2]>. It is missing " + "<[1` 2] (java.lang.Integer)>. However` it does contain " + "<[1` 2] (java.lang.Long)>.");" is 224.,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2]> contains all of <[1` 1` 2]>. It is missing " + "<[1 [2 copies]` 2] (java.lang.Integer)>. However` it does contain " + "<[1` 2 [2 copies]] (java.lang.Long)>.");" is 252.,330
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,330
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,330
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,330
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[null` abc]> contains all of <[abc` null]>. It is missing " + "<[null (null type)]>. However` it does contain <[null] (java.lang.String)>.");" is 223.,341
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2` 3` 3]> contains all of <[2` 2` 3` 3]>. It is missing " + "<[2 (java.lang.Long)` 3 (java.lang.Integer) [2 copies]]>. However` it does " + "contain <[2 (java.lang.Integer)` 3 (java.lang.Long) [2 copies]]>.");" is 298.,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,351
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithEmptyString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[a` null]> contains all of <[\"\" (empty String)` null]>. " + "It is missing <[\"\" (empty String)]>");" is 185.,362
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,373
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,373
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,373
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,373
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,373
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,373
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,378
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 7,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,389
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` null` 3]> contains all elements in order <[null` 1` 3]>");" is 144.,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,403
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,403
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,403
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,403
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <BadIterable> contains all elements in order <[1` 3` null]>");" is 143.,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,445
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,445
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,445
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,445
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,445
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains none of <[1` 2` 4]>. It contains <[1` 2]>");" is 146.,450
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,450
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,450
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,450
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,450
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2` 3]> contains none of <[1` 2` 4]>. It contains <[1` 2]>");" is 149.,458
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,458
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,458
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,458
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,458
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,458
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains none of <[1` 2` 2` 4]>. It contains <[1` 2]>");" is 149.,467
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,467
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,467
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,467
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,467
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,467
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithEmptyString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains none of <[\"\" (empty String)` null]>. " + "It contains <[\"\" (empty String)]>");" is 177.,476
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,502
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,502
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,502
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,502
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,507
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,507
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,507
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,507
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,507
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,507
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,512
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,517
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,540
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,540
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithEmptyString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains exactly <[\"\" (empty String)]>. " + "It is missing <[\"\" (empty String)]>");" is 173.,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithEmptyStringAndUnexpectedItem,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[a` null]> contains exactly <[\"\" (empty String)]>. " + "It is missing <[\"\" (empty String)]> and has unexpected items <[a` null]>");" is 217.,566
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithEmptyStringAndMissingItem,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains exactly <[a` null]>. " + "It is missing <[a` null]> and has unexpected items <[\"\" (empty String)]>");" is 198.,577
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithElementsThatThrowWhenYouCallHashCode,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[HCT` HCT]> contains exactly <[HCT]>. " + "It has unexpected items <[HCT]>");" is 159.,588
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInErrorMessageIsOrdered,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[foo OR bar]> contains exactly <[foo` bar]>. " + "It is missing <[foo` bar]> and has unexpected items <[foo OR bar]>");" is 201.,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2` 4]>. It is missing <[4]>");" is 142.,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2]>. It has unexpected items <[3]>");" is 152.,657
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,657
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,657
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3]>. " + "It is missing <[2 [2 copies]]>");" is 167.,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,666
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 173.,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,676
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2` 2` 2` 3]> contains exactly <[1` 2` 2` 3]>. " + "It has unexpected items <[2 [2 copies]]>");" is 183.,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,686
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains exactly <[4` 4` 4]>. It is missing <[4 [3 copies]]>");" is 149.,700
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` null` 3]> contains exactly <[1` null` null` 3]>. " + "It is missing <[null]>");" is 165.,709
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,709
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,709
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2` 4]>. " + "It is missing <[4]> and has unexpected items <[3]>");" is 181.,719
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,719
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,719
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,719
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,719
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 3]> contains exactly <[1` 2` 4` 4]>. " + "It is missing <[4 [2 copies]]> and has unexpected items <[3 [2 copies]]>");" is 209.,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,729
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2]>. It is missing " + "<[1` 2] (java.lang.Integer)> and has unexpected items " + "<[1` 2] (java.lang.Long)>");" is 223.,739
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,739
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,739
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[null` 1` 2]>. It is missing " + "<[null (null type)` 1 (java.lang.Integer)` 2 (java.lang.Integer)]> and has " + "unexpected items <[1` 2] (java.lang.Long)>");" is 267.,750
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Magic Number,The method contains a magic number: 2L,750
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Magic Number,The method contains a magic number: 2,750
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` null` 2]>. It is missing " + "<[1 (java.lang.Integer)` null (null type)` 2 (java.lang.Long)]> and has " + "unexpected items <[1 (java.lang.Long)` 2 (java.lang.Integer)]>");" is 284.,761
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Magic Number,The method contains a magic number: 2,761
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Magic Number,The method contains a magic number: 2L,761
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2` 2]>. It is missing " + "<[1` 2 [2 copies]] (java.lang.Integer)> and has unexpected items " + "<[1` 2] (java.lang.Long)>");" is 237.,772
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,772
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,772
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,772
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` null` null` 2` 2]>. It is missing " + "<[1 (java.lang.Integer)` null (null type) [2 copies]` " + "2 (java.lang.Long) [2 copies]]> and has unexpected items "+ "<[1 (java.lang.Long)` 2 (java.lang.Integer)]>");" is 319.,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2` 3` 4]]>. " + "It is missing <[[1` 2` 3` 4]]> and has unexpected items <[1` 2` 3` 4]>. " + "Passing an iterable to the varargs method containsExactly(Object...) is "+ "often not the correct thing to do. Did you mean to call "+ "containsExactlyElementsIn(Iterable) instead?");" is 396.,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,795
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[1` 2` 3]>. " + "It has unexpected items <[4]>");" is 163.,808
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,808
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,808
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,808
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,808
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,808
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2]` [3` 4]]>. " + "It is missing <[[1` 2]` [3` 4]]> and has unexpected items <[1` 2` 3` 4]>");" is 213.,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,818
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[1]>. " + "It has unexpected items <[2` 3` 4]>");" is 163.,831
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,831
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,831
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,831
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,841
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,841
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,841
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,841
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,846
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,846
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,846
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,846
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` null` 3]> contains exactly these elements in order " + "<[null` 1` 3]>");" is 159.,851
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <BadIterable> contains exactly " + "these elements in order <[1` 3` null]>");" is 158.,874
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,874
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,874
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2]>. It has unexpected items <[3]>");" is 152.,898
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 2,898
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 3,898
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 2,898
truth,com.google.common.truth,IterableSubjectTest,iterator,Magic Number,The method contains a magic number: 2,902
truth,com.google.common.truth,IterableSubjectTest,iterator,Magic Number,The method contains a magic number: 3,902
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,920
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 2,941
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 3,941
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 4,941
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,948
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,948
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 4,948
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,955
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,955
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 2,964
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,964
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,964
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,964
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 4,964
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 3,971
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 2,971
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 4,971
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,978
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,978
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,1051
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,1051
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1122
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Magic Number,The method contains a magic number: 456,1122
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1130
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 175.,1130
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Magic Number,The method contains a magic number: 2345,1130
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1145
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,1153
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1153
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Statement,The length of the statement "IterableSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 148.,1153
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1153
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 456,1153
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1165
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Magic Number,The method contains a magic number: 2345,1165
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1173
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContain(456);" is 125.,1173
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 219.,1173
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Magic Number,The method contains a magic number: 456,1173
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1188
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1188
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,1188
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1188
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,1188
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1188
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1198
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1198
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1198
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1198
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1198
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1207
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1207
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1207
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1207
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1207
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1207
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 248.,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1225
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1243
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1243
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1253
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1253
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 267.,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1267
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 242.,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1285
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 242.,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1303
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 248.,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1321
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 309.,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1339
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 549.,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1359
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1380
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1401
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 151.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` 0x80` +256]> contains` in order` exactly one element " + "that parses to each element of <[64` 128` 256` 128]>");" is 207.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1440
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,1440
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1449
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,1449
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1449
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1449
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,1449
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1449
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1458
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,1458
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1458
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,1458
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1458
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128);" is 137.,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1466
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1487
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,1487
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1495
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,1495
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1505
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 64,1505
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1505
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 256,1505
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1505
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1516
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1516
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1516
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1516
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1516
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1526
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 267.,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1542
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 286.,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1561
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 261.,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1580
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 522.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected).inOrder();" is 139.,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` +64` fi` fo` 0x80` +256` fum]> contains` in order` " + "at least one element that parses to each element of <[64` 128` 256` 128]>");" is 226.,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1620
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1638
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Magic Number,The method contains a magic number: 128,1638
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1647
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128).inOrder();" is 123.,1647
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 64,1647
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1647
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 256,1647
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1647
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1657
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 64,1657
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1657
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 256,1657
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1657
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128);" is 135.,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 522.,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1666
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1686
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Magic Number,The method contains a magic number: 128,1686
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 255,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 256,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 257,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1702
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyOf(255`256`257);" is 132.,1702
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 221.,1702
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1702
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1702
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1702
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1718
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 255,1718
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 257,1718
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1726
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 255,1726
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 256,1726
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 257,1726
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1735
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyIn(expected);" is 129.,1735
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 234.,1735
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1735
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1735
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1735
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1753
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 255,1753
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 257,1753
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1762
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 255,1762
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 256,1762
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 257,1762
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1771
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(255`256`257);" is 133.,1771
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains at least one element that parses to each of " + "<[256]>");" is 244.,1771
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1771
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1771
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1771
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1787
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(255`null`257);" is 134.,1787
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains at least one element that parses to each of " + "<[null]>");" is 246.,1787
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 255,1787
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 257,1787
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1803
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 255,1803
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 256,1803
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 257,1803
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1813
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1813
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains at least one element that " + "parses to each of <[256]>");" is 252.,1813
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1813
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1813
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1813
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1830
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1830
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains at least one element that " + "parses to each of <[null]>");" is 254.,1830
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 255,1830
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 257,1830
truth,com.google.common.truth,GuavaOptionalSubjectTest,namedOptional,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that name (<Optional.of(actual)>) has value <expected>");" is 133.,36
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,121
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,121
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithSameToStrings,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <Optional.of(10)> (class java.lang.Integer) " + "has value <10> (class java.lang.String)");" is 172.,129
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithSameToStrings,Magic Number,The method contains a magic number: 10,129
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_Named_Failing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that bar (<Optional.of(foo)>) has value <boo>");" is 124.,139
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_Named_FailingWithSameToStrings,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that bar (<Optional.of(10)>) (class java.lang.Integer) " + "has value <10> (class java.lang.String)");" is 178.,147
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_Named_FailingWithSameToStrings,Magic Number,The method contains a magic number: 10,147
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(byte[]) [124` 112` 1` 0` 0` 1` 0` 0` 0` 0` 0` 0` 7` 101` 120` 97` " + "109` 112` 108` 101` 3` 99` 111` 109` 0` 0` 1` 0` 0]> is equal to " + "<[124` 112` 1` 0` 0` 1` 0` 0` 0` 0` 0` 0` 7` 101` 120` 97` 109` 112` 108` "+ "101` 3` 99` 111` 109` 0` 0` 1` 0` 1]>; "+ "expected:<...C6503636F6D000001000[1]>"+ " but was:<...C6503636F6D000001000[0]>");" is 426.,54
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(byte[]) [0` 1]> is equal to <[1` 0]>; " + "expected:<0[100]> but was:<0[001]>");" is 163.,78
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: int[]` actual: byte[]");" is 129.,88
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Long Statement,The length of the statement "assertThat(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f)).isEqualTo(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f));" is 159.,45
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2f,45
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4f,45
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2f,45
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4f,45
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2]> is equal to <[" + justOverTwoPointTwo + "]>");" is 145.,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> is equal to <[3.3` 2.2]>");" is 131.,60
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,60
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,60
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,60
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,60
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> is equal to <[2.2` 3.3` 4.4]>");" is 136.,68
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,68
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,68
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,68
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,68
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 4.4f,68
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> is equal to <[2.2]>");" is 126.,76
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,76
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,76
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,76
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_PlusMinusZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [0.0]> is equal to <[-0.0]>");" is 122.,84
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: float[]");" is 131.,92
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,92
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,92
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,92
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 2.2f,100
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 5.4f,100
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 2.2f,100
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ExactlyEqual,Magic Number,The method contains a magic number: 5.4f,100
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,106
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,106
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,106
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,106
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,106
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> is equal to <[2.2` " + roughly3point3 + "]>");" is 150.,114
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,114
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,114
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,114
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,114
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> is equal to <[3.3` 2.2]>");" is 131.,128
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,128
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,128
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,128
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,128
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Arrays are of different lengths. expected: [2.2` 3.3` 1.1]` actual [2.2` 3.3]");" is 147.,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Arrays are of different lengths. expected: [2.2]` actual [2.2` 3.3]");" is 137.,152
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,152
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,152
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,152
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().contains("Incompatible types compared. expected: Object` actual: float[]");" is 131.,161
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,161
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,161
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,161
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`POSITIVE_INFINITY)).isEqualTo(array(2.2f`POSITIVE_INFINITY)`DEFAULT_TOLERANCE);" is 123.,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> is equal to <[2.2` Infinity]>");" is 141.,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_SameInfinity,Magic Number,The method contains a magic number: 2.2f,185
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> is equal to <[2.2` Infinity]>");" is 136.,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Arrays are of different lengths. expected: [Infinity]` actual [2.2` 3.3]");" is 142.,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithToleranceParameter_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [NaN]> is equal to <[NaN]>");" is 121.,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f)).isNotEqualTo(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f));" is 184.,225
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(float[]) [2.2` 5.4` Infinity` -Infinity` NaN` 0.0` -0.0]> unexpectedly equal to " + "[2.2` 5.4` Infinity` -Infinity` NaN` 0.0` -0.0].");" is 205.,225
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,225
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4f,225
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,225
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4f,225
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2f,238
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2f,238
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2f,248
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3f,248
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2f,248
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3f,248
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 4.4f,248
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2f,253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 3.3f,253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2f,253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 2.2f,263
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 3.3f,263
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 4.4f,263
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 2.2f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 3.3f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 2.2f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 3.3f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Longer,Magic Number,The method contains a magic number: 1.1f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Shorter,Magic Number,The method contains a magic number: 2.2f,280
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Shorter,Magic Number,The method contains a magic number: 3.3f,280
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Shorter,Magic Number,The method contains a magic number: 2.2f,280
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentTypes,Magic Number,The method contains a magic number: 2.2f,286
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_DifferentTypes,Magic Number,The method contains a magic number: 3.3f,286
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(float[]) [2.2` 3.3]> unexpectedly equal to [2.2` 3.3].");" is 126.,292
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,292
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 3.3f,292
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,292
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 3.3f,292
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(float[]) [2.2` 3.3]> unexpectedly equal to [2.2` " + roughly3point3 + "].");" is 145.,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isNotEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,317
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,317
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,317
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,317
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,317
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(float[]) [2.2` 3.3]> unexpectedly equal to [2.2` 3.3].");" is 126.,325
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailSame,Magic Number,The method contains a magic number: 2.2f,325
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_FailSame,Magic Number,The method contains a magic number: 3.3f,325
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,335
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,335
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<(float[]) [2.2` Infinity]> unexpectedly equal to [2.2` Infinity].");" is 136.,342
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,342
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_OneInfinity,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_OneInfinity,Magic Number,The method contains a magic number: 3.3f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_OneInfinity,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,358
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithToleranceParameter_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,358
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,370
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,370
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,370
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,370
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,375
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,375
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,375
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,375
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,375
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 195.,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 184.,398
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,398
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,398
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,398
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,398
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 190.,412
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,412
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,412
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,412
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,412
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,412
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 180.,426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`POSITIVE_INFINITY);" is 126.,436
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 191.,436
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,436
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,436
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 191.,450
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,450
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 186.,461
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,461
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,461
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,461
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 185.,475
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,475
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,475
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 171.,489
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,499
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,499
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,499
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3f,509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2f,509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,519
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,519
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,519
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,519
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,519
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,529
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,529
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,529
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,529
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0f,543
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0f,543
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,543
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,543
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 152.,550
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,550
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,550
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,550
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,550
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`roughly3point3));" is 135.,557
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 195.,557
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,557
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,557
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,557
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,557
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(3.3f`2.2f));" is 125.,573
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 184.,573
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,573
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,573
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,573
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,573
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`3.3f`1.1f));" is 130.,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 190.,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,587
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 180.,601
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,601
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,601
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,601
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 151.,615
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 191.,615
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,615
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,615
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 138.,629
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 186.,629
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,629
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,629
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,629
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(POSITIVE_INFINITY));" is 133.,643
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 185.,643
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,643
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,643
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 171.,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,671
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,671
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,671
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,683
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,683
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,683
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,693
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,693
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,693
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,693
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,693
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,705
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,705
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,705
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,705
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,711
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,711
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,711
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,711
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,711
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` 3.3]>");" is 151.,717
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,717
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,717
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,717
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,717
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 170.,731
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,731
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,731
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,731
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,731
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,748
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,748
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,748
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,748
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,748
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` 3.3]>");" is 151.,756
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,756
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,756
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`POSITIVE_INFINITY);" is 129.,767
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 166.,767
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,767
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,767
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 166.,782
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,782
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 161.,794
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,794
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,794
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,794
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,809
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,809
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [NaN]> has values not within 5.0E-6 of <[NaN]>");" is 141.,815
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,824
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,824
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,824
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,835
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3f,835
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2f,835
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,846
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,846
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,846
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,846
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,846
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,857
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,857
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,857
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,857
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2f,865
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3f,865
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,865
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,865
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2f,873
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3f,873
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,873
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,873
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,881
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,881
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,881
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,881
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,881
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`3.3f));" is 128.,889
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` 3.3]>");" is 151.,889
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,889
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,889
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,889
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,889
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`roughly3point3));" is 138.,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 170.,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 155.,920
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,920
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,920
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,920
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,920
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 154.,928
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 166.,928
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,928
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,928
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 141.,943
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 161.,943
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,943
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,943
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,943
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,958
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,958
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <(float[]) [NaN]> has values not within 5.0E-6 of <[NaN]>");" is 141.,966
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,979
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,979
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,979
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,992
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,992
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,992
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,1005
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,1005
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,1005
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,1005
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,1005
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0f);" is 132.,1018
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,1018
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,1018
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,1018
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 130.,1025
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0f,1025
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,1025
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,1025
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0f);" is 125.,1032
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of <2.0>");" is 232.,1032
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,1032
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,1032
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,1032
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`POSITIVE_INFINITY`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(POSITIVE_INFINITY);" is 131.,1050
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <Infinity>");" is 220.,1050
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,1050
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <NaN>");" is 210.,1066
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,1066
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1082
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`Integer.MIN_VALUE + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(1 << 9).contains(Integer.MIN_VALUE);" is 125.,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(Long.MIN_VALUE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(1L << 41).contains(Long.MIN_VALUE);" is 123.,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`2.0f + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(BigInteger.valueOf(2));" is 127.,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`2.0f + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(BigDecimal.valueOf(2.0));" is 129.,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 9,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2L,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 41,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1087
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1125
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1125
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1125
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1134
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,1134
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1134
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0f`1.0f));" is 149.,1146
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1146
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1146
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1146
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0f`99.99f));" is 144.,1153
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number "+ "within "+ (double)DEFAULT_TOLERANCE+ " of each element of <[2.0` 99.99]>. It is missing an element that is a finite "+ "number within "+ (double)DEFAULT_TOLERANCE+ " of <99.99>");" is 365.,1153
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1153
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1153
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1153
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1153
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(1.0f`2.0f)).inOrder();" is 159.,1175
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1175
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1175
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1175
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0f`1.0f)).inOrder();" is 152.,1183
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains` in order` at least one element that is a finite number "+ "within "+ (double)DEFAULT_TOLERANCE+ " of each element of <[2.0` 1.0]>");" is 270.,1183
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1183
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1183
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1183
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99f`2.0f));" is 151.,1203
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1203
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1203
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1203
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1203
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99f`999.999f));" is 148.,1210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of any element in <[99.99` 999.999]>");" is 260.,1210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,1210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f`3.0f));" is 156.,1228
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1228
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1228
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1228
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1228
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f));" is 144.,1235
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains exactly one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of each element of <[2.0` 1.0]>. It has unexpected elements <[3.0]>");" is 290.,1235
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1235
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1235
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1235
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(1.0f`2.0f`3.0f)).inOrder();" is 166.,1253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1253
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f`3.0f)).inOrder();" is 159.,1261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains` in order` exactly one element that is a finite number "+ "within "+ (double)DEFAULT_TOLERANCE+ " of each element of <[2.0` 1.0` 3.0]>");" is 274.,1261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99f`999.999f));" is 156.,1281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 999.999f,1281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`justOverTwoPlusTolerance`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99f`2.0f));" is 145.,1288
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains no element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of any element in <[99.99` 2.0]>. It contains at least one element that is a "+ "finite number within "+ (double)DEFAULT_TOLERANCE+ " of each of <[2.0]>");" is 366.,1288
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1288
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1288
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1288
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1288
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1309
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,1309
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1309
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 178.,1314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value 16777217 in assertion using exact float equality was an int with an " + "absolute value greater than 2^24 which has no exact float representation");" is 212.,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value 16777217 in assertion using exact float equality was a long with an " + "absolute value greater than 2^24 which has no exact float representation");" is 212.,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact float equality was a double` which is not " + "supported as a double may not have an exact float representation");" is 203.,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact float equality was of unsupported type " + BigInteger.class + " (it may not have an exact float representation)");" is 203.,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact float equality was of unsupported type " + BigDecimal.class + " (it may not have an exact float representation)");" is 203.,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2L,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1330
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,1395
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,1402
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 168.,1407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1426
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains at least one element that is exactly equal " + "to each element of <[2.0` 99.99]>. It is missing an element that is exactly " + "equal to <99.99>");" is 256.,1431
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1431
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1431
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1431
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1431
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1446
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1446
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1446
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains` in order` at least one element that is " + "exactly equal to each element of <[2.0` 1.0]>");" is 201.,1454
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1454
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1454
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1454
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains at least one element that is exactly equal " + "to any element in <[99.99` 999.999]>");" is 195.,1474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,1474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains exactly one element that is exactly equal " + "to each element of <[2.0` 1.0]>. It has unexpected elements <[3.0]>");" is 225.,1495
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1495
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1495
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1495
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1509
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(array(1.0f`2.0f`3.0f)).usingExactEquality().containsExactly(array(2.0f`1.0f`3.0f)).inOrder();" is 126.,1517
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains` in order` exactly one element that is " + "exactly equal to each element of <[2.0` 1.0` 3.0]>");" is 205.,1517
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1517
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1517
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1517
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1517
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1532
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1532
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1532
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 999.999f,1532
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.0` 2.0` 3.0]> contains no element that is exactly equal to any " + "element in <[99.99` 2.0]>. It contains at least one element that is exactly " + "equal to each of <[2.0]>");" is 261.,1539
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1539
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1539
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1539
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1539
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,46
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,46
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,62
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,62
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 238.,62
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,84
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,100
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 212.,100
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).isEqualTo(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 128.,119
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`e.getMessage()).that(e).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 347.,119
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2,119
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2L,119
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,142
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,151
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that " + "<Values for key <1> (<[5]>) in multymap (<{1=[5]}>)> contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 221.,166
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 5,166
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 4,166
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that " + "valuez (<Values for key <1> (<[5]>) in <{1=[5]}>>) contains exactly <[4]>. " + "It is missing <[4]> and has unexpected items <[5]>");" is 219.,178
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 5,178
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamed,Magic Number,The method contains a magic number: 4,178
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,190
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,190
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,190
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,190
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,200
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,200
truth,com.google.common.truth,MultimapSubjectTest,containsKeyFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> contains key <daniel>");" is 124.,215
truth,com.google.common.truth,MultimapSubjectTest,containsKeyNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> contains key <null>");" is 122.,231
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableMultimap.of(1L`"value1a"`1L`"value1b"`2L`"value2"`"1"`"value3")).containsKey(1);" is 122.,240
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[value1a` value1b]` 2=[value2]` 1=[value3]}> contains key " + "<1 (java.lang.Integer)>. However` it does contain keys " + "<[1 (java.lang.Long)` 1 (java.lang.String)]>.");" is 256.,240
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,240
truth,com.google.common.truth,MultimapSubjectTest,doesNotContainKeyFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> does not contain key <kurt>");" is 130.,261
truth,com.google.common.truth,MultimapSubjectTest,doesNotContainNullKeyFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=[null]}> does not contain key <null>");" is 127.,270
truth,com.google.common.truth,MultimapSubjectTest,containsEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> contains entry <daniel=ploch>");" is 132.,286
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 164.,302
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 170.,313
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 167.,325
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableMultimap.builder().put(1`"1").put(1`1L).put(1L`1).put(2`3).build()).containsEntry(1`1);" is 129.,336
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[1` 1]` 1=[1]` 2=[3]}> contains entry " + "<1=1 (Map.Entry<java.lang.Integer` java.lang.Integer>)>. However` it does " + "contain entries <[1=1 (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=1 (Map.Entry<java.lang.Integer` java.lang.Long>)` "+ "1=1 (Map.Entry<java.lang.Long` java.lang.Integer>)]>");" is 394.,336
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 2,336
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 3,336
truth,com.google.common.truth,MultimapSubjectTest,doesNotContainEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> does not contain entry <kurt=kluever>");" is 140.,358
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,367
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,378
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,378
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,378
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,378
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,386
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,386
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,386
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,386
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,386
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,395
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 193.,439
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,439
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,439
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,439
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,439
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,439
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 183.,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,455
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 195.,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,473
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 237.,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,491
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}>");" is 177.,512
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]` =[]}> contains exactly <{a=[\"\" (empty String)]}>. " + "It has unexpected items <{\"\" (empty String)=[\"\" (empty String)]}>");" is 214.,522
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}> " + "and has unexpected items <{a=[\"\" (empty String)]}>");" is 239.,535
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,546
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,556
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,556
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(String.format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 153.,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,565
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 199.,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,580
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,598
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,598
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,598
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,598
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,606
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,606
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,606
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,606
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,606
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,606
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 183.,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 195.,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 5,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 237.,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 5,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,657
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,681
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 193.,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,689
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,705
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(String.format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 153.,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(String.format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 199.,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 143.,756
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 397.,756
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,756
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,756
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableMultimap.of(1`"a"`1`"b"`2L`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2`"c"));" is 143.,773
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[" + "1=a (Map.Entry<java.lang.Long` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Long` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Integer` java.lang.String>)]> "+ "and has unexpected items <["+ "1=a (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Long` java.lang.String>)]>");" is 607.,773
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,773
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,773
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,795
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 128.,804
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 261.,804
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,804
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`789);" is 128.,821
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 266.,821
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,821
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 128.,838
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 197.,838
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,838
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,854
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 123,854
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,867
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,876
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,885
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`789);" is 134.,894
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 256.,894
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,894
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,911
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,911
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,924
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,924
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 128,924
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,924
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,924
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,935
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,935
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,935
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 128,935
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,935
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 123,935
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,956
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,956
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,956
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,956
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 128,956
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,956
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 138.,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 64,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 123,976
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,1002
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`new Object());" is 127.,1002
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1002
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1002
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1002
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1002
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 128,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 148.,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains` in order` exactly one " + "element that has a key that is equal to and a value that parses to the key " + "and value of each element of <[def=64` def=64` def=128` abc=123]>");" is 304.,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1029
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 148.,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains` in order` exactly one " + "element that has a key that is equal to and a value that parses to the key " + "and value of each element of <[abc=123` def=64` def=128` def=64]>");" is 304.,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1049
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).named("multymap").comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 156.,1069
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that multymap (<{abc=[+123]}>) contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each element " + "of <[abc=123` def=456]>. It is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=456>");" is 385.,1069
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Magic Number,The method contains a magic number: 123,1069
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Magic Number,The method contains a magic number: 456,1069
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyNoArgs,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableListMultimap.of("abc"`"+123")).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly();" is 153.,1089
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1111
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 136.,1111
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1111
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 128,1111
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1111
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,1111
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 158.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 128,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 123,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1139
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64);" is 148.,1139
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,1139
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1139
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 128,1139
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1139
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`128`"abc"`123);" is 159.,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 64,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 123,1157
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`new Object());" is 127.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`123`"def"`64`"abc"`123);" is 136.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1195
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`64`"def"`128);" is 136.,1195
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,1195
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1195
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1195
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1195
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`64`"def"`128`"abc"`123).inOrder();" is 168.,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains` in order` exactly one " + "element that has a key that is equal to and a value that parses to the key " + "and value of each element of <[def=64` def=64` def=128` abc=123]>");" is 304.,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1204
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`128`"def"`64).inOrder();" is 168.,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains` in order` exactly one " + "element that has a key that is equal to and a value that parses to the key " + "and value of each element of <[abc=123` def=64` def=128` def=64]>");" is 304.,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1222
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).named("multymap").comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456);" is 158.,1240
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that multymap (<{abc=[+123]}>) contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each element " + "of <[abc=123` def=456]>. It is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=456>");" is 385.,1240
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Magic Number,The method contains a magic number: 123,1240
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Magic Number,The method contains a magic number: 456,1240
truth,com.google.common.truth,StackTraceCleaner,cleanStackTrace,Complex Method,Cyclomatic complexity of the method is 11,58
truth,com.google.common.truth,StackTraceCleaner,cleanStackTrace,Long Statement,The length of the statement "StackTraceElementWrapper stackTraceElementWrapper=new StackTraceElementWrapper(stackTraceElement`StackFrameType.forClassName(stackTraceElement.getClassName()));" is 160.,58
truth,com.google.common.truth,StackTraceCleaner,cleanStackTrace,Long Statement,The length of the statement "if (stackTraceElementWrapper.getStackFrameType() == StackFrameType.TEST_FRAMEWORK || stackTraceElementWrapper.getStackFrameType() == StackFrameType.REFLECTION) {" is 161.,58
truth,com.google.common.truth,StackTraceCleaner,createStreakReplacementFrame,Long Statement,The length of the statement "return new StackTraceElementWrapper(new StackTraceElement("[[" + stackFrameType.getName() + ": "+ length+ " frames collapsed ("+ CLEANER_LINK+ ")]]"`""`""`0)`stackFrameType);" is 174.,190
truth,com.google.common.truth,PrimitiveShortArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveShortArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,84
truth,com.google.common.truth,ObjectArraySubject,apply,Complex Method,Cyclomatic complexity of the method is 10,73
truth,com.google.common.truth,ObjectArraySubject,checkArrayEqualsRecursive,Complex Conditional,The conditional expression actual != null && actual.getClass().isArray() && expected != null && expected.getClass().isArray() is complex.,166
truth,com.google.common.truth,ObjectArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,198
truth,com.google.common.truth,ObjectArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(Arrays.asList(actual())).named(internalCustomName()) : check().that(Arrays.asList(actual()));" is 144.,212
truth,com.google.common.truth,DoubleSubject,isWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,78
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,102
truth,com.google.common.truth,DoubleSubject,isNotWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,118
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,140
truth,com.google.common.truth,DoubleSubject,isFinite,Complex Conditional,The conditional expression actual() == null || actual().isNaN() || actual().isInfinite() is complex.,245
truth,com.google.common.truth,StringSubject,isEqualTo,Complex Method,Cyclomatic complexity of the method is 8,54
truth,com.google.common.truth,StringSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that " + actualAsString() + " is equal to (%s)<%s>"`expected.getClass().getName()`expected);" is 121.,54
truth,com.google.common.truth,AbstractArraySubject,failWithBadType,Long Statement,The length of the statement "failWithRawMessage("Incompatible types compared. expected: %s` actual: %s%s"`Platform.compressType(expectedTypeString)`underlyingType()`brackets());" is 148.,72
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Arrays are of different lengths. expected: %s` actual %s"`Doubles.asList(expectedArray)`Doubles.asList(actual));" is 132.,95
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,139
truth,com.google.common.truth,PrimitiveDoubleArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,167
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 122.,261
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,261
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,261
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 122.,282
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,282
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,282
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesNotWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 124.,320
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 124.,342
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Long Statement,The length of the statement "checkArgument(expected instanceof Double || expected instanceof Float || expected instanceof Integer|| expected instanceof Long`"Expected value in assertion using exact double equality was of unsupported type %s " + "(it may not have an exact double representation)"`expected.getClass());" is 288.,409
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Long Statement,The length of the statement "checkArgument(Math.abs((Long)expected) <= 1L << 53`"Expected value %s in assertion using exact double equality was a long with an absolute " + "value greater than 2^52 which has no exact double representation"`expected);" is 220.,409
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Magic Number,The method contains a magic number: 53,409
truth,com.google.common.truth,PrimitiveDoubleArraySubject,iterableSubject,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,508
truth,com.google.common.truth,SubjectUtils,accumulate,Magic Number,The method contains a magic number: 2,41
truth,com.google.common.truth,SubjectUtils,countDuplicatesAndAddTypeInfo,Long Statement,The length of the statement "return homogeneousTypeName.isPresent() ? StringUtil.format("%s (%s)"`countDuplicates(items)`homogeneousTypeName.get()) : countDuplicates(addTypeInfoToEveryItem(items)).toString();" is 179.,84
truth,com.google.common.truth,SubjectUtils,annotateEmptyStrings,Long Identifier,The length of the field HUMAN_UNDERSTANDABLE_EMPTY_STRING is 33.,213
truth,com.google.common.truth,MultimapSubject,containsKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains key <%s (%s)>. However` it does contain keys <%s>."`actualAsString()`key`objectToTypeName(key)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().keySet()`keyList)));" is 223.,90
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s (%s)>. However` it does contain entries <%s>"`actualAsString()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().entries()`entryList)));" is 234.,115
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. However` it has a mapping from <%s> to <%s>"`actualAsString()`entry`key`actual().asMap().get(key));" is 157.,115
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualAsString()`entry`value`keys);" is 150.,115
truth,com.google.common.truth,MultimapSubject,isEqualTo,Complex Conditional,The conditional expression (actual() instanceof ListMultimap && other instanceof SetMultimap) || (actual() instanceof SetMultimap && other instanceof ListMultimap) is complex.,168
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "if ((actual() instanceof ListMultimap && other instanceof SetMultimap) || (actual() instanceof SetMultimap && other instanceof ListMultimap)) {" is 143.,168
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s is equal to %s <%s>. " + "A %s cannot equal a %s if either is non-empty."`mapType1`actualAsString()`mapType2`other`mapType1`mapType2);" is 174.,168
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains exactly <%s>. " + "It is missing <%s> and has unexpected items <%s>"`actualAsString()`annotateEmptyStringsMultimap(expectedMultimap)`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStringsMultimap(missing).entries()) : countDuplicatesMultimap(annotateEmptyStringsMultimap(missing))`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStringsMultimap(extra).entries()) : countDuplicatesMultimap(annotateEmptyStringsMultimap(extra)));" is 492.,194
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains exactly"`annotateEmptyStringsMultimap(expectedMultimap)`"is missing"`countDuplicatesMultimap(annotateEmptyStringsMultimap(missing)));" is 162.,194
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains exactly"`annotateEmptyStringsMultimap(expectedMultimap)`"has unexpected items"`countDuplicatesMultimap(annotateEmptyStringsMultimap(extra)));" is 170.,194
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,265
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,Truth,stripFramesAndTryToAddCause,Empty catch clause,The method has an empty catch block.,101
truth,com.google.common.truth,Subject,isInstanceOf,Long Statement,The length of the statement "throw new UnsupportedOperationException(actualAsString() + "` an instance of " + actual().getClass().getName()+ "` may or may not be an instance of "+ clazz.getName()+ ". Under -XdisableClassMetadata` we do not have enough information to tell.");" is 246.,218
truth,com.google.common.truth,Subject,failComparingToStrings,Complex Conditional,The conditional expression !needsClassDisambiguation && sameToStrings && compareToStrings is complex.,388
truth,com.google.common.truth,Subject,failComparingToStrings,Long Parameter List,The method has 5 parameters. ,388
truth,com.google.common.truth,Subject,failWithBadResults,Long Statement,The length of the statement "String message=format("Not true that %s %s <%s>. It %s <%s>"`actualAsString()`verb`expected`failVerb`(actual == null) ? "null reference" : actual);" is 147.,433
truth,com.google.common.truth,SortedMapSubject,hasFirstKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first key <%s>. " + "It does contain this key` but the first key is <%s>"`actualAsString()`key`actualAsNavigableMap().firstKey());" is 171.,54
truth,com.google.common.truth,SortedMapSubject,hasFirstKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first key <%s>. " + "It does not contain this key` and the first key is <%s>"`actualAsString()`key`actualAsNavigableMap().firstKey());" is 175.,54
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Complex Method,Cyclomatic complexity of the method is 10,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. " + "It does contain this entry` but the first entry is <%s>"`actualAsString()`expectedEntry`actualFirstEntry);" is 170.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>` the first value is <%s>"`actualAsString()`expectedEntry`actualFirstEntry.getValue());" is 144.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>` the first key is <%s>"`actualAsString()`expectedEntry`actualFirstKey);" is 129.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. It does contain this key` " + "but the key is mapped to <%s>` and the first entry is <%s>"`actualAsString()`expectedEntry`actualAsNavigableMap().get(key)`actualFirstEntry);" is 231.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. It does contain this value` but the value is " + "mapped from the keys <%s>` and the first entry is <%s>"`actualAsString()`expectedEntry`keys`actualFirstEntry);" is 219.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. " + "It does not contain this entry` and the first entry is <%s>"`actualAsString()`expectedEntry`actualFirstEntry);" is 174.,76
truth,com.google.common.truth,SortedMapSubject,hasLastKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last key <%s>. " + "It does contain this key` but the last key is <%s>"`actualAsString()`key`actualAsNavigableMap().lastKey());" is 168.,125
truth,com.google.common.truth,SortedMapSubject,hasLastKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last key <%s>. " + "It does not contain this key` and the last key is <%s>"`actualAsString()`key`actualAsNavigableMap().lastKey());" is 172.,125
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Complex Method,Cyclomatic complexity of the method is 10,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. " + "It does contain this entry` but the last entry is <%s>"`actualAsString()`expectedEntry`actualLastEntry);" is 167.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>` the last value is <%s>"`actualAsString()`expectedEntry`actualLastEntry.getValue());" is 141.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>` the last key is <%s>"`actualAsString()`expectedEntry`actualLastKey);" is 126.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. It does contain this key` " + "but the key is mapped to <%s>` and the last entry is <%s>"`actualAsString()`expectedEntry`actualAsNavigableMap().get(key)`actualLastEntry);" is 228.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. It does contain this value` but the value is " + "mapped from the keys <%s>` and the last entry is <%s>"`actualAsString()`expectedEntry`keys`actualLastEntry);" is 216.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. " + "It does not contain this entry` and the last entry is <%s>"`actualAsString()`expectedEntry`actualLastEntry);" is 171.,147
truth,com.google.common.truth,PrimitiveLongArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveLongArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,84
truth,com.google.common.truth,StringUtil,format,Magic Number,The method contains a magic number: 16,43
truth,com.google.common.truth,StringUtil,format,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,Expect,apply,Long Statement,The length of the statement "String message=t instanceof AssumptionViolatedException ? "Failures occurred before an assumption was violated" : "Failures occurred before an exception was thrown while the test was running";" is 192.,169
truth,com.google.common.truth,Expect,evaluate,Long Statement,The length of the statement "String message=t instanceof AssumptionViolatedException ? "Failures occurred before an assumption was violated" : "Failures occurred before an exception was thrown while the test was running";" is 192.,174
truth,com.google.common.truth,GuavaOptionalSubject,hasValue,Long Statement,The length of the statement "failWithRawMessage("Not true that %s (%s) has value <%s> (%s)"`actualAsString()`actual.getClass()`expected`expected.getClass());" is 128.,45
truth,com.google.common.truth,PrimitiveByteArraySubject,isEqualTo,Long Statement,The length of the statement "failComparing("Not true that " + getDisplaySubject() + " is equal to <"+ Arrays.toString(expectedArray)+ ">;"`base16(expectedArray)`base16(getSubject()));" is 154.,44
truth,com.google.common.truth,PrimitiveByteArraySubject,base16,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,PrimitiveByteArraySubject,base16,Magic Number,The method contains a magic number: 4,73
truth,com.google.common.truth,PrimitiveByteArraySubject,base16,Magic Number,The method contains a magic number: 0xf,73
truth,com.google.common.truth,PrimitiveByteArraySubject,base16,Magic Number,The method contains a magic number: 0xf,73
truth,com.google.common.truth,PrimitiveByteArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,83
truth,com.google.common.truth,PrimitiveByteArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,102
truth,com.google.common.truth,StandardSubjectBuilder,StandardSubjectBuilder,Long Identifier,The length of the field metadataDoNotReferenceDirectly is 30.,67
truth,com.google.common.truth,StandardSubjectBuilder,metadata,Long Identifier,The length of the field metadataDoNotReferenceDirectly is 30.,270
truth,com.google.common.truth,PrimitiveCharArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveCharArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,84
truth,com.google.common.truth,PrimitiveBooleanArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveBooleanArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,84
truth,com.google.common.truth,SortedSetSubject,hasFirstElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first element <%s>. " + "It does contain this element` but the first element is <%s>"`actualAsString()`element`actualAsNavigableSet().first());" is 184.,47
truth,com.google.common.truth,SortedSetSubject,hasFirstElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first element <%s>. " + "It does not contain this element` and the first element is <%s>"`actualAsString()`element`actualAsNavigableSet().first());" is 188.,47
truth,com.google.common.truth,SortedSetSubject,hasLastElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last element <%s>. " + "It does contain this element` but the last element is <%s>"`actualAsString()`element`actualAsNavigableSet().last());" is 181.,69
truth,com.google.common.truth,SortedSetSubject,hasLastElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last element <%s>. " + "It does not contain this element` and the last element is <%s>"`actualAsString()`element`actualAsNavigableSet().last());" is 185.,69
truth,com.google.common.truth,Platform,stripIfInPackage,Complex Conditional,The conditional expression type.startsWith(packagePrefix) && (type.indexOf('.'`packagePrefix.length()) == -1) && Character.isUpperCase(type.charAt(packagePrefix.length())) is complex.,111
truth,com.google.common.truth,Platform,stripIfInPackage,Long Statement,The length of the statement "if (type.startsWith(packagePrefix) && (type.indexOf('.'`packagePrefix.length()) == -1) && Character.isUpperCase(type.charAt(packagePrefix.length()))) {" is 151.,111
truth,com.google.common.truth,PrimitiveFloatArraySubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Arrays are of different lengths. expected: %s` actual %s"`Floats.asList(expectedArray)`Floats.asList(actual));" is 130.,95
truth,com.google.common.truth,PrimitiveFloatArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,139
truth,com.google.common.truth,PrimitiveFloatArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,167
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 121.,261
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,261
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,261
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 121.,282
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,282
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,282
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesNotWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 123.,320
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 123.,342
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(!(expected instanceof Double)`"Expected value in assertion using exact float equality was a double` which is not " + "supported as a double may not have an exact float representation");" is 199.,409
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(expected instanceof Float || expected instanceof Integer || expected instanceof Long`"Expected value in assertion using exact float equality was of unsupported type %s " + "(it may not have an exact float representation)"`expected.getClass());" is 257.,409
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(Math.abs((Integer)expected) <= 1 << 24`"Expected value %s in assertion using exact float equality was an int with an absolute " + "value greater than 2^24 which has no exact float representation"`expected);" is 220.,409
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(Math.abs((Long)expected) <= 1L << 24`"Expected value %s in assertion using exact float equality was a long with an absolute " + "value greater than 2^24 which has no exact float representation"`expected);" is 218.,409
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Magic Number,The method contains a magic number: 24,409
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Magic Number,The method contains a magic number: 24,409
truth,com.google.common.truth,PrimitiveFloatArraySubject,iterableSubject,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,514
truth,com.google.common.truth,Platform,getArrayLength,Complex Method,Cyclomatic complexity of the method is 10,71
truth,com.google.common.truth,Platform,getFromArray,Complex Method,Cyclomatic complexity of the method is 12,98
truth,com.google.common.truth,MapSubject,isEqualTo,Complex Method,Cyclomatic complexity of the method is 8,51
truth,com.google.common.truth,MapSubject,containsKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains key <%s (%s)>. However` it does contain keys <%s>."`actualAsString()`key`objectToTypeName(key)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().keySet()`keyList)));" is 223.,104
truth,com.google.common.truth,MapSubject,containsEntry,Complex Method,Cyclomatic complexity of the method is 8,129
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s (%s)>. However` it does contain keys <%s>."`actualAsString()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().keySet()`keyList)));" is 229.,129
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s (%s)>. However` it does contain values <%s>."`actualAsString()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().values()`valueList)));" is 233.,129
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. However` it has a mapping from <%s> to <%s>"`actualAsString()`entry`key`actual().get(key));" is 149.,129
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualAsString()`entry`value`keys);" is 150.,129
truth,com.google.common.truth,MapSubject,accumulateMap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,197
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,PrimitiveIntArraySubject,isNotEqualTo,Empty catch clause,The method has an empty catch block.,65
truth,com.google.common.truth,PrimitiveIntArraySubject,asList,Long Statement,The length of the statement "return internalCustomName() != null ? check().that(listRepresentation()).named(internalCustomName()) : check().that(listRepresentation());" is 138.,84
truth,com.google.common.truth,ExpectFailure,captureFailure,Long Statement,The length of the statement "throw new AssertionError(String.format("ExpectFailure.whenTesting() caught multiple failures:\n\n%s\n\n%s\n"`Throwables.getStackTraceAsString(failure)`Throwables.getStackTraceAsString(captured)));" is 196.,123
truth,com.google.common.truth,Correspondence,equals,Long Statement,The length of the statement "throw new UnsupportedOperationException("Correspondence.equals(object) is not supported. If you meant to compare objects` use" + " .compare(actual` expected) instead.");" is 169.,114
truth,com.google.common.truth,FloatSubject,isWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,78
truth,com.google.common.truth,FloatSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values within <%s> of each other"`actualAsString()`expected`tolerance);" is 127.,102
truth,com.google.common.truth,FloatSubject,isNotWithin,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,118
truth,com.google.common.truth,FloatSubject,of,Long Statement,The length of the statement "failWithRawMessage("%s and <%s> should have been finite values not within <%s> of each other"`actualAsString()`expected`tolerance);" is 131.,140
truth,com.google.common.truth,FloatSubject,isFinite,Complex Conditional,The conditional expression actual() == null || actual().isNaN() || actual().isInfinite() is complex.,241
truth,com.google.common.truth,IterableSubject,contains,Long Statement,The length of the statement "failWithRawMessage("%s should have contained <%s (%s)> but doesn't. However` it does contain <%s>."`actualAsString()`element`objectToTypeName(element)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual()`elementList)));" is 228.,136
truth,com.google.common.truth,IterableSubject,containsAny,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. However` it does contain <%s>."`actualAsString()`failVerb`iterableToStringWithTypeInfo(expected)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual()`expected)));" is 217.,188
truth,com.google.common.truth,IterableSubject,containsAll,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. It is missing <%s>. However` it does contain <%s>."`actualAsString()`failVerb`annotateEmptyStrings(expected)`countDuplicatesAndAddTypeInfo(annotateEmptyStrings(missing))`countDuplicatesAndAddTypeInfo(annotateEmptyStrings(retainMatchingToString(actual()`missing))));" is 311.,240
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Complex Method,Cyclomatic complexity of the method is 13,328
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "String failSuffix=addElementsInWarning ? ". Passing an iterable to the varargs method containsExactly(Object...) is " + "often not the correct thing to do. Did you mean to call " + "containsExactlyElementsIn(Iterable) instead?" : "";" is 233.,328
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains exactly <%s>. " + "It is missing <%s> and has unexpected items <%s>%s"`actualAsString()`annotateEmptyStrings(required)`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStrings(missing)) : countDuplicates(annotateEmptyStrings(missing))`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStrings(extra)) : countDuplicates(annotateEmptyStrings(extra))`failSuffix);" is 421.,328
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithBadResultsAndSuffix("contains exactly"`annotateEmptyStrings(required)`"is missing"`countDuplicates(annotateEmptyStrings(missing))`failSuffix);" is 150.,328
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithBadResultsAndSuffix("contains exactly"`annotateEmptyStrings(required)`"has unexpected items"`countDuplicates(annotateEmptyStrings(extra))`failSuffix);" is 158.,328
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithBadResultsAndSuffix("contains exactly"`annotateEmptyStrings(required)`"has unexpected items"`countDuplicates(annotateEmptyStrings(Lists.newArrayList(actualIter)))`failSuffix);" is 183.,328
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "failWithBadResultsAndSuffix("contains exactly"`annotateEmptyStrings(required)`"is missing"`countDuplicates(annotateEmptyStrings(Lists.newArrayList(requiredIter)))`failSuffix);" is 175.,328
truth,com.google.common.truth,IterableSubject,failWithBadResultsAndSuffix,Long Parameter List,The method has 5 parameters. ,449
truth,com.google.common.truth,IterableSubject,failWithBadResultsAndSuffix,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. It %s <%s>%s"`actualAsString()`verb`expected`failVerb`(actual == null) ? "null reference" : actual`suffix);" is 153.,449
truth,com.google.common.truth,StreamSubjectTest,testIsEqualToList,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hello]> (java.util.stream.ReferencePipeline$Head) " + "is equal to <[hello]> (java.util.Arrays$ArrayList)");" is 173.,43
truth,com.google.common.truth,StreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,59
truth,com.google.common.truth,StreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,StreamSubjectTest,testContainsNoneOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hello]> contains none of <[hello` hell]>. It contains <[hello]>");" is 131.,216
truth,com.google.common.truth,StreamSubjectTest,testContainsNoneIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hello]> contains no elements in <[hello` hell]>. " + "It contains <[hello]>");" is 143.,234
truth,com.google.common.truth,StreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains all of <[hell` hello` goodbye]>. " + "It is missing <[goodbye]>");" is 154.,253
truth,com.google.common.truth,StreamSubjectTest,testContainsAllOf_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains all elements in order <[hello` hell]>");" is 128.,272
truth,com.google.common.truth,StreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains all elements in <[hell` hello` goodbye]>. " + "It is missing <[goodbye]>");" is 163.,290
truth,com.google.common.truth,StreamSubjectTest,testContainsAllIn_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains all elements in order <[hello` hell]>");" is 128.,309
truth,com.google.common.truth,StreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains exactly <[hell]>. " + "It has unexpected items <[hello]>");" is 147.,328
truth,com.google.common.truth,StreamSubjectTest,testContainsExactly_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains exactly " + "these elements in order <[hello` hell]>");" is 143.,347
truth,com.google.common.truth,StreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains exactly <[hell]>. " + "It has unexpected items <[hello]>");" is 147.,367
truth,com.google.common.truth,StreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains exactly " + "these elements in order <[hello` hell]>");" is 143.,388
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualTo,Magic Number,The method contains a magic number: 42,37
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42]> (java.util.stream.IntPipeline$Head) " + "is equal to <[42]> (java.util.Arrays$ArrayList)");" is 161.,43
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,43
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,43
truth,com.google.common.truth,IntStreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,59
truth,com.google.common.truth,IntStreamSubjectTest,testIsEmpty_fails,Magic Number,The method contains a magic number: 42,86
truth,com.google.common.truth,IntStreamSubjectTest,testIsNotEmpty,Magic Number,The method contains a magic number: 42,96
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize,Magic Number,The method contains a magic number: 42,111
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 42,116
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates,Magic Number,The method contains a magic number: 42,128
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,133
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,133
truth,com.google.common.truth,IntStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,145
truth,com.google.common.truth,IntStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,145
truth,com.google.common.truth,IntStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 42,150
truth,com.google.common.truth,IntStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 100,150
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 43,160
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 42,165
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 43,165
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 44,165
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,177
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,177
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 43,177
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 42,182
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 43,182
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 44,182
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 42,194
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 43,194
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 42,209
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 43,209
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 44,209
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,214
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,214
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 43,214
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 42,226
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 43,226
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 44,226
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42]> contains no elements in <[42` 43]>. It contains <[42]>");" is 127.,231
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,231
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,231
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 43,231
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,243
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,243
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,243
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,243
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains all of <[42` 43` 44]>. It is missing <[44]>");" is 129.,248
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,248
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,248
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,248
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,248
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 44,248
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,261
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,261
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,261
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,261
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,266
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,266
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,266
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,266
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42,278
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43,278
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42,278
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43,278
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains all elements in <[42` 43` 44]>. " + "It is missing <[44]>");" is 143.,283
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42,283
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43,283
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42,283
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43,283
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 44,283
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,314
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,314
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,314
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,314
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,319
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,319
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 43,319
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,319
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly these elements in order <[43` 42]>");" is 128.,338
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,338
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,338
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,338
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,338
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,351
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,357
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,357
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 43,357
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,357
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,371
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,371
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,371
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,371
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly these elements in order <[43` 42]>");" is 128.,376
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,376
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,376
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,376
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,376
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 2,389
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 2,389
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualTo,Magic Number,The method contains a magic number: 42,37
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42]> (java.util.stream.LongPipeline$Head) " + "is equal to <[42]> (java.util.Arrays$ArrayList)");" is 162.,43
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,43
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42L,43
truth,com.google.common.truth,LongStreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,59
truth,com.google.common.truth,LongStreamSubjectTest,testIsEmpty_fails,Magic Number,The method contains a magic number: 42,86
truth,com.google.common.truth,LongStreamSubjectTest,testIsNotEmpty,Magic Number,The method contains a magic number: 42,96
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize,Magic Number,The method contains a magic number: 42,111
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 42,116
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates,Magic Number,The method contains a magic number: 42,128
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,133
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,133
truth,com.google.common.truth,LongStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,145
truth,com.google.common.truth,LongStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,145
truth,com.google.common.truth,LongStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 42,150
truth,com.google.common.truth,LongStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 100,150
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 43,160
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 42,165
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 43,165
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 44,165
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,177
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42L,177
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 43L,177
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 42,182
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 43,182
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 44,182
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 42,194
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 43,194
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 42,209
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 43,209
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 44,209
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,214
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,214
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 43,214
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 42,226
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 43,226
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 44,226
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42]> contains no elements in <[42` 43]>. It contains <[42]>");" is 127.,231
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,231
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42L,231
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 43L,231
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,243
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,243
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,243
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,243
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains all of <[42` 43` 44]>. It is missing <[44]>");" is 129.,248
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,248
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,248
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,248
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,248
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 44,248
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,261
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,261
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,261
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,261
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,266
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,266
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,266
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,266
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42,278
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43,278
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42L,278
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43L,278
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains all elements in <[42` 43` 44]>. " + "It is missing <[44]>");" is 143.,283
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42,283
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43,283
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42L,283
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43L,283
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 44L,283
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains all elements in <[42` 43` 44]>. " + "It is missing <[42` 43` 44] (java.lang.Integer)>. " + "However` it does contain <[42` 43] (java.lang.Long)>.");" is 231.,297
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 42,297
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 43,297
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 42,297
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 43,297
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 44,297
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42,312
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43,312
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42L,312
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43L,312
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42,317
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43,317
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43L,317
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42L,317
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains all elements in <[43` 42]>. " + "It is missing <[43` 42] (java.lang.Integer)>. " + "However` it does contain <[42` 43] (java.lang.Long)>.");" is 223.,329
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,329
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,329
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,329
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,329
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,344
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,344
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,344
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,344
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,349
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,349
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 43,349
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,349
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly these elements in order <[43` 42]>");" is 128.,368
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,368
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,368
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,368
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,368
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42L,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43L,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43L,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42L,381
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,387
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,387
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 43,387
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42L,387
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It is missing <[42] (java.lang.Integer)> and " + "has unexpected items <[42` 43] (java.lang.Long)>");" is 205.,401
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,401
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 43,401
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,401
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,416
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,416
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42L,416
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43L,416
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly these elements in order <[43` 42]>");" is 128.,421
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,421
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,421
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43L,421
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42L,421
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[43` 42]>. " + "It is missing <[43` 42] (java.lang.Integer)> and " + "has unexpected items <[42` 43] (java.lang.Long)>");" is 213.,434
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,434
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,434
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,434
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,434
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 2,449
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 2,449
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,OptionalIntSubjectTest,namedOptionalInt,Magic Number,The method contains a magic number: 1337,34
truth,com.google.common.truth,OptionalIntSubjectTest,namedOptionalInt,Magic Number,The method contains a magic number: 42,34
truth,com.google.common.truth,OptionalIntSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337,50
truth,com.google.common.truth,OptionalIntSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337,75
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,82
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,82
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337,87
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337,96
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42,96
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalInt.of(1337)).hasValueThat().isLessThan(42));" is 123.,115
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337,115
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42,115
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337,123
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42,123
truth,com.google.common.truth,OptionalDoubleSubjectTest,namedOptionalDouble,Magic Number,The method contains a magic number: 1337.0,34
truth,com.google.common.truth,OptionalDoubleSubjectTest,namedOptionalDouble,Magic Number,The method contains a magic number: 42.0,34
truth,com.google.common.truth,OptionalDoubleSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337.0,50
truth,com.google.common.truth,OptionalDoubleSubjectTest,isPresentFailingWithNamed,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalDouble.empty()).named("name").isPresent());" is 121.,62
truth,com.google.common.truth,OptionalDoubleSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337.0,75
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,84
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,84
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337.0,89
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337.0,98
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42.0,98
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalDouble.of(1337.0)).hasValueThat().isLessThan(42.0));" is 130.,117
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337.0,117
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42.0,117
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337.0,126
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42.0,126
truth,com.google.common.truth,OptionalLongSubjectTest,namedOptionalLong,Magic Number,The method contains a magic number: 1337L,34
truth,com.google.common.truth,OptionalLongSubjectTest,namedOptionalLong,Magic Number,The method contains a magic number: 42L,34
truth,com.google.common.truth,OptionalLongSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337L,50
truth,com.google.common.truth,OptionalLongSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337L,75
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,82
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,82
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337L,87
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337L,96
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42L,96
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalLong.of(1337L)).hasValueThat().isLessThan(42L));" is 126.,115
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337L,115
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42L,115
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337L,123
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42L,123
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 4,31
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 5,31
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 5,31
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 4,31
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailureAbout,Long Statement,The length of the statement "AssertionError expected=expectFailureAbout(STRINGS`(SimpleSubjectBuilderCallback<StringSubject`String>)whenTesting -> whenTesting.that("foo").contains("bar"));" is 159.,41
truth,com.google.common.truth,OptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,115
truth,com.google.common.truth,OptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,115
truth,com.google.common.truth,OptionalSubjectTest,hasValue_Named_FailingWithSameToStrings,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that bar (<Optional[10]>) (class java.lang.Integer) " + "has value <10> (class java.lang.String)");" is 157.,132
truth,com.google.common.truth,OptionalSubjectTest,hasValue_Named_FailingWithSameToStrings,Magic Number,The method contains a magic number: 10,132
truth,com.google.common.truth,OptionalSubject,hasValue,Long Statement,The length of the statement "failWithRawMessage("Not true that %s (%s) has value <%s> (%s)"`actualAsString()`actual.getClass()`expected`expected.getClass());" is 128.,45
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 42,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 41,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 37802,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,sundar,Magic Number,The method contains a magic number: 5243,55
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.extension,EmployeeSubjectTest,id,Magic Number,The method contains a magic number: 37802,37
truth,com.google.common.truth.extension,EmployeeSubjectTest,id,Magic Number,The method contains a magic number: 12345,37
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,132
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 5,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 2,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 3,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 5,35
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 5,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 3,47
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsEqualToFailed,Long Statement,The length of the statement "expectRegex(e`"Not true that messages compare equal\\.\\s*" + "(Differences were found:\\n.*|No differences were reported\\..*)");" is 130.,182
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsNotEqualToFailed,Long Statement,The length of the statement "expectRegex(e`"Not true that messages compare not equal\\.\\s*" + "(Only ignorable differences were found:\\n.*|" + "No differences were found\\..*)");" is 151.,189
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectRegex,Long Statement,The length of the statement "expect.withMessage(String.format("Expected <%s> to match '%s'."`regex`t.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(t.getMessage()).matches()).isTrue();" is 174.,198
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectNoRegex,Long Statement,The length of the statement "expect.withMessage(String.format("Expected <%s> to match '%s'."`regex`t.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(t.getMessage()).matches()).isFalse();" is 175.,205
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,mapOf,Magic Number,The method contains a magic number: 2,224
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,mapOf,Magic Number,The method contains a magic number: 2,224
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,multimapOf,Magic Number,The method contains a magic number: 2,236
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,multimapOf,Magic Number,The method contains a magic number: 2,236
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 134.,145
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 133.,145
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 130.,145
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 135.,145
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 131.,161
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 136.,161
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 133.,161
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 132.,161
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 145.,177
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 150.,177
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 147.,177
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 146.,177
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 148.,193
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 147.,193
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 144.,193
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 149.,193
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message message=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 141.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage1=parse("o_int: 999999 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage2=parse("o_int: 3 o_sub_test_message: { o_int: 999999 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage3=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 999999 r_string: \"bar\" }");" is 151.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage4=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"999999\" }");" is 149.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"999999\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 146.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "FieldScope fieldScope=FieldScopes.ignoringFields(getFieldNumber("o_sub_test_message")).allowingFieldDescriptors(getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_int"));" is 196.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message scopeMessage=parse("o_int: 1 r_string: \"x\" o_test_message: { o_int: 1 } " + "r_test_message: { r_string: \"x\" } r_test_message: { o_int: 1 } " + "o_sub_test_message: { o_test_message: { o_int: 1 } }");" is 212.,334
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"2\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } "+ "o_sub_test_message: { o_int: 2 o_test_message: { o_int: 1 r_string: \"2\" } }");" is 276.,334
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message diffMessage=parse("o_int: 4 r_string: \"4\" o_test_message: {o_int: 4 r_string: \"3\" } " + "r_test_message: { o_int: 4 r_string: \"4\" } " + "r_test_message: { o_int: 4 r_string: \"4\" }"+ "o_sub_test_message: { r_string: \"3\" o_int: 3 "+ "o_test_message: { o_int: 4 r_string: \"3\" } }");" is 299.,334
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"3\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" }"+ "o_sub_test_message: { o_int: 3 o_test_message: { o_int: 1 r_string: \"3\" } }");" is 277.,334
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message scopeMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).build()).addField(21`Field.newBuilder().addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).build()).build()).addGroup(UnknownFieldSet.newBuilder().addField(2`Field.newBuilder().addFixed64(1).build()).build()).build()).build());" is 466.,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message message=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(2).addFixed64(2).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(2).addLengthDelimited(ByteString.copyFrom("2"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(2).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(2).addFixed64(2).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(2).build()).addField(2`Field.newBuilder().addFixed32(2).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(2).build()).build()).build()).build());" is 772.,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message diffMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(4).addFixed64(4).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(4).addLengthDelimited(ByteString.copyFrom("4"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(4).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(4).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build());" is 776.,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message eqMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build());" is 774.,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,410
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testInvalidFieldNumber,Magic Number,The method contains a magic number: 999,660
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 145.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage1=parse("o_int: 111 r_string: \"foo\" o_sub_test_message: { o_int: 222 " + "o_sub_sub_test_message: { o_int: 333 r_string: \"bar\" } }");" is 154.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage2=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 148.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage3=parse("r_string: \"foo\" o_sub_test_message: { " + "o_sub_sub_test_message: { r_string: \"bar\" } }");" is 121.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage4=parse("o_int: 333 r_string: \"foo\" o_sub_test_message: { o_int: 111 " + "o_sub_sub_test_message: { o_int: 222 r_string: \"bar\" } }");" is 154.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "FieldDescriptor bottom=getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_sub_sub_test_message").getMessageType().findFieldByName("o_int");" is 165.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "ImmutableMap<String`FieldScope> fieldScopes=ImmutableMap.of("BASIC"`FieldScopes.ignoringFieldDescriptors(top`middle`bottom)`"CHAINED"`FieldScopes.ignoringFieldDescriptors(top).ignoringFieldDescriptors(middle).ignoringFieldDescriptors(bottom)`"REPEATED"`FieldScopes.ignoringFieldDescriptors(top`middle).ignoringFieldDescriptors(middle`bottom));" is 343.,688
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqMessage1`eqMessage2);" is 131.,758
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqMessage1`eqMessage2);" is 180.,758
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,758
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 200.,758
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 194.,758
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 200.,758
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(listOf())).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,816
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,816
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(listOf())).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 144.,816
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 144.,816
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,853
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,853
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "assertThat(message).withPartialScope(FieldScopes.fromSetFields(TestMessage3.newBuilder().setOInt(2).build()`TestMessage3.newBuilder().addRString("foo").build())).isEqualTo(eqMessage);" is 183.,872
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "expectSubstr(expected`"Message given to FieldScopes.fromSetFields() " + "does not have the same descriptor as the message being tested");" is 137.,872
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Magic Number,The method contains a magic number: 2,872
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "expectThat(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage1);" is 144.,902
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "assertThat(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage2);" is 144.,902
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).ignoringFieldScope(FieldScopes.allowingFields(listOf(getFieldNumber("o_int")))).isEqualTo(eqExceptInt);" is 123.,921
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).withPartialScope(FieldScopes.ignoringFields(listOf(getFieldNumber("o_int")))).isEqualTo(eqExceptInt);" is 121.,921
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).reportingMismatchesOnly().ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).isEqualTo(eqExceptInt);" is 131.,921
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(listOf(getFieldDescriptor("o_int")))).isEqualTo(eqExceptInt);" is 137.,921
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).withPartialScope(FieldScopes.ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int")))).isEqualTo(eqExceptInt);" is 135.,921
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnly().ignoringFields(listOf(getFieldNumber("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 134.,953
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 122.,953
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnly().ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 148.,953
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldsForValues(listOf(getFieldNumber("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 151.,974
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 130.,974
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 165.,974
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldsForValues(listOf(getFieldNumber("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 151.,997
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 130.,997
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 165.,997
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,81
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,81
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,81
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactlyEntriesIn(multimapOf(1`eqMessage2`2`eqMessage1`1`eqMessage1));" is 134.,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactlyEntriesIn(multimapOf(1`eqMessage1`1`eqMessage2`2`eqMessage1)).inOrder();" is 144.,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactly(1`eqMessage1`1`eqMessage2`2`eqMessage1).inOrder();" is 123.,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Long Statement,The length of the statement "assertThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).containsExactly(eqMessage2`eqMessage1).inOrder();" is 122.,199
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,199
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,199
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,199
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,199
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqIgnoredMessage2);" is 135.,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqIgnoredMessage2);" is 136.,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "assertThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqRepeatedMessage2);" is 136.,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "assertThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqRepeatedMessage2);" is 137.,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(multimapOf(1`eqIgnoredMessage2`2`eqIgnoredMessage1`1`eqIgnoredMessage1));" is 198.,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(multimapOf(1`eqRepeatedMessage1`1`eqRepeatedMessage2`2`eqRepeatedMessage1)).inOrder();" is 206.,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "assertThat(multimapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(multimapOf(2`eqRepeatedMessage2`1`eqRepeatedMessage1));" is 153.,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "assertThat(multimapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(multimapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1)).inOrder();" is 177.,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,255
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(1`eqIgnoredMessage2`2`eqIgnoredMessage1`1`eqIgnoredMessage1);" is 177.,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`1`eqRepeatedMessage2`2`eqRepeatedMessage1).inOrder();" is 185.,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "assertThat(multimapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(2`eqRepeatedMessage2`1`eqRepeatedMessage1);" is 132.,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "assertThat(multimapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1).inOrder();" is 156.,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).ignoringFields(ignoreFieldNumber).containsExactly(eqIgnoredMessage2`eqIgnoredMessage1);" is 160.,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(2).ignoringRepeatedFieldOrder().containsExactly(eqRepeatedMessage1);" is 138.,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "assertThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).ignoringFields(ignoreFieldNumber).containsExactly(eqRepeatedMessage1`eqRepeatedMessage2);" is 162.,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,333
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(ImmutableMultimap.of(2`TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`2`TestMessage2.newBuilder().addRString("quibble").addRString("frozzit").build()`3`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(ImmutableMultimap.of(2`TestMessage2.newBuilder().addRString("frozzit").addRString("quibble").build()`3`TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`2`TestMessage2.newBuilder().addRString("bar").addRString("foo").build()));" is 568.,355
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,355
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,355
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,355
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,355
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,355
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,80
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,248
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,248
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqIgnoredMessage1`eqRepeatedMessage2);" is 124.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 127.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqRepeatedMessage1`eqRepeatedMessage2);" is 125.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqIgnoredMessage2));" is 126.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,286
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqRepeatedMessage2)).ignoringFields(ignoreFieldNumber).containsAllOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 142.,324
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqIgnoredMessage1)).ignoringRepeatedFieldOrder().containsAllIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2));" is 146.,324
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsExactly(eqIgnoredMessage2`eqIgnoredMessage1);" is 125.,355
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactly(eqRepeatedMessage1`eqRepeatedMessage2).inOrder();" is 132.,355
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsExactlyElementsIn(listOf(eqIgnoredMessage2`eqIgnoredMessage1));" is 143.,355
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2)).inOrder();" is 150.,355
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqMessage2`eqMessage1)).inOrder();" is 134.,355
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsNoneOf(eqRepeatedMessage1`eqIgnoredMessage2);" is 125.,411
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,411
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "assertThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsNoneIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 128.,411
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,411
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "assertThat(listOf(message1)).withPartialScope(FieldScopes.fromSetFields(message2)).ignoringRepeatedFieldOrder().contains(message2);" is 131.,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectSubstr(expected`"assertThat(proto).withPartialScope(FieldScopes.fromSetFields({o_int: 3\n" + "r_string: \"baz\"\n" + "r_string: \"qux\"\n"+ "})).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 200.,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "assertThat(listOf(message1)).ignoringRepeatedFieldOrder().ignoringFieldScope(FieldScopes.ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string"))).ignoringFieldAbsence().contains(message2);" is 199.,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectSubstr(expected`"assertThat(proto)" + ".ignoringRepeatedFieldOrder()" + ".ignoringFieldScope("+ "FieldScopes.ignoringFields(" + fullMessageName() + ".o_int` "+ fullMessageName()+ ".r_string))"+ ".ignoringFieldAbsence()"+ ".isEqualTo(target)");" is 249.,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectSubstr(expected`"assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_enum` "+ fullMessageName()+ ".o_test_message)"+ ".reportingMismatchesOnly()"+ ".isEqualTo(target)");" is 189.,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Magic Number,The method contains a magic number: 7,449
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(listOf(TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrder().containsExactly(TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 346.,516
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compareByOIntAscending,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,533
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compare,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,535
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1111,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 10,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 100,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1000,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 139.,130
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,144
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFieldsForValues(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(1`message3`2`message4).inOrder();" is 152.,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,234
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_assertAbout_listAndSet,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 3,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFieldsForValues(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactlyEntriesIn(multimapOf(1`message3`1`message4`2`message3)).inOrder();" is 184.,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).valuesForKey(1).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 155.,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 3,336
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Long Statement,The length of the statement "assertThat(altActualObjects).containsExactlyEntriesIn(multimapOf("b"`21 * 2`"a"`"Ba" + "z!"`"a"`"Foo! Bar!".substring(0`4)));" is 125.,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,353
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,100
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,100
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,100
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,152
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 150.,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "assertThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqRepeatedMessage1);" is 121.,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectSubstr(expected`"is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 122.,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1);" is 141.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`2`eqRepeatedMessage2).inOrder();" is 148.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(mapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1));" is 157.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(mapOf(1`eqRepeatedMessage1`2`eqRepeatedMessage2)).inOrder();" is 164.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "assertThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1).inOrder();" is 151.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "assertThat(mapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(mapOf(2`eqRepeatedMessage2`1`eqRepeatedMessage1));" is 143.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "assertThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(mapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1)).inOrder();" is 167.,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,235
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(ImmutableMap.of(2`TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`3`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrderForValues().containsExactly(3`TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`2`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 372.,291
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message message=fromUnknownFields(UnknownFieldSet.newBuilder().addField(99`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build());" is 142.,85
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message diffMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(93`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build());" is 146.,85
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 99,85
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,85
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 93,85
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,85
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message nestedMessage=parse("r_test_message: { o_int: 33 r_string: \"foo\" r_string: \"bar\" } " + "r_test_message: { o_int: 44 r_string: \"baz\" r_string: \"qux\" } ");" is 169.,124
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message diffNestedMessage=parse("r_test_message: { o_int: 33 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 44 r_string: \"bar\" r_string: \"foo\" } ");" is 173.,124
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message eqNestedMessage=parse("r_test_message: { o_int: 44 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 33 r_string: \"bar\" r_string: \"foo\" } ");" is 171.,124
truth,com.google.common.truth.extensions.proto,ProtoSubject,isEqualTo,Complex Conditional,The conditional expression getSubject() == null || expected == null || getSubject().getClass() != expected.getClass() is complex.,141
truth,com.google.common.truth.extensions.proto,ProtoSubject,isNotEqualTo,Complex Conditional,The conditional expression getSubject() == null || expected == null || getSubject().getClass() != expected.getClass() is complex.,169
truth,com.google.common.truth.extensions.proto,ProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has all required fields set. Missing: %s"`getTrimmedDisplaySubject()`getSubject().findInitializationErrors());" is 147.,183
truth,com.google.common.truth.extensions.proto,MessageDifferencer,approximatelyEquivalent,Long Statement,The length of the statement "return newBuilder().setMessageFieldComparison(MessageFieldComparison.EQUIVALENT).setFloatComparison(FloatComparison.APPROXIMATE).build().compare(message1`message2);" is 164.,411
truth,com.google.common.truth.extensions.proto,MessageDifferencer,ignoringFields,Long Statement,The length of the statement "@Override public boolean isIgnored( Message message1` Message message2` FieldDescriptor fieldDescriptor` List<SpecificField> fieldPath){" is 136.,452
truth,com.google.common.truth.extensions.proto,MessageDifferencer,mergeCriteria,Long Statement,The length of the statement "@Override public boolean isIgnored( Message message1` Message message2` FieldDescriptor fieldDescriptor` List<SpecificField> fieldPath){" is 136.,463
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareWithFields,Long Parameter List,The method has 5 parameters. ,807
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compare,Complex Conditional,The conditional expression message1 == message2 && (reporter == null || !reportMatches) is complex.,826
truth,com.google.common.truth.extensions.proto,MessageDifferencer,checkSameDescriptor,Long Statement,The length of the statement "Preconditions.checkArgument(message1.getDescriptorForType().equals(message2.getDescriptorForType())`"Comparison between two messages with different descriptors: %s and %s"`message1.getClass()`message2.getClass());" is 213.,845
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareUnknownFields,Complex Conditional,The conditional expression identical && (reporter == null || !reportMatches) is complex.,860
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareUnknownFields,Complex Method,Cyclomatic complexity of the method is 20,860
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareUnknownFields,Long Parameter List,The method has 6 parameters. ,860
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRequestedFields,Long Parameter List,The method has 6 parameters. ,939
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareWithFieldsInternal,Complex Method,Cyclomatic complexity of the method is 18,976
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareWithFieldsInternal,Long Parameter List,The method has 6 parameters. ,976
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Parameter List,The method has 7 parameters. ,1069
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Statement,The length of the statement "Preconditions.checkArgument(field.getJavaType() == JavaType.MESSAGE`"FieldComparator should not return RECURSE for fields not being submessages!");" is 147.,1069
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Statement,The length of the statement "Message nextMessage1=field.isRepeated() ? (Message)message1.getRepeatedField(field`index1) : (Message)message1.getField(field);" is 127.,1069
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareFieldValueUsingParentFields,Long Statement,The length of the statement "Message nextMessage2=field.isRepeated() ? (Message)message2.getRepeatedField(field`index2) : (Message)message2.getField(field);" is 127.,1069
truth,com.google.common.truth.extensions.proto,MessageDifferencer,report,Long Parameter List,The method has 7 parameters. ,1097
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRepeatedField,Complex Conditional,The conditional expression count1 != count2 && reporter == null && !treatedAsSubset is complex.,1121
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRepeatedField,Complex Method,Cyclomatic complexity of the method is 18,1121
truth,com.google.common.truth.extensions.proto,MessageDifferencer,compareRepeatedField,Long Parameter List,The method has 5 parameters. ,1121
truth,com.google.common.truth.extensions.proto,MessageDifferencer,matchRepeatedFieldIndices,Complex Method,Cyclomatic complexity of the method is 8,1212
truth,com.google.common.truth.extensions.proto,MessageDifferencer,matchRepeatedFieldIndices,Long Parameter List,The method has 6 parameters. ,1212
truth,com.google.common.truth.extensions.proto,MessageDifferencer,isMatch,Long Parameter List,The method has 7 parameters. ,1254
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,toIgnoreCriteria,Long Identifier,The length of the field matchStateAppliesForAllSubPaths is 31.,70
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,toIgnoreCriteria,Long Statement,The length of the statement "@Override public boolean isIgnored( Message message1` Message message2` @Nullable FieldDescriptor fieldDescriptor` List<SpecificField> fieldPath){" is 146.,70
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,isIgnored,Long Identifier,The length of the field matchStateAppliesForAllSubPaths is 31.,78
truth,com.google.common.truth.extensions.proto,FieldScopeLogic,matchStateAppliesForAllSubPaths,Long Identifier,The length of the field matchStateAppliesForAllSubPaths is 31.,204
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,shouldMaybeIgnore,Missing default,The following switch statement is missing a default case: switch (this) {,74
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "checkArgument(actual.getDescriptorForType() == expected.getDescriptorForType()`"The actual [%s] and expected [%s] message descriptors do not match."`actual.getDescriptorForType()`expected.getDescriptorForType());" is 212.,190
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addAllSingularFields(fieldDescriptor.getNumber()`compareMapFieldsByKey(actualMap`expectedMap`keyOrder`fieldDescriptor`fieldScopeLogic));" is 144.,203
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addRepeatedField(fieldDescriptor.getNumber()`compareRepeatedFieldIgnoringOrder(actualList`expectedList`shouldIgnore.shouldMaybeIgnore()`fieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 228.,203
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addAllSingularFields(fieldDescriptor.getNumber()`compareRepeatedFieldByIndices(actualList`expectedList`shouldIgnore.shouldMaybeIgnore()`fieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 228.,203
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addSingularField(fieldDescriptor.getNumber()`compareSingularValue(actualFields.get(fieldDescriptor)`expectedFields.get(fieldDescriptor)`actual.getDefaultInstanceForType().getField(fieldDescriptor)`shouldIgnore.shouldMaybeIgnore()`name(fieldDescriptor)`fieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 344.,203
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,toProtoMap,Magic Number,The method contains a magic number: 2,288
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Parameter List,The method has 5 parameters. ,314
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Statement,The length of the statement "builder.add(compareSingularValue(actualValue`expectedValue`null`shouldIgnoreValue.shouldMaybeIgnore()`indexedName(mapFieldDescriptor`key)`valueFieldDescriptor`valueFieldScopeLogic));" is 182.,314
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Magic Number,The method contains a magic number: 2,314
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Parameter List,The method has 5 parameters. ,352
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "RepeatedField.Builder builder=RepeatedField.newBuilder().setFieldName(name(fieldDescriptor)).setActual(actualList).setExpected(expectedList);" is 141.,352
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "RepeatedField.PairResult pairResult=compareRepeatedFieldElementPair(actual`expected`shouldMaybeIgnore`fieldDescriptor`i`j`fieldScopeLogic);" is 139.,352
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(compareRepeatedFieldElementPair(actualList.get(i)`null`shouldMaybeIgnore`fieldDescriptor`i`null`fieldScopeLogic));" is 136.,352
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(compareRepeatedFieldElementPair(null`expectedList.get(j)`shouldMaybeIgnore`fieldDescriptor`null`j`fieldScopeLogic));" is 138.,352
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Parameter List,The method has 7 parameters. ,411
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Statement,The length of the statement "SingularField comparison=compareSingularValue(actual`expected`null`shouldMaybeIgnore`"<no field path>"`fieldDescriptor`fieldScopeLogic);" is 136.,411
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldByIndices,Long Parameter List,The method has 5 parameters. ,452
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldByIndices,Long Statement,The length of the statement "builder.add(compareSingularValue(actual`expected`null`shouldMaybeIgnore`indexedName(fieldDescriptor`i)`fieldDescriptor`fieldScopeLogic));" is 137.,452
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularValue,Long Parameter List,The method has 7 parameters. ,484
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularValue,Long Statement,The length of the statement "return compareSingularMessage((Message)actual`(Message)expected`(Message)defaultValue`shouldMaybeIgnore`fieldName`fieldScopeLogic);" is 131.,484
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularMessage,Long Parameter List,The method has 6 parameters. ,518
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffUnknowns,Long Statement,The length of the statement "builder.addAllSingularFields(fieldNumber`compareUnknownFieldList(actualValues`expectedValues`shouldIgnore.shouldMaybeIgnore()`unknownFieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 217.,594
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldList,Long Parameter List,The method has 5 parameters. ,638
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldList,Long Statement,The length of the statement "builder.add(compareUnknownFieldValue(actual`expected`shouldMaybeIgnore`indexedName(unknownFieldDescriptor`i)`unknownFieldDescriptor`fieldScopeLogic));" is 150.,638
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldValue,Long Parameter List,The method has 6 parameters. ,662
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldValue,Long Statement,The length of the statement "return compareUnknownFieldSet((UnknownFieldSet)actual`(UnknownFieldSet)expected`shouldMaybeIgnore`fieldName`fieldScopeLogic);" is 125.,662
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldSet,Long Parameter List,The method has 5 parameters. ,682
truth,com.google.common.truth.extensions.proto,DiffResult,childEntities,Long Statement,The length of the statement "ImmutableList.Builder<RecursableDiffEntity> builder=ImmutableList.builderWithExpectedSize(singularFields().size() + repeatedFields().size() + unknownFields().asSet().size());" is 174.,303
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubject,valuesForKey,Long Statement,The length of the statement "Subject.Factory<IterableValuesForKey<M>`Iterable<M>> factory=iterableOfProtos("Values for key <" + key + "> (<"+ actual()+ ">) in "+ actualAsString());" is 151.,176
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringRepeatedFieldOrder,Long Statement,The length of the statement "return toBuilder().setIgnoreRepeatedFieldOrder(true).addUsingCorrespondenceString(".ignoringRepeatedFieldOrder()").build();" is 123.,96
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,withPartialScope,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(FieldScopeLogic.and(fieldScopeLogic()`partialScope.logic())).addUsingCorrespondenceFieldScopeString(".withPartialScope(%s)"`partialScope).build();" is 184.,110
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFields,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(fieldScopeLogic().ignoringFields(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers).build();" is 171.,117
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(fieldScopeLogic().ignoringFieldDescriptors(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDescriptors(%s)"`fieldDescriptors).build();" is 203.,124
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldScope,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(FieldScopeLogic.and(fieldScopeLogic()`FieldScopeLogic.not(fieldScope.logic()))).addUsingCorrespondenceFieldScopeString(".ignoringFieldScope(%s)"`fieldScope).build();" is 203.,132
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,makeMessageDifferencer,Long Statement,The length of the statement "return MessageDifferencer.newBuilder().setMessageFieldComparison(ignoreFieldAbsence() ? MessageDifferencer.MessageFieldComparison.EQUIVALENT : MessageDifferencer.MessageFieldComparison.EQUAL).setRepeatedFieldComparison(ignoreRepeatedFieldOrder() ? MessageDifferencer.RepeatedFieldComparison.AS_SET : MessageDifferencer.RepeatedFieldComparison.AS_LIST).setReportMatches(!reportMismatchesOnly()).addIgnoreCriteria(fieldScopeLogic().toIgnoreCriteria(descriptor)).build();" is 468.,144
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toCorrespondence,Long Statement,The length of the statement "return "is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to";" is 123.,163
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toString,Long Statement,The length of the statement "return "is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to";" is 123.,173
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,create,Long Identifier,The length of the parameter usingCorrespondenceStringFunction is 33.,50
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(message)`Functions.constant(String.format("FieldScopes.fromSetFields({%s})"`message.toString())));" is 141.,65
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none()`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`messages.toString())));" is 125.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "checkArgument(optDescriptor.isPresent()`"Cannot create scope from messages with different descriptors: %s"`getDescriptors(messages));" is 133.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(aggregateMessage)`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`formatList(messages))));" is 150.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFields,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.ignoringFields(%s)"`fieldNumbers));" is 149.,103
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.ignoringFieldDescriptors(%s)"`join(fieldDescriptors))));" is 181.,109
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.allowingFields(%s)"`fieldNumbers));" is 150.,116
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.allowingFieldDescriptors(%s)"`join(fieldDescriptors))));" is 182.,122
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFields,Long Statement,The length of the statement "return create(logic().ignoringFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers));" is 129.,165
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFieldDescriptors,Long Statement,The length of the statement "return create(logic().ignoringFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDesciptors(%s)"`fieldDescriptors));" is 160.,178
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFields,Long Statement,The length of the statement "return create(logic().allowingFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".allowingFields(%s)"`fieldNumbers));" is 129.,191
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFieldDescriptors,Long Statement,The length of the statement "return create(logic().allowingFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".allowingFieldDescriptors(%s)"`fieldDescriptors));" is 161.,204
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,addUsingCorrespondenceFieldDescriptorsString,Long Statement,The length of the statement "return FieldScopeUtil.concat(usingCorrespondenceStringFunction()`Functions.constant(String.format(fmt`join(fieldDescriptors))));" is 128.,219
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "TestMessageLite2WithRequiredFields withoutRequiredFields=TestMessageLite2WithRequiredFields.newBuilder().setOptionalString("foo").buildPartial();" is 145.,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto2Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite2.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite2.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite2.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite2.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite2.newBuilder().buildPartial()).setMessageWithoutRequiredFields(withoutRequiredFields).build();" is 672.,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto3Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite3.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite3.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite3.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite3.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite3.newBuilder().buildPartial()).build();" is 617.,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,85
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`"Not true that \\(.*\\) proto is equal to the expected \\(.*\\) object\\.\\s*" + "They are not of the same class\\.");" is 132.,174
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that protos are different\\.\\s*Both are \\(%s\\) <.*optional_int: 3.*>\\."`Pattern.quote(config.nonEmptyMessage().getClass().getName())));" is 177.,174
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testHasAllRequiredFields_failures,Long Statement,The length of the statement "expectRegex(e`"Not true that <.*> has all required fields set\\.\\s*" + "\\(Lite runtime could not determine which fields were missing\\.\\)");" is 143.,211
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testDefaultInstance_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that \\(%s\\) <.*\\[empty proto\\].*> is not a default " + "proto instance\\.\\s*It has no set values\\."`Pattern.quote(config.defaultInstance().getClass().getName())));" is 207.,238
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,expectRegex,Long Statement,The length of the statement "expect.withMessage(String.format("Expected <%s> to match '%s'."`regex`e.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(e.getMessage()).matches()).isTrue();" is 174.,294
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,expectNoRegex,Long Statement,The length of the statement "expect.withMessage(String.format("Expected <%s> to match '%s'."`regex`e.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(e.getMessage()).matches()).isFalse();" is 175.,301
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,getTrimmedToString,Long Statement,The length of the statement "String objectToString=String.format("# %s@%s"`messageLite.getClass().getName()`Integer.toHexString(messageLite.hashCode()));" is 124.,84
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that (%s) %s is equal to the expected (%s) object. " + "They are not of the same class."`actual().getClass().getName()`internalCustomName() != null ? internalCustomName() + " (proto)" : "proto"`expected.getClass().getName());" is 254.,107
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualTo,Long Statement,The length of the statement "failComparing("Not true that protos are equal:"`String.format("(%s) %s"`expected.getClass().getName()`theirString)`String.format("(%s) %s"`actual().getClass().getName()`ourString));" is 181.,107
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that protos are different. Both are (%s) <%s>."`actual().getClass().getName()`getTrimmedToString(actual()));" is 137.,151
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualToDefaultInstance,Long Statement,The length of the statement "failWithRawMessage("Not true that (%s) %s is not a default proto instance. It has no set values."`actual().getClass().getName()`getTrimmedDisplaySubject());" is 156.,185
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has all required fields set. " + "(Lite runtime could not determine which fields were missing.)"`getTrimmedDisplaySubject());" is 162.,194
