Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,89
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[jan=1` feb=2]>. " + "It has unexpected items <[march=3]>");" is 151.,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntry,Magic Number,The method contains a magic number: 2,115
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly <[feb=2` jan=1]>. " + "It has unexpected items <[march=3]>");" is 151.,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingEntryInOrder,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[jan=1` feb=2` march=3]> contains exactly these elements in order " + "<[jan=1` march=3` feb=2]>");" is 147.,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessage("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 151.,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,170
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,189
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "The subject is missing the following entries: {april=4} and " + "has the following extra entries: {feb=2} and "+ "has the following different entries: {march=(5` 3)}");" is 287.,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,197
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "The subject has the following different entries: {march=(4` 3)}");" is 183.,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,216
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,216
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that foo (<{jan=1` feb=2` march=3}>) is equal to <{jan=1` feb=2` march=4}>." + " The subject has the following different entries: {march=(4` 3)}");" is 189.,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,233
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "The subject has the following extra entries: {march=3}");" is 165.,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "The subject is missing the following entries: {march=3}");" is 166.,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,267
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "The subject is missing the following entries: {mar=3} " + "and has the following extra entries: {march=3}");" is 223.,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,302
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,302
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,323
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,334
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,351
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,351
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,361
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,361
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 146.,470
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{null=null}> contains entry <null=kluever>. " + "However` it has a mapping from <null> to <null>");" is 140.,485
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=null}> contains entry <a=A>. " + "However` it has a mapping from <a> to <null>");" is 125.,601
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{a=A}> contains entry <a=null>. " + "However` it has a mapping from <a> to <A>");" is 122.,616
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,630
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 192.,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,638
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 205.,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 136.,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,672
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,688
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,696
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failsMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,704
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 172.,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,712
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,728
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,736
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,745
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 128.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,762
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,781
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,800
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 128.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,819
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,837
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Empty catch clause,The method has an empty catch block.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,849
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,861
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,870
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456]>. It has unexpected elements <[abc=123]>");" is 250.,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` xyz=999` abc=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<xyz=999>");" is 352.,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,898
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` cab=123]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<cab=123> and has unexpected elements <[abc=123]>");" is 383.,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,918
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each " + "element of <[def=456` abc=321]>. It is missing an element that has a "+ "key that is equal to and a value that parses to the key and value of "+ "<abc=321> and has unexpected elements <[abc=123]>");" is 383.,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,938
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[abc=123` def=456]> contains` in order` exactly one element that has" + " a key that is equal to and a value that parses to the key and value of each" + " element of <[def=456` abc=123]>");" is 230.,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,958
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,977
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,977
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(TestVerb.class.getMethods())).filter(new Predicate<Method>(){" is 131.,50
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchTestVerbInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 129.,50
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 13,46
truth,com.google.common.truth,RelabeledSubjectsTest,namedIncludesActualIntegerValue,Magic Number,The method contains a magic number: 12,46
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledCollections,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that crazy list (<[a` b` c]>) contains all of <[c` d]>. " + "It is missing <[d]>");" is 125.,81
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Long Statement,The length of the statement "assertThat(error).hasMessage("Not true that crazy list has values within 1.0E-7 of <[1.3` 1.0]>. " + "It differs at indexes <[1]>");" is 132.,94
truth,com.google.common.truth,RelabeledSubjectsTest,relabelledPrimitiveFloatArrays,Magic Number,The method contains a magic number: 0.0000001f,94
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,51
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,61
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,74
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,89
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,104
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,113
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,123
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,137
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.0>");" is 150.,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,144
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.0,144
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has first element <1>. " + "It does contain this element` but the first element is <0>");" is 141.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0` 1` 2]> has last element <1>. " + "It does contain this element` but the last element is <2>");" is 139.,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has first element <1>. " + "It does not contain this element` and the first element is <0>");" is 139.,117
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[0]> has last element <1>. " + "It does not contain this element` and the last element is <0>");" is 137.,117
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,53
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,53
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,83
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,83
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <5> (java.lang.Integer) " + "is equal to <5> (com.google.common.truth.SubjectTest$IntWrapper)");" is 143.,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <ab> is the same instance as <ab>" + " (although their toString() representations are the same)");" is 138.,204
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithDifferentTypesAndSameToString,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <true> (java.lang.String) is the same" + " instance as <true> (java.lang.Boolean)");" is 124.,219
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <4.5> is an instance of <java.lang.Long>." + " It is an instance of <java.lang.Double>");" is 129.,476
truth,com.google.common.truth,SubjectTest,isInstanceOfFail,Magic Number,The method contains a magic number: 4.5,476
truth,com.google.common.truth,SubjectTest,isNotInstanceOfFail,Magic Number,The method contains a magic number: 5,494
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,675
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,688
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <Foo{nums=[1` 2]}> is equal to <Foo{nums=[1` 2]}> " + "(although their toString() representations are the same)");" is 161.,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_autovalue,Magic Number,The method contains a magic number: 2L,724
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1` 2` 3]> is equal to <[1` 2` 3]> " + "(although their toString() representations are the same)");" is 147.,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 2L,741
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString_immutableSets,Magic Number,The method contains a magic number: 3L,741
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 12,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended,Magic Number,The method contains a magic number: 13,43
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,54
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,54
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 12,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended,Magic Number,The method contains a magic number: 13,78
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 12,89
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed,Magic Number,The method contains a magic number: 13,89
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,130
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,141
truth,com.google.common.truth,CustomFailureMessageTest,assertWithMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,141
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 12,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrepended_withPlaceholders,Magic Number,The method contains a magic number: 13,165
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 12,176
truth,com.google.common.truth,CustomFailureMessageTest,customMessageIsPrependedWithNamed_withPlaceholders,Magic Number,The method contains a magic number: 13,176
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,204
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,213
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,222
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,67
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,80
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,80
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 5,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan,Magic Number,The method contains a magic number: 4,105
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 5,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ComparableSubjectTest,isLessThan,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,141
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,154
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,169
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,169
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,199
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,223
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 163.,246
truth,com.google.common.truth,ComparableSubjectTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,246
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 166.,276
truth,com.google.common.truth,ComparableSubjectTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,276
truth,com.google.common.truth,MultisetSubjectTest,multisetIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,41
truth,com.google.common.truth,MultisetSubjectTest,multisetIsNotEmpty,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,69
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,79
truth,com.google.common.truth,MultisetSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,88
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,98
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversed,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.Object> " + "is assignable to <class java.lang.String>");" is 121.,43
truth,com.google.common.truth,ClassSubjectTest,testIsAssignableTo_reversedDifferentTypes,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <class java.lang.String> " + "is assignable to <class java.lang.Exception>");" is 124.,56
truth,com.google.common.truth,AbstractArraySubjectTest,canBeUsedInSubjectFactories,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 2,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 3,42
truth,com.google.common.truth,ExampleTest,listHasElements,Magic Number,The method contains a magic number: 5,42
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExampleTest,equalityFail,Magic Number,The method contains a magic number: 5,54
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 3,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 5,75
truth,com.google.common.truth,ExampleTest,expectRange,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,ExampleTest,customTypeCompares,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,58
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,69
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,69
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,33
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,33
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,62
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,62
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,91
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,147
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,163
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,179
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,192
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,260
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,285
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Float) is equal to <%s> (java.lang.Double)"`1.23f`1.23));" is 127.,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,FloatSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,358
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,379
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,401
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.POSITIVE_INFINITY+ ">");" is 127.,410
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,426
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Float.NEGATIVE_INFINITY+ ">");" is 127.,435
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,451
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,471
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,492
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,40
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,51
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,ExpectFailureTest,expectFailNotEquals,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,45
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,50
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,56
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,90
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,105
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,114
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,134
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,148
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,38
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,38
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,intIsInt,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,60
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,65
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,75
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,IntegerSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5,85
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsNotEqualToNull,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsNotEqualToNull,Magic Number,The method contains a magic number: 4L,131
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,138
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerNullIsNotEqualTo,Magic Number,The method contains a magic number: 4L,144
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatIntegerIsEqualToLong,Magic Number,The method contains a magic number: 4L,150
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4L,157
truth,com.google.common.truth,IntegerSubjectTest,assertThatLongIsEqualToInteger,Magic Number,The method contains a magic number: 4,157
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4L,208
truth,com.google.common.truth,IntegerSubjectTest,primitives,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4L,218
truth,com.google.common.truth,IntegerSubjectTest,boxedPrimitives,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4L,242
truth,com.google.common.truth,IntegerSubjectTest,mixedBoxedAndUnboxedPrimitives,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,304
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,323
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,323
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,342
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Long Method,The method has 114 lines of code.,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_fail,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,463
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "expected:<[foobar]> but was:<[message]>");" is 147.,50
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_MessageHasNullMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <\"message\"> is null");" is 143.,65
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_Named_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for NPE(java.lang.NullPointerException): " + "expected:<[foobar]> but was:<[message]>");" is 152.,78
truth,com.google.common.truth,ThrowableSubjectTest,hasMessageThat_NullMessageHasMessage_failure,Long Statement,The length of the statement "assertThat(expected.getMessage()).isEqualTo("Unexpected message for java.lang.NullPointerException: " + "Not true that <null> is equal to <\"message\">");" is 154.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first key <1>. " + "It does contain this key` but the first key is <0>");" is 135.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last key <1>. " + "It does contain this key` but the last key is <2>");" is 133.,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has first key <1>. " + "It does not contain this key` and the first key is <0>");" is 129.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0}> has last key <1>. " + "It does not contain this key` and the last key is <0>");" is 127.,117
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=0>. " + "It does contain this entry` but the first entry is <0=0>");" is 145.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=0>. " + "It does contain this entry` but the last entry is <2=0>");" is 143.,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,184
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,226
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has first entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the first entry is <0=0>");" is 173.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=0` 2=0}> has last entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the last entry is <2=0>");" is 171.,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has first entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the first entry is <0=0>");" is 191.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=2}> has last entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the last entry is <2=2>");" is 189.,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,268
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has first entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the first entry is <0=0>");" is 204.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{0=0` 1=1` 2=1` 3=3}> has last entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the last entry is <3=3>");" is 202.,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,291
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has first entry <2=2>. " + "It does not contain this entry` and the first entry is <1=0>");" is 139.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <{1=0}> has last entry <2=2>. " + "It does not contain this entry` and the last entry is <1=0>");" is 137.,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,41
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4d,51
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,57
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,65
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,90
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,103
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,115
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,147
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,159
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2d,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,192
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1d,198
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2d,204
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3d,210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3d,216
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,227
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).isNotEqualTo(array(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,241
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3d,249
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,261
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2d,281
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,299
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,304
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,311
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,326
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,339
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,352
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,380
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,394
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,420
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,433
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2d,443
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,453
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0d,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 153.,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,484
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 155.,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,491
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 144.,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,508
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 150.,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 140.,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,538
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 130.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 151.,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,553
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 146.,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,568
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 145.,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,583
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 131.,598
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,611
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,623
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,633
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,645
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,651
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,657
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,670
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,686
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3d,694
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,708
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,724
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,739
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,755
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2d,784
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,795
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,806
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3d,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,830
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,838
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 130.,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,853
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`nextAfter(3.3d + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 156.,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,871
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 133.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 126.,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,879
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(double[]) [2.2` 3.3]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 121.,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,895
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,911
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,946
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,959
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0);" is 128.,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0,972
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0`nextAfter(2.0 + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 127.,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,979
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.0>");" is 190.,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0,986
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 178.,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0,1005
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 168.,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0,1022
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1039
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1055
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0,1066
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0,1071
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0,1091
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0,1096
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0,1108
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0,1108
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,41
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,47
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,60
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,80
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,95
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,105
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,121
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[5]` [A]]>." + " It differs at index <[0][0]>");" is 128.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A` B]` [5]]> is equal to <[[A]` [5]]>." + " It differs at index <[0][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(Object[][]) [[A]` [5]]> is equal to <[[A]` [5` 6]]>." + " It differs at index <[1][1]>");" is 131.,133
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,166
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,184
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,191
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,196
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,216
truth,com.google.common.truth,ObjectArraySubjectTest,stringArrayIsEqualTo_Fail_UnequalOrderingMultiDimensional,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(String[][]) [[A]` [B]]> is equal to <[[B]` [A]]>." + " It differs at index <[0][0]>");" is 128.,291
truth,com.google.common.truth,ObjectArraySubjectTest,SetArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 133.,308
truth,com.google.common.truth,ObjectArraySubjectTest,primitiveMultiDimensionalArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(int[][]) [[1` 2]` [3]` [4` 5` 6]]> " + "is equal to <[[1` 2]` [3]` [4` 5` 6` 7]]>. It differs at index <[2][3]>");" is 156.,330
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,35
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,52
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,69
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,87
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,105
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,105
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,59
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,73
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,78
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,89
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,99
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,121
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,43
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,48
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,57
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,67
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,77
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,91
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,91
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,50
truth,com.google.common.truth,AtomicLongMapSubjectTest,isEqualToFail,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <{}> is equal to <{}> " + "(although their toString() representations are the same)");" is 133.,34
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,100
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,109
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,121
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,221
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,272
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,33
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,33
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values within" + " <%s> of each other"`actual`expected`tolerance));" is 170.,47
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,62
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,62
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage(String.format("testValue (<%s>) and <%s> should have been finite values not within" + " <%s> of each other"`actual`expected`tolerance));" is 174.,76
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,91
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,147
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,163
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,179
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,192
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,260
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,285
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Long Statement,The length of the statement "assertThat(e).hasMessage(String.format("Not true that <%s> (java.lang.Double) is equal to <%s> (java.lang.Float)"`1.23`1.23f));" is 127.,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,310
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23f,310
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,338
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,338
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,358
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,379
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,401
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.POSITIVE_INFINITY+ ">");" is 128.,410
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,426
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "assertThat(assertionError).hasMessage("Not true that testValue (<" + value + ">) is equal to <"+ Double.NEGATIVE_INFINITY+ ">");" is 128.,435
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,451
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,471
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,492
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2L,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,36
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,longIsLong,Magic Number,The method contains a magic number: 4L,41
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2L,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,46
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2L,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 2,65
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,65
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2L,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 2,75
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Empty catch clause,The method has an empty catch block.,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2L,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 2,85
truth,com.google.common.truth,LongSubjectTest,additionAssumptionFail,Magic Number,The method contains a magic number: 5L,85
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail,Magic Number,The method contains a magic number: 5L,99
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,115
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,64
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,64
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,83
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 3,93
truth,com.google.common.truth,IterableSubjectTest,namedIterableContainsFailure,Magic Number,The method contains a magic number: 5,93
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,IterableSubjectTest,failureMessageIterableContainsFailure,Magic Number,The method contains a magic number: 5,103
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,138
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,163
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,168
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,178
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 3,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,192
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 3,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,202
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,207
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 3,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 4,212
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains all of <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 131.,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,264
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains all of <[1` null` null` 3]>. " + "It is missing <[null]>");" is 123.,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,276
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,294
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 7,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,311
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,322
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,367
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,372
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,384
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,428
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,433
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,438
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,461
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,466
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,471
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithElementsThatThrowWhenYouCallHashCode,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[HCT` HCT]> contains exactly <[HCT]>. " + "It has unexpected items <[HCT]>");" is 125.,476
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInErrorMessageIsOrdered,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[foo OR bar]> contains exactly <[foo` bar]>. " + "It is missing <[foo` bar]> and has unexpected items <[foo OR bar]>");" is 160.,531
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,556
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3]>. " + "It is missing <[2 [2 copies]]>");" is 126.,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 132.,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,581
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 2` 2` 2` 3]> contains exactly <[1` 2` 2` 3]>. " + "It has unexpected items <[2 [2 copies]]>");" is 142.,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,594
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` null` 3]> contains exactly <[1` null` null` 3]>. " + "It is missing <[null]>");" is 124.,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3]> contains exactly <[1` 2` 4]>. " + "It is missing <[4]> and has unexpected items <[3]>");" is 140.,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,636
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 3]> contains exactly <[1` 2` 4` 4]>. " + "It is missing <[4 [2 copies]]> and has unexpected items <[3 [2 copies]]>");" is 168.,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2` 3` 4]]>. " + "It is missing <[[1` 2` 3` 4]]> and has unexpected items <[1` 2` 3` 4]>. " + "Passing an iterable to the varargs method containsExactly(Object...) is "+ "often not the correct thing to do. Did you mean to call "+ "containsExactlyElementsIn(Iterable) instead?");" is 355.,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,662
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1` 2` 3]>. " + "It has unexpected items <[4]>");" is 122.,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2]` [3` 4]]>. " + "It is missing <[[1` 2]` [3` 4]]> and has unexpected items <[1` 2` 3` 4]>");" is 172.,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,691
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[1` 2` 3` 4]> contains exactly <[1]>. " + "It has unexpected items <[2` 3` 4]>");" is 122.,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,704
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,717
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,727
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,753
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 2,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 3,810
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 4,810
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 4,817
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,828
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,828
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 2,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,837
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 4,837
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 3,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 4,844
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,855
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,855
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,933
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,933
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_success,Magic Number,The method contains a magic number: 456,966
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 134.,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_failure,Magic Number,The method contains a magic number: 2345,974
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_contains_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,990
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Long Statement,The length of the statement "IterableSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 148.,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 123,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 456,998
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContain_success,Magic Number,The method contains a magic number: 2345,1010
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 178.,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_doesNotContains_failure,Magic Number,The method contains a magic number: 456,1018
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1034
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1044
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1053
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 207.,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1090
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1100
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 226.,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1114
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 201.,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1133
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 201.,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,1152
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 207.,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,1171
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 268.,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,1190
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 508.,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1211
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,1232
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1256
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` 0x80` +256]> contains` in order` exactly one element " + "that parses to each element of <[64` 128` 256` 128]>");" is 166.,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1281
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,1298
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1307
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1316
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1324
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,1348
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,1356
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 64,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 256,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,1366
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1377
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1387
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 226.,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1403
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 245.,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1423
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 220.,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1443
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1463
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` +64` fi` fo` 0x80` +256` fum]> contains` in order` " + "at least one element that parses to each element of <[64` 128` 256` 128]>");" is 185.,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllIn_null,Magic Number,The method contains a magic number: 128,1502
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128).inOrder();" is 123.,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 64,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 256,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,1511
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 64,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 256,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,1521
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 481.,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1530
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAllOf_nullValueInArray,Magic Number,The method contains a magic number: 128,1550
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 255,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 256,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 257,1558
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 180.,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1566
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 255,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 257,1582
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 255,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 256,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 257,1590
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 193.,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1599
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 255,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 257,1617
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 255,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 256,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 257,1626
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains at least one element that parses to each of " + "<[256]>");" is 203.,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1635
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains at least one element that parses to each of " + "<[null]>");" is 205.,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 255,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 257,1651
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 255,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 256,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 257,1667
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains at least one element that " + "parses to each of <[256]>");" is 211.,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1677
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Identifier,The length of the field STRING_PARSES_TO_INTEGER_CORRESPONDENCE is 39.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains at least one element that " + "parses to each of <[null]>");" is 213.,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 255,1694
truth,com.google.common.truth,IterableSubjectTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 257,1694
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 5,138
truth,com.google.common.truth,GuavaOptionalSubjectTest,hasValue_FailingWithWrongValueForOther,Magic Number,The method contains a magic number: 10,138
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,41
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2.2f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5.4f,51
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY))`DEFAULT_TOLERANCE);" is 124.,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,57
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,79
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,90
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,103
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,115
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_SameInfinity,Magic Number,The method contains a magic number: 2.2f,140
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Empty catch clause,The method has an empty catch block.,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 5.4f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Default_Fail,Magic Number,The method contains a magic number: 2.2f,182
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,192
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 2.2f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 3.3f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Longer,Magic Number,The method contains a magic number: 1.1f,198
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 3.3f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Shorter,Magic Number,The method contains a magic number: 2.2f,204
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2.2f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3.3f,210
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2.2f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3.3f,216
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).isNotEqualTo(array(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY))`DEFAULT_TOLERANCE);" is 127.,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,241
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2.2f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3.3f,249
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,261
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 3.3f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_OneInfinity,Magic Number,The method contains a magic number: 2.2f,281
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,287
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,299
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY));" is 127.,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,311
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,339
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,352
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,365
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,380
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,394
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,407
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,420
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,433
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2f,443
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,453
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,463
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4f,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,470
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0f,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,477
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)));" is 152.,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,484
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` " + roughly3point3 + "]>. It differs at indexes <[1]>");" is 154.,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,491
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[3.3` 2.2]>." + " It differs at indexes <[0` 1]>");" is 143.,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,508
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` 3.3` 1.1]>." + " Expected length <3> but got <2>");" is 149.,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,523
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2]>." + " Expected length <1> but got <2>");" is 139.,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,538
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 129.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values within 5.0E-6 of" + " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 150.,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,553
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[2.2` Infinity]>." + " It differs at indexes <[1]>");" is 145.,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,568
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values within 5.0E-6 of <[Infinity]>." + " Expected length <1> but got <2>");" is 144.,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,583
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [NaN]> has values within 5.0E-6 of <[NaN]>." + " It differs at indexes <[0]>");" is 130.,598
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,611
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,623
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,633
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,651
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,670
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY));" is 130.,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,686
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,694
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,708
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,724
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,739
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,755
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,773
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2f,784
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,795
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,806
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3f,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,814
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3f,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,830
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` 3.3]> has values not within 5.0E-6 of <[2.2` " + roughly3point3 + "]>");" is 129.,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`nextAfter(3.3f + DEFAULT_TOLERANCE`POSITIVE_INFINITY)));" is 155.,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,871
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 132.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(e).hasMessage("Not true that <(float[]) [2.2` Infinity]> has values not within 5.0E-6 of" + " <[2.2` Infinity]>");" is 125.,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,879
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,895
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,911
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,931
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,944
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,957
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2.0f);" is 132.,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Long Statement,The length of the statement "assertThat(array(1.0f`nextAfter(2.0f + DEFAULT_TOLERANCE`NEGATIVE_INFINITY)`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(2L);" is 130.,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwoPlusTolerance + "` 3.0]> contains at least one element that is a finite number within "+ (double)DEFAULT_TOLERANCE+ " of <2.0>");" is 198.,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,984
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` Infinity` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <Infinity>");" is 186.,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,1003
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` NaN` 3.0]> contains at least one element that is " + "a finite number within " + (double)DEFAULT_TOLERANCE + " of <NaN>");" is 176.,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,1020
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1037
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1044
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,1053
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1064
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` " + justOverTwo + "` 3.0]> contains at least one element that is exactly equal to <2.0>");" is 144.,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,1084
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,1091
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expected).hasMessage("Not true that <[1.0` -0.0` 3.0]> contains at least one element that is " + "exactly equal to <0.0>");" is 134.,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1096
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1108
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1108
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,45
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,45
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,61
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,61
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 238.,61
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,83
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,83
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,99
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,99
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 212.,99
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).isEqualTo(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 124.,118
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`e.getMessage()).that(e).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 347.,118
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2L,118
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,139
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,146
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 5,159
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 4,159
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedSingleElements,Magic Number,The method contains a magic number: 5,177
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedSingleElements,Magic Number,The method contains a magic number: 4,177
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: multimap.valuesForKey(1)\n" + "Not true that valuez (<[5]>) contains exactly <[3` 4]>. " + "It is missing <[3` 4]> and has unexpected items <[5]>\n"+ "multimap was: {1=[5]}");" is 252.,192
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Magic Number,The method contains a magic number: 5,192
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Magic Number,The method contains a magic number: 3,192
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Magic Number,The method contains a magic number: 4,192
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,205
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,215
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,215
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"multimap was");" is 138.,257
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,257
truth,com.google.common.truth,MultimapSubjectTest,containsEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> contains entry <daniel=ploch>");" is 132.,308
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 164.,324
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 170.,335
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 167.,347
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.builder().put(1`"1").put(1`1L).put(1L`1).put(2`3).build()).containsEntry(1`1);" is 125.,358
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[1` 1]` 1=[1]` 2=[3]}> contains entry " + "<1=1 (Map.Entry<java.lang.Integer` java.lang.Integer>)>. However` it does " + "contain entries <[1=1 (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=1 (Map.Entry<java.lang.Integer` java.lang.Long>)` "+ "1=1 (Map.Entry<java.lang.Long` java.lang.Integer>)]>");" is 394.,358
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 2,358
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 3,358
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,400
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 186.,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 176.,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 188.,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 230.,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}>");" is 177.,532
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]` =[]}> contains exactly <{a=[\"\" (empty String)]}>. " + "It has unexpected items <{\"\" (empty String)=[\"\" (empty String)]}>");" is 214.,542
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}> " + "and has unexpected items <{a=[\"\" (empty String)]}>");" is 239.,552
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 146.,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 192.,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 176.,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 188.,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 5,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 230.,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 5,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 186.,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 146.,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 192.,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 139.,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 397.,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2L`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2`"c"));" is 139.,778
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[" + "1=a (Map.Entry<java.lang.Long` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Long` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Integer` java.lang.String>)]> "+ "and has unexpected items <["+ "1=a (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Long` java.lang.String>)]>");" is 607.,778
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,778
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,778
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,798
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 124.,807
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 261.,807
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,807
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`789);" is 124.,822
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 266.,822
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,822
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 124.,837
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 197.,837
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,837
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 123,851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,864
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,873
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`789);" is 130.,891
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 256.,891
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,891
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,906
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,906
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 128,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 128,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 123,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 128,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 64,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 123,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`new Object());" is 127.,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 128,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).named("multymap").comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 152.,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that multymap (<{abc=[+123]}>) contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each element " + "of <[abc=123` def=456]>. It is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=456>");" is 385.,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Magic Number,The method contains a magic number: 123,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Magic Number,The method contains a magic number: 456,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyNoArgs,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableListMultimap.of("abc"`"+123")).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly();" is 149.,1076
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 136.,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 128,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 154.,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 128,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 123,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64);" is 144.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 128,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`128`"abc"`123);" is 155.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 64,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 123,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`new Object());" is 127.,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`123`"def"`64`"abc"`123);" is 136.,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`64`"def"`128);" is 136.,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`64`"def"`128`"abc"`123).inOrder();" is 164.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`128`"def"`64).inOrder();" is 164.,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).named("multymap").comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456);" is 154.,1217
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that multymap (<{abc=[+123]}>) contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each element " + "of <[abc=123` def=456]>. It is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=456>");" is 385.,1217
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Magic Number,The method contains a magic number: 123,1217
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Magic Number,The method contains a magic number: 456,1217
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,equals,Long Statement,The length of the statement "return this.message.equals(that.message()) && (this.cause == null ? that.cause() == null : this.cause.equals(that.cause()));" is 124.,42
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,hashCode,Magic Number,The method contains a magic number: 1000003,55
truth,com.google.common.truth,AutoValue_Expect_ExpectationFailure,hashCode,Magic Number,The method contains a magic number: 1000003,55
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,99
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,99
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,99
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,99
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,99
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,99
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,109
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,109
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,109
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,109
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Duplicate keys ([jan x 2` feb x 2]) cannot be passed to containsExactly().");" is 126.,123
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{feb=2` jan=1}>. " + "It has the following entries with unexpected keys: {march=3}");" is 210.,137
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Magic Number,The method contains a magic number: 2,137
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Magic Number,The method contains a magic number: 3,137
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Magic Number,The method contains a magic number: 2,137
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{feb=2` jan=1}>. " + "It has the following entries with unexpected keys: {march=3}");" is 210.,148
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Magic Number,The method contains a magic number: 3,148
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Magic Number,The method contains a magic number: 2,148
truth,com.google.common.truth,MapSubjectTest,namedMapContainsExactlyExtraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that foo (<{jan=1` feb=2` march=3}>) contains exactly <{feb=2` jan=1}>. " + "It has the following entries with unexpected keys: {march=3}");" is 216.,159
truth,com.google.common.truth,MapSubjectTest,namedMapContainsExactlyExtraKey,Magic Number,The method contains a magic number: 2,159
truth,com.google.common.truth,MapSubjectTest,namedMapContainsExactlyExtraKey,Magic Number,The method contains a magic number: 3,159
truth,com.google.common.truth,MapSubjectTest,namedMapContainsExactlyExtraKey,Magic Number,The method contains a magic number: 2,159
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> contains exactly <{jan=1` march=3` feb=2}>. " + "It is missing keys for the following entries: {march=3}");" is 205.,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Magic Number,The method contains a magic number: 3,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{jan=1` march=33` feb=2}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 33 but got 3)}");" is 266.,181
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 2,181
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 3,181
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 33,181
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 2,181
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains exactly <{jan=1` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with unexpected keys: {march=3}");" is 263.,193
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey,Magic Number,The method contains a magic number: 3,193
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey,Magic Number,The method contains a magic number: 2,193
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{jan=1` march=33}>. " + "It has the following entries with unexpected keys: {feb=2} " + "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 323.,205
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Magic Number,The method contains a magic number: 33,205
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains exactly <{jan=1` march=33` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 318.,218
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 3,218
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 33,218
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 2,218
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains exactly <{march=33` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with unexpected keys: {jan=1} "+ "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 375.,231
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 3,231
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 33,231
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 2,231
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly these entries in order " + "<{jan=1` march=3` feb=2}>");" is 180.,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 167.,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,260
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> contains exactly <{jan=1` feb=2}>. " + "It has the following entries with matching keys but different values: " + "{jan=(expected 1 (java.lang.Integer) but got 1 (java.lang.Long))` "+ "feb=(expected 2 (java.lang.Integer) but got 2 (java.lang.Long))}");" is 350.,281
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 2L,281
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 2,281
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForKeys,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=jan` 1=feb}> contains exactly <{1=jan` 1=feb}>. " + "It has the following entries with matching keys but different values: " + "{1 (java.lang.Integer)=(expected jan but got feb)` "+ "1 (java.lang.Long)=(expected feb but got jan)}");" is 317.,294
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey_failsWithSameToStringForKeys,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=jan` 2=feb}> contains exactly <{1=jan` 2=feb}>. " + "It is missing keys for the following entries: {1 (java.lang.Integer)=jan} " + "and has the following entries with unexpected keys: {1 (java.lang.Long)=jan}");" is 296.,307
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey_failsWithSameToStringForKeys,Magic Number,The method contains a magic number: 2,307
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey_failsWithSameToStringForKeys,Magic Number,The method contains a magic number: 2,307
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,319
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,319
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,319
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,319
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "It is missing keys for the following entries: {april=4} and " + "has the following entries with unexpected keys: {feb=2} and "+ "has the following entries with matching keys but different values: "+ "{march=(expected 5 but got 3)}");" is 386.,327
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,327
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,327
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,327
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,327
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 4 but got 3)}");" is 259.,343
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,343
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,343
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,343
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,343
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that foo (<{jan=1` feb=2` march=3}>) is equal to <{jan=1` feb=2` march=4}>." + " It has the following entries with matching keys but different values: " + "{march=(expected 4 but got 3)}");" is 265.,357
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,357
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,357
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,357
truth,com.google.common.truth,MapSubjectTest,namedMapIsEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,357
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "It has the following entries with unexpected keys: {march=3}");" is 205.,371
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,371
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,371
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,371
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "It is missing keys for the following entries: {march=3}");" is 200.,384
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,384
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "It is missing keys for the following entries: {mar=3} " + "and has the following entries with unexpected keys: {march=3}");" is 272.,397
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=3}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 3 (java.lang.Integer) but got 3 (java.lang.Long))}");" is 296.,411
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 2,411
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 3L,411
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 2,411
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 3,411
truth,com.google.common.truth,MapSubjectTest,isEqualToNonMap,Magic Number,The method contains a magic number: 2,426
truth,com.google.common.truth,MapSubjectTest,isEqualToNonMap,Magic Number,The method contains a magic number: 3,426
truth,com.google.common.truth,MapSubjectTest,isEqualTo_brokenMapEqualsImplementation_trueWhenItShouldBeFalse,Magic Number,The method contains a magic number: 2,467
truth,com.google.common.truth,MapSubjectTest,isEqualTo_brokenMapEqualsImplementation_falseWhenItShouldBeTrue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1}> is equal to <{jan=1}>. It is equal according to the contract " + "of Map.equals(Object)` but this implementation returned false");" is 221.,476
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,490
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,490
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,490
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,490
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,504
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,511
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,524
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,524
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,524
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,524
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,534
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,534
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"map was");" is 133.,569
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,569
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithNullStringAndNull,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"map was");" is 133.,585
truth,com.google.common.truth,MapSubjectTest,containsEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=kluever}> contains entry <greg=kick>");" is 127.,644
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfKey,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=value1` 2=value2}> contains entry " + "<1=value1 (Map.Entry<java.lang.Integer` java.lang.String>)>. " + "However` it does contain keys <[1] (java.lang.Long)>.");" is 318.,653
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfKey,Magic Number,The method contains a magic number: 2L,653
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfValue,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=null}> contains entry <1=null " + "(Map.Entry<java.lang.Integer` null type>)>. However` it does contain values " + "<[null] (java.lang.String)>.");" is 304.,666
truth,com.google.common.truth,MapSubjectTest,containsNullKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=kluever}> contains entry <null=null>");" is 127.,678
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 187.,694
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,709
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithValue,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,804
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,817
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,831
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,844
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 124.,852
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 233.,852
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 123,852
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`456);" is 124.,866
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 246.,866
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,866
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 124.,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 177.,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,880
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=35` def=71}> contains an entry with key <def> and a value that is " + "within 10 of <60>. However` it has a mapping from that key to <71> (diff: 11)");" is 238.,893
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 35,893
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 71,893
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 60,893
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,906
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,914
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failsMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,922
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`456);" is 130.,930
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 213.,930
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,930
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,943
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,943
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,951
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,951
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,951
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456);" is 126.,960
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456}>. It has the following entries with unexpected keys: {abc=123}");" is 309.,960
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,960
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 146.,974
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` xyz=999` abc=123}>. It is missing keys for the following entries: "+ "{xyz=999}");" is 326.,974
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,974
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,974
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,974
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"cab"`123);" is 136.,989
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` cab=123}>. It is missing keys for the following entries: {cab=123} "+ "and has the following entries with unexpected keys: {abc=123}");" is 379.,989
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,989
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,989
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`321);" is 136.,1004
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=321}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 321 but got 123)}");" is 364.,1004
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,1004
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,1004
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 146.,1019
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains` in order` exactly one entry that has" + " a key that is equal to and a value that parses to the key and value of each" + " entry of <{def=456` abc=123}>");" is 267.,1019
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,1019
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,1019
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,1034
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,1034
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1034
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1034
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,1034
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Empty catch clause,The method has an empty catch block.,1046
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,1046
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,1046
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,1046
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,1058
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,1058
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,1067
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1067
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,1067
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1077
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456}>. It has the following entries with unexpected keys: {abc=123}");" is 309.,1077
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,1077
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1092
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` xyz=999` abc=123}>. It is missing keys for the following entries: "+ "{xyz=999}");" is 326.,1092
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,1092
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,1092
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,1092
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1108
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` cab=123}>. It is missing keys for the following entries: {cab=123} "+ "and has the following entries with unexpected keys: {abc=123}");" is 379.,1108
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,1108
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,1108
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1124
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=321}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 321 but got 123)}");" is 364.,1124
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,1124
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,1124
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=35` fed=60` ghi=101}> contains exactly one entry that has a key " + "that is equal to and a value that is within 10 of the key and value of each " + "entry of <{abc=30` def=60` ghi=90}>. It is missing keys for the following "+ "entries: {def=60} and has the following entries with unexpected keys: {fed=60} "+ "and has the following entries with matching keys but different values: "+ "{ghi=(expected 90 but got 101` diff: 11)}");" is 517.,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 30,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 60,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 90,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 35,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 60,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 101,1140
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1158
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains` in order` exactly one entry that has" + " a key that is equal to and a value that parses to the key and value of each" + " entry of <{def=456` abc=123}>");" is 267.,1158
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,1158
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,1158
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsEmpty,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1183
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Empty catch clause,The method has an empty catch block.,1193
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "MapSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 141.,1193
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1193
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,1193
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1193
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_simpleCase,Magic Number,The method contains a magic number: 2,37
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_loop,Long Statement,The length of the statement "assertWithMessage("test method name should only show up once with following omitted").that(expected.getMessage().split("testExpectTrace_loop")).hasLength(2);" is 157.,54
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_loop,Magic Number,The method contains a magic number: 2,54
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_loop,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,ExpectWithStackTest,apply,Long Statement,The length of the statement "assertWithMessage("test method name should only show up once with following omitted").that(expected.getMessage().split("testExpectTrace_loop")).hasLength(2);" is 157.,58
truth,com.google.common.truth,ExpectWithStackTest,apply,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_callerException,Magic Number,The method contains a magic number: 5,74
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_onlyCallerException,Long Statement,The length of the statement "assertWithMessage("Should throw exception as it is if only caller exception").that(expected.getStackTrace().length).isAtLeast(2);" is 129.,92
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_onlyCallerException,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_onlyCallerException,Magic Number,The method contains a magic number: 5,92
truth,com.google.common.truth,ExpectWithStackTest,apply,Long Statement,The length of the statement "assertWithMessage("Should throw exception as it is if only caller exception").that(expected.getStackTrace().length).isAtLeast(2);" is 129.,96
truth,com.google.common.truth,ExpectWithStackTest,apply,Magic Number,The method contains a magic number: 2,96
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchStandardSubjectBuilderInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(StandardSubjectBuilder.class.getMethods())).filter(new Predicate<Method>(){" is 145.,49
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchStandardSubjectBuilderInstanceMethods,Long Statement,The length of the statement "ImmutableSortedSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 129.,49
truth,com.google.common.truth,TruthFailureSubjectTest,factValueFailNoValue,Long Statement,The length of the statement "assertFailureKeys("expected to have a value"`"for key"`"but the key was present with no value"`HOW_TO_TEST_KEYS_WITHOUT_VALUES.key);" is 132.,85
truth,com.google.common.truth,TruthFailureSubjectTest,factValueIntFailNegative,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,TruthFailureSubjectTest,factValueIntFailNotEnoughWithKey,Magic Number,The method contains a magic number: 5,133
truth,com.google.common.truth,TruthFailureSubjectTest,factValueIntFailNoValue,Long Statement,The length of the statement "assertFailureKeys("expected to have a value"`"for key"`"and index"`"but the key was present with no value"`HOW_TO_TEST_KEYS_WITHOUT_VALUES.key);" is 144.,142
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,50
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,60
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,73
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,88
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,103
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,112
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,112
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,122
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,122
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,122
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,122
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,122
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,136
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,136
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,136
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,136
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,136
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of(1.02`2.04`3.08)).comparingElementsUsing(tolerance(0.05)).contains(3.01);" is 122.,143
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.01>");" is 185.,143
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,143
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,143
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,143
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,143
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.01,143
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_contains_success,Magic Number,The method contains a magic number: 456,49
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 175.,57
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_contains_failure,Magic Number,The method contains a magic number: 2345,57
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(4`400)`Record.create(2`189)`Record.createWithoutId(999));" is 159.,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).contains(expected);" is 157.,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` 2/189` none/999]> contains exactly one element " + "that has the same id as and a score is within 10 of <2/200>. It did contain the " + "following elements with the correct key: "+ "<[2/211 (diff: score:11)` 2/189 (diff: score:-11)]>");" is 340.,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 200,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 100,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 211,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 4,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 400,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 189,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 999,72
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,105
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_wrongTypeInActual,Long Statement,The length of the statement "IterableSubject.UsingCorrespondence<String`Integer> intermediate=assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE);" is 148.,105
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 123,105
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_wrongTypeInActual,Magic Number,The method contains a magic number: 456,105
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_doesNotContain_success,Magic Number,The method contains a magic number: 2345,117
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContain(456);" is 125.,125
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_doesNotContains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 219.,125
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_doesNotContains_failure,Magic Number,The method contains a magic number: 456,125
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,140
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,140
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,140
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,140
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,140
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,150
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,150
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,150
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,150
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,175
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,175
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,175
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,175
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,175
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,175
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,193
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 248.,193
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,193
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,193
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,193
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,193
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,211
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExpectedIsEmpty,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,221
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,233
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 267.,233
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,233
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,233
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,233
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,233
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,251
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 242.,251
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,251
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,251
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,251
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,251
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,269
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 242.,269
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,269
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,269
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,269
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,269
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,287
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 248.,287
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,287
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,287
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,287
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,287
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,305
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 309.,305
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,305
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,305
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,305
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,305
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[101` 65` 35` 190]> contains exactly one element that is within 10 of " + "each element of <[30` 60` 90]>. It is missing an element that is within 10 of " + "<90> and has unexpected elements <[101 (diff: 11)` 190 (diff: 100)]>");" is 311.,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 30,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 60,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 90,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 101,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 65,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 35,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 190,325
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(900));" is 140.,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(4`400)`Record.createWithoutId(999));" is 138.,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/900]>. It is missing an element that corresponds to "+ "<2/200> and has unexpected elements <[2/211 (diff: score:11)]> with key 2` and "+ "is missing an element that corresponds to each of <[3/300` none/900]> and has "+ "unexpected elements <[4/400` none/999]> without matching keys");" is 535.,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 100,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 200,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 300,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 900,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 100,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 211,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 4,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 400,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 999,342
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(900));" is 140.,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(PARSED_RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(PARSED_RECORD_ID`RECORD_ID).containsExactlyElementsIn(expected);" is 198.,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` none/999]> contains exactly one element that " + "parses to a record that has the same id as and a score is within 10 of each " + "element of <[1/100` 2/200` 3/300` none/900]>. It is missing an element that "+ "corresponds to <2/200> and has unexpected elements <[2/211 (diff: score:11)]> "+ "with key 2` and is missing an element that corresponds to each of "+ "<[3/300` none/900]> and has unexpected elements <[4/400` none/999]> without "+ "matching keys");" is 563.,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 100,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 2,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 200,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 3,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 300,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 900,373
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(999));" is 140.,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(3`303)`Record.createWithoutId(999));" is 138.,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 3/303` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/999]>. It is missing an element that corresponds to "+ "<2/200> and has unexpected elements <[2/211 (diff: score:11)]> with key 2");" is 382.,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 100,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 2,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 200,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 300,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 999,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 100,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 2,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 211,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 303,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 999,400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(900));" is 140.,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`201)`Record.create(4`400)`Record.createWithoutId(999));" is 138.,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/201` 4/400` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/900]>. It is missing an element that corresponds "+ "to each of <[3/300` none/900]> and has unexpected elements "+ "<[4/400` none/999]> without matching keys");" is 410.,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 100,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 2,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 200,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 3,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 300,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 900,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 100,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 2,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 201,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 4,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 400,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 999,429
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(999));" is 140.,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(3`303)`Record.createWithoutId(999));" is 138.,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10_NO_DIFF).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 182.,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 3/303` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/999]>. It is missing an element that corresponds to "+ "<2/200> and has unexpected elements <[2/211]> with key 2");" is 365.,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 100,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 2,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 200,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 300,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 999,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 100,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 2,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 211,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 303,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 999,459
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(tolerance(0.1)).displayingDiffsPairedBy(identity()).containsExactlyElementsIn(expected);" is 130.,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.1,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.2,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.05,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.15,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 0.95,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 0.1,488
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.create(3`301)`Record.createWithoutId(900));" is 161.,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(4`400)`Record.createWithoutId(999));" is 138.,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` 3/301` none/900]>. It is missing an element that has the "+ "same id as and a score is within 10 of each of <[2/200` 3/300` 3/301` none/900]>"+ " and has unexpected elements <[2/211` 4/400` none/999]>. (N.B. A key function "+ "which does not uniquely key the expected elements was provided and has "+ "consequently been ignored.)");" is 577.,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 100,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 2,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 200,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 3,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 300,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 3,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 301,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 900,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 100,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 2,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 211,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 4,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 400,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 999,503
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,538
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 549.,538
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,538
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,538
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,538
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,538
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,559
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,580
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[25` 55` 65]> contains exactly one element that is within 10 of " + "each element of <[30` 30` 60]>. It contains at least one element that matches each " + "expected element` and every element it contains matches at least one expected "+ "element` but there was no 1:1 mapping between all the actual and expected elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` it is "+ "missing an element that is within 10 of <30> and has unexpected elements ";" is 530.,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[55 (diff: 25)]>"`expectedPreamble + "<[65 (diff: 35)]>");" is 143.,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 30,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 30,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 60,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 25,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 55,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 65,602
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 151.,623
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element parses to an expected value"`"expected"`"but was");" is 156.,623
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,623
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,623
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,623
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,623
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,641
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,650
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactlyElementsIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 248.,650
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,672
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,672
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,672
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,672
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,672
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,681
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,681
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,681
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,681
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128);" is 137.,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,689
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,710
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,718
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 64,728
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,728
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 256,728
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_success,Magic Number,The method contains a magic number: 128,728
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,739
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,739
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,739
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,739
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,765
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,781
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 267.,781
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,781
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,781
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,781
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,781
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`101)`Record.create(2`211)`Record.create(2`222)`Record.create(3`303)`Record.createWithoutId(888));" is 159.,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAllIn(expected);" is 162.,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/101` 2/211` 2/222` 3/303` none/888]> contains at least one element " + "that has the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` none/999]>. It is missing an element that corresponds to "+ "<2/200> (but did have elements <[2/211 (diff: score:11)` "+ "2/222 (diff: score:22)]> with matching key 2)` and is missing an element that "+ "corresponds to <none/999> (without matching keys)");" is 502.,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 100,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 2,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 200,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 999,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 101,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 2,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 211,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 2,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 222,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 3,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 303,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn,Magic Number,The method contains a magic number: 888,800
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(2`201)`Record.createWithoutId(999));" is 140.,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAllIn(expected);" is 162.,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/101` 3/303` none/999]> contains at least one element that has the " + "same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 2/201` none/999]>. It is missing an element that has the same "+ "id as and a score is within 10 of each of <[2/200` 2/201]>. (N.B. A key "+ "function which does not uniquely key the expected elements was provided and has "+ "consequently been ignored.)");" is 488.,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 100,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 2,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 200,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 2,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 201,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 999,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 101,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 3,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 303,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingElementsPairedBy_containsAllIn_notUnique,Magic Number,The method contains a magic number: 999,828
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,855
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 286.,855
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,855
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,855
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,855
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,855
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,874
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 261.,874
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,874
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,874
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,874
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,874
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,893
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 522.,893
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,893
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,893
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,893
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,893
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected).inOrder();" is 139.,914
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"comparing contents by testing that each element parses to an expected value"`"expected order for required elements"`"but was");" is 202.,914
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,914
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,914
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,914
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,914
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_null,Magic Number,The method contains a magic number: 128,933
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllIn(expected);" is 129.,942
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 267.,942
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128).inOrder();" is 123.,965
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 64,965
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,965
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 256,965
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_inOrder_success,Magic Number,The method contains a magic number: 128,965
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 64,975
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,975
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 256,975
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_successOutOfOrder,Magic Number,The method contains a magic number: 128,975
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAllOf(64`128`256`128);" is 135.,984
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 522.,984
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,984
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,984
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,984
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,984
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAllOf_nullValueInArray,Magic Number,The method contains a magic number: 128,1004
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 255,1012
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 256,1012
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_success,Magic Number,The method contains a magic number: 257,1012
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyOf(255`256`257);" is 132.,1020
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 221.,1020
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1020
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1020
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1020
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 255,1036
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyOf_null,Magic Number,The method contains a magic number: 257,1036
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 255,1044
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 256,1044
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_success,Magic Number,The method contains a magic number: 257,1044
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyIn(expected);" is 129.,1053
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 234.,1053
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1053
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1053
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1053
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(999));" is 140.,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(3`311)`Record.create(2`211)`Record.create(2`222)`Record.create(4`404)`Record.createWithoutId(888));" is 159.,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAnyIn(expected);" is 162.,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3/311` 2/211` 2/222` 4/404` none/888]> contains at least one element " + "that has the same id as and a score is within 10 of any element in " + "<[1/100` 2/200` 3/300` none/999]>. It contains the following values that match "+ "by key: with key 2` would have accepted 2/200` but got "+ "[2/211 (diff: score:11)` 2/222 (diff: score:22)]; with key 3` would have "+ "accepted 3/300` but got [3/311 (diff: score:11)]");" is 499.,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 100,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 2,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 200,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 3,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 300,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 999,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 3,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 311,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 2,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 211,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 2,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 222,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 4,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 404,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 888,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAnyIn(expected);" is 162.,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3/300` 4/411` none/888]> contains at least one element that has the " + "same id as and a score is within 10 of any element in " + "<[1/100` 2/200` none/999]>. It does not contain any matches by key` either");" is 292.,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 100,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 2,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 200,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 999,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 3,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 300,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 4,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 411,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 888,1103
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(2`250)`Record.createWithoutId(999));" is 140.,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAnyIn(expected);" is 162.,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3/300` 2/211` none/888]> contains at least one element that has the " + "same id as and a score is within 10 of any element in " + "<[1/100` 2/200` 2/250` none/999]>. (N.B. A key function which does not uniquely "+ "key the expected elements was provided and has consequently been ignored.)");" is 376.,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 100,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 2,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 200,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 2,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 250,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 999,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 3,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 300,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 2,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 211,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 888,1123
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 255,1148
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_null,Magic Number,The method contains a magic number: 257,1148
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyIn(expected);" is 129.,1157
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsAnyIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> " + "contains at least one element that parses to any element in " + "<[511` 512` 513]>");" is 197.,1157
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 255,1179
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 256,1179
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_success,Magic Number,The method contains a magic number: 257,1179
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(255`256`257);" is 133.,1188
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains <[+256 which corresponds to 256]>");" is 221.,1188
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1188
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1188
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1188
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_multipleFailures,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(64`128);" is 128.,1203
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_multipleFailures,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[64` 128]>. It contains <[[+64` 0x40] which all correspond to 64` " + "+128 which corresponds to 128]>");" is 260.,1203
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_multipleFailures,Magic Number,The method contains a magic number: 64,1203
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_multipleFailures,Magic Number,The method contains a magic number: 128,1203
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(255`null`257);" is 134.,1219
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_null,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains <[null which corresponds to null]>");" is 223.,1219
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 255,1219
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneOf_null,Magic Number,The method contains a magic number: 257,1219
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 255,1234
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 256,1234
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_success,Magic Number,The method contains a magic number: 257,1234
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1244
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains " + "<[+256 which corresponds to 256]>");" is 234.,1244
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1244
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1244
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1244
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_null,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains " + "<[null which corresponds to null]>");" is 236.,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 255,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_null,Magic Number,The method contains a magic number: 257,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1278
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,comparingElementsUsing_containsNoneIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains no element that parses to any element in <[127` 128` 129]>. " + "It contains <[+128 which corresponds to 128]>");" is 271.,1278
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,36
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,46
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,52
truth,com.google.common.truth,TestCorrespondences,compare,Magic Number,The method contains a magic number: 10,70
truth,com.google.common.truth,TestCorrespondences,compare,Long Identifier,The length of the field RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10 is 37.,219
truth,com.google.common.truth,TestCorrespondences,formatDiff,Long Identifier,The length of the field RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10 is 37.,226
truth,com.google.common.truth,TestCorrespondences,toString,Long Identifier,The length of the field RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10 is 37.,234
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,62
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,62
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement,Magic Number,The method contains a magic number: 2,62
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0` 1` 2]> has first element <1>. " + "It does contain this element` but the first element is <0>");" is 182.,102
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0` 1` 2]> has last element <1>. " + "It does contain this element` but the last element is <2>");" is 180.,112
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_wrongPosition_2,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0]> has first element <1>. " + "It does not contain this element` and the first element is <0>");" is 180.,122
truth,com.google.common.truth,SortedSetSubjectTest,hasFirstLastElement_absent_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[0]> has last element <1>. " + "It does not contain this element` and the last element is <0>");" is 178.,132
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,60
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,60
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,91
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Empty catch clause,The method has an empty catch block.,91
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,91
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,166
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,166
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,217
truth,com.google.common.truth,SubjectTest,isSameAsFailureWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,217
truth,com.google.common.truth,SubjectTest,isNotSameAsWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,278
truth,com.google.common.truth,SubjectTest,isNotSameAsWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,278
truth,com.google.common.truth,SubjectTest,isInstanceOfSuperclass,Magic Number,The method contains a magic number: 3,489
truth,com.google.common.truth,SubjectTest,isInstanceOfImplementedInterface,Empty catch clause,The method has an empty catch block.,494
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedClass,Magic Number,The method contains a magic number: 4.5,508
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedInterface,Empty catch clause,The method has an empty catch block.,517
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 4.5,517
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 4.5,517
truth,com.google.common.truth,SubjectTest,isNotInstanceOfUnrelatedInterface,Empty catch clause,The method has an empty catch block.,548
truth,com.google.common.truth,SubjectTest,isNotInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 5,548
truth,com.google.common.truth,SubjectTest,isNotInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 5,548
truth,com.google.common.truth,SubjectTest,isNotInstanceOfExactType,Magic Number,The method contains a magic number: 5,562
truth,com.google.common.truth,SubjectTest,isNotInstanceOfSuperclass,Magic Number,The method contains a magic number: 5,569
truth,com.google.common.truth,SubjectTest,isNotInstanceOfImplementedInterface,Empty catch clause,The method has an empty catch block.,574
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,709
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,709
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,723
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString,Magic Number,The method contains a magic number: 2,754
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString,Magic Number,The method contains a magic number: 2L,754
truth,com.google.common.truth,SubjectTest,disambiguationWithSameToString,Magic Number,The method contains a magic number: 3L,754
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,43
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,72
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,81
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,90
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"org.junit.Bar"`"com.google.testing.junit.Car"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Gar");" is 213.,53
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createCollapsedStackTraceElement("Testing framework"`5)`createStackTraceElement("com.example.Gar")});" is 219.,53
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Magic Number,The method contains a magic number: 5,53
truth,com.google.common.truth,StackTraceCleanerTest,assertionsActuallyUseCleaner,Magic Number,The method contains a magic number: 2,76
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"com.example.Helper"`"org.junit.Bar"`"com.example.Helper"`"com.google.testing.junit.Car"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Gar");" is 255.,90
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createStackTraceElement("junit.Foo")`createStackTraceElement("com.example.Helper")`createStackTraceElement("org.junit.Bar")`createStackTraceElement("com.example.Helper")`createCollapsedStackTraceElement("Testing framework"`3)`createStackTraceElement("com.example.Gar")});" is 389.,90
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Magic Number,The method contains a magic number: 3,90
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.IterableSubject"`"com.google.common.truth.MapSubject"`"com.example.MyTest"`"junit.Foo"`"org.junit.Bar"`"java.lang.reflect.Car"`"sun.reflect.Dar"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Jar");" is 303.,119
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createCollapsedStackTraceElement("Testing framework"`2)`createCollapsedStackTraceElement("Reflective call"`2)`createCollapsedStackTraceElement("Testing framework"`2)`createStackTraceElement("com.example.Jar")});" is 329.,119
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,119
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,119
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,119
truth,com.google.common.truth,StackTraceCleanerTest,removesTestingAndReflectiveFramesOnBottom,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.Foo"`"com.example.Bar"`"sun.reflect.Car"`"org.junit.Dar"`"java.lang.reflect.Far"`"junit.Gar"`"com.google.testing.junit.Har"`"java.lang.reflect.Jar"`"java.lang.reflect.JarJar"`"com.google.testing.junit.Kar");" is 270.,147
truth,com.google.common.truth,StackTraceCleanerTest,removesTestingAndReflectiveFramesOnBottom,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.Foo")`createStackTraceElement("com.example.Bar")});" is 160.,147
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.testing.util.ShouldStrip1"`"com.google.testing.util.ShouldStrip2"`"com.google.testing.util.ShouldNotStripTest");" is 174.,172
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createCollapsedStackTraceElement("Testing framework"`2)`createStackTraceElement("com.google.testing.util.ShouldNotStripTest")});" is 200.,172
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Magic Number,The method contains a magic number: 2,172
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveStandardSubjectBuilderCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.random.Package"`"com.google.common.base.collection.ImmutableMap"`"com.google.common.truth.StandardSubjectBuilder"`"com.google.example.SomeClass");" is 208.,190
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveStandardSubjectBuilderCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeClass")});" is 130.,190
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveSubjectCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.random.Package"`"com.google.common.base.collection.ImmutableMap"`"com.google.common.truth.StringSubject"`"com.google.example.SomeClass");" is 199.,208
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveSubjectCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeClass")});" is 130.,208
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitStatementCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.StringSubject"`"com.google.example.SomeTest"`SomeStatement.class.getName()`"com.google.example.SomeClass");" is 182.,226
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitStatementCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeTest")});" is 129.,226
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitRunnerCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.StringSubject"`"com.google.example.SomeTest"`SomeRunner.class.getName()`"com.google.example.SomeClass");" is 179.,244
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitRunnerCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeTest")});" is 129.,244
truth,com.google.common.truth,StackTraceCleanerTest,truthFrameWithOutSubject_shouldNotCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.random.Package"`"com.google.common.truth.FailureMetadata"`"com.google.example.SomeClass");" is 152.,266
truth,com.google.common.truth,StackTraceCleanerTest,truthFrameWithOutSubject_shouldNotCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.random.Package")`createStackTraceElement("com.google.common.truth.FailureMetadata")`createStackTraceElement("com.google.example.SomeClass")});" is 250.,266
truth,com.google.common.truth,StackTraceCleanerTest,createCollapsedStackTraceElement,Long Statement,The length of the statement "return new StackTraceElement("[[" + frameworkName + ": "+ collapsed+ " frames collapsed ("+ StackTraceCleaner.CLEANER_LINK+ ")]]"`""`""`0);" is 139.,392
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,37
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,37
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,66
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,66
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,77
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,77
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,77
truth,com.google.common.truth,ComparableSubjectTest,isEquivalentAccordingToCompareTo,Long Statement,The length of the statement "expectFailureWhenTestingThat(new StringComparedByLength("abc")).isEquivalentAccordingToCompareTo(new StringComparedByLength("abcd"));" is 133.,88
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 5,116
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,116
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,116
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,116
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsSmaller,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsSmaller,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,130
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 5,130
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,130
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,130
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsGreater,Magic Number,The method contains a magic number: 4,138
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsGreater,Magic Number,The method contains a magic number: 3,138
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,144
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,144
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,144
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,144
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,153
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,153
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,153
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,153
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,153
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,153
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,164
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,164
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,194
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,194
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,194
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,194
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,200
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,200
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,218
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,218
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,44
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 100,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 100,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 20,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 20,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 100,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 100,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 20,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 20,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Long Statement,The length of the statement "runFormatTest(repeat("b"`100) + "aa" + repeat("t"`7)`repeat("b"`100) + "oo" + repeat("t"`7)`"…" + repeat("b"`20) + "aattttttt"`"…" + repeat("b"`20) + "oottttttt");" is 163.,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 100,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 7,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 100,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 7,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 20,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 20,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Long Statement,The length of the statement "runFormatTest(repeat("a"`7) + "ba" + repeat("r"`100)`repeat("a"`7) + "fu" + repeat("r"`100)`"aaaaaaaba" + repeat("r"`20) + "…"`"aaaaaaafu" + repeat("r"`20) + "…");" is 163.,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 7,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 100,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 7,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 100,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 20,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 20,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Long Statement,The length of the statement "runFormatTest(repeat("r"`60) + "a" + repeat("g"`60)`repeat("r"`60) + "u" + repeat("g"`60)`"…" + repeat("r"`20) + "a"+ repeat("g"`20)+ "…"`"…" + repeat("r"`20) + "u"+ repeat("g"`20)+ "…");" is 187.,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Long Statement,The length of the statement "runFormatTest(repeat("r"`60) + "aaaaa" + repeat("g"`60)`repeat("r"`60) + "u" + repeat("g"`60)`"…" + repeat("r"`20) + "aaaaa"+ repeat("g"`20)+ "…"`"…" + repeat("r"`20) + "u"+ repeat("g"`20)+ "…");" is 195.,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Long Statement,The length of the statement "runFormatTest(repeat("a"`40) + "lmnopqrstuv" + repeat("a"`40)`repeat("a"`40) + "lmnopqrstuvlmnopqrstuv" + repeat("a"`40)`"…aaaaaaaaalmnopqrstuvaaaaaaaaa…"`"…aaaaaaaaalmnopqrstuvlmnopqrstuvaaaaaaaaa…");" is 201.,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 100,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 102,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 20,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 22,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Long Statement,The length of the statement "runFormatTest(repeat("b"`100) + "\uD8AB\uDCAB" + repeat("b"`19)+ "aa"`repeat("b"`100) + "\uD8AB\uDCAB" + repeat("b"`19)+ "oo"`"…\uD8AB\uDCAB" + repeat("b"`19) + "aa"`"…\uD8AB\uDCAB" + repeat("b"`19) + "oo");" is 207.,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 100,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 100,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Long Statement,The length of the statement "runFormatTest("ba" + repeat("r"`19) + "\uD8AB\uDCAB"+ repeat("r"`100)`"fu" + repeat("r"`19) + "\uD8AB\uDCAB"+ repeat("r"`100)`"ba" + repeat("r"`19) + "\uD8AB\uDCAB…"`"fu" + repeat("r"`19) + "\uD8AB\uDCAB…");" is 207.,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 100,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 100,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitStart,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "b"`repeat("a\n"`100) + "c"`Joiner.on('\n').join("@@ -98`4 +98`4 @@"`" a"`" a"`" a"`"-b"`"+c"));" is 130.,136
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitStart,Magic Number,The method contains a magic number: 100,136
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitStart,Magic Number,The method contains a magic number: 100,136
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitEnd,Long Statement,The length of the statement "runFormatTest("a" + repeat("\nz"`100)`"b" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -1`4 +1`4 @@"`"-a"`"+b"`" z"`" z"`" z"));" is 128.,145
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitEnd,Magic Number,The method contains a magic number: 100,145
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitEnd,Magic Number,The method contains a magic number: 100,145
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "m" + repeat("\nz"`100)`repeat("a\n"`100) + "n" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -98`7 +98`7 @@"`" a"`" a"`" a"`"-m"`"+n"`" z"`" z"`" z"));" is 185.,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "m\nn\no\np" + repeat("\nz"`100)`repeat("a\n"`100) + "q\nr\ns\nt" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -98`10 +98`10 @@"`" a"`" a"`" a"`"-m"`"-n"`"-o"`"-p"`"+q"`"+r"`"+s"`"+t"`" z"`" z"`" z"));" is 235.,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "m\nn\no\np" + repeat("\nz"`100)`repeat("a\n"`100) + "q\nr\ns\nt\nu\nv" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -98`10 +98`12 @@"`" a"`" a"`" a"`"-m"`"-n"`"-o"`"-p"`"+q"`"+r"`"+s"`"+t"`"+u"`"+v"`" z"`" z"`" z"));" is 251.,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`40) + "l\nm\nn\no\np\n" + repeat("a\n"`40)`repeat("a\n"`40) + "l\nm\nn\no\np\nl\nm\nn\no\np\n" + repeat("a\n"`40)`Joiner.on('\n').join("@@ -43`6 +43`11 @@"`" n"`" o"`" p"`"+l"`"+m"`"+n"`"+o"`"+p"`" a"`" a"`" a"));" is 240.,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 80,237
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 82,237
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptNewlineStyle,Magic Number,The method contains a magic number: 10,250
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptNewlineStyle,Magic Number,The method contains a magic number: 10,250
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptTrailingNewline,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`19) + "a"`repeat("a\n"`19) + "a\n"`Joiner.on('\n').join("@@ -18`3 +18`4 @@"`" a"`" a"`" a"`"+"));" is 124.,259
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptTrailingNewline,Magic Number,The method contains a magic number: 19,259
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptTrailingNewline,Magic Number,The method contains a magic number: 19,259
truth,com.google.common.truth,ComparisonFailureWithFactsTest,testSerialization_ComparisonFailureWithFacts,Long Statement,The length of the statement "ComparisonFailureWithFacts original=ComparisonFailureWithFacts.create(messages`headFacts`tailFacts`expected`actual`cause);" is 122.,268
truth,com.google.common.truth,ComparisonFailureWithFactsTest,testSerialization_ComparisonFailureWithFacts,Magic Number,The method contains a magic number: 3,268
truth,com.google.common.truth,ComparisonFailureWithFactsTest,runFormatTest,Magic Number,The method contains a magic number: 2,320
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,56
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,56
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,65
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,65
truth,com.google.common.truth,FloatSubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 1.23f,59
truth,com.google.common.truth,FloatSubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 1.23f,59
truth,com.google.common.truth,FloatSubjectTest,j2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23f,76
truth,com.google.common.truth,FloatSubjectTest,j2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23,76
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,99
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,132
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,206
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,222
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,assertThatIsEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,372
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,383
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,383
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,394
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,405
truth,com.google.common.truth,FloatSubjectTest,assertThatIsZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,416
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,428
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNonZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,439
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,451
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,460
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,471
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,480
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,491
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,500
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,511
truth,com.google.common.truth,FloatSubjectTest,assertThatIsFiniteFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,522
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,534
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,43
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,43
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,50
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,50
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,63
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,63
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,73
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,TableSubjectTest,containsFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> contains mapping for row/column <row> <row>");" is 145.,88
truth,com.google.common.truth,TableSubjectTest,doesNotContainFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> does not contain mapping for " + "row/column <row> <col>");" is 158.,106
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,40
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,40
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,45
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,45
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_throwInSubject_shouldPropagateOriginalException,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_throwAfterSubject_shouldPropagateOriginalException,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_throwAfterSubject_shouldPropagateOriginalException,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,ComparableSubjectCompileTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,34
truth,com.google.common.truth,ComparableSubjectCompileTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 163.,34
truth,com.google.common.truth,ComparableSubjectCompileTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,ComparableSubjectCompileTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,64
truth,com.google.common.truth,ComparableSubjectCompileTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 166.,64
truth,com.google.common.truth,ComparableSubjectCompileTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,64
truth,com.google.common.truth,ExpectFailureTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,ExpectFailureTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,54
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnSuccess,Magic Number,The method contains a magic number: 4,59
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnSuccess,Magic Number,The method contains a magic number: 4,59
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultipleFailures,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultipleFailures,Magic Number,The method contains a magic number: 4,71
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().contains("ExpectFailure.whenTesting() called previously` but did not capture a failure.");" is 128.,83
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Magic Number,The method contains a magic number: 4,83
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Magic Number,The method contains a magic number: 4,83
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings_thatFail,Magic Number,The method contains a magic number: 5,97
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings_thatFail,Magic Number,The method contains a magic number: 4,97
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,108
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,108
truth,com.google.common.truth,ExpectFailureTest,expectFail_whenTestingWithoutInContext_shouldFail,Magic Number,The method contains a magic number: 4,121
truth,com.google.common.truth,ExpectFailureTest,expectFail_whenTestingWithoutInContext_shouldFail,Magic Number,The method contains a magic number: 4,121
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,57
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,63
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,63
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,63
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,77
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,103
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 4,40
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 4,51
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,56
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,56
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail_nullActual,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail_nullExpected,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,IntegerSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4,76
truth,com.google.common.truth,IntegerSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4,76
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,139
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,139
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,139
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_long,Magic Number,The method contains a magic number: 42,180
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_long,Magic Number,The method contains a magic number: 42L,180
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_int,Magic Number,The method contains a magic number: 42,185
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_int,Magic Number,The method contains a magic number: 42,185
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_intToChar,Magic Number,The method contains a magic number: 42,190
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_intToChar,Magic Number,The method contains a magic number: 42,190
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_charToInt,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_charToInt,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object> actualFirst=new ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object>(){" is 150.,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object> expectedFirst=new ExpectFailure.SimpleSubjectBuilderCallback<DefaultSubject`Object>(){" is 152.,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,ThrowableSubjectTest,hasCauseThat_tooDeep_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("value of: throwable.getCause().getCause()\n" + "Causal chain is not deep enough - add a .isNotNull() check?");" is 173.,114
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,62
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,62
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey,Magic Number,The method contains a magic number: 2,62
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_1,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has first key <1>. " + "It does contain this key` but the first key is <0>");" is 176.,102
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_1,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has last key <1>. " + "It does contain this key` but the last key is <2>");" is 174.,112
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_wrongPosition_2,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent_1,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0}> has first key <1>. " + "It does not contain this key` and the first key is <0>");" is 170.,122
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastKey_absent_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0}> has last key <1>. " + "It does not contain this key` and the last key is <0>");" is 168.,132
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,142
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,142
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry,Magic Number,The method contains a magic number: 2,142
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,150
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,150
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_onSortedMap,Magic Number,The method contains a magic number: 2,150
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has first entry <1=0>. " + "It does contain this entry` but the first entry is <0=0>");" is 186.,189
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition,Magic Number,The method contains a magic number: 2,189
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has last entry <1=0>. " + "It does contain this entry` but the last entry is <2=0>");" is 184.,199
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongPosition_2,Magic Number,The method contains a magic number: 2,199
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has first entry <0=0>` the first key is <1>");" is 140.,209
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has last entry <0=0>` the last key is <2>");" is 138.,217
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongKey_2,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has first entry <1=1>` the first value is <0>");" is 142.,225
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue,Magic Number,The method contains a magic number: 2,225
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0` 2=0}> has last entry <2=2>` the last value is <0>");" is 140.,233
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_wrongValue_2,Magic Number,The method contains a magic number: 2,233
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has first entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the first entry is <0=0>");" is 214.,241
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition,Magic Number,The method contains a magic number: 2,241
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=0` 2=0}> has last entry <1=1>. It does contain this key` " + "but the key is mapped to <0>` and the last entry is <2=0>");" is 212.,251
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_keyWrongPosition_2,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=2}> has first entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the first entry is <0=0>");" is 232.,261
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,261
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 2,261
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition,Magic Number,The method contains a magic number: 10,261
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=2}> has last entry <10=1>. It does contain this value` " + "but the value is mapped from the keys <[1]>` and the last entry is <2=2>");" is 230.,271
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_valueWrongPosition_2,Magic Number,The method contains a magic number: 10,271
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=1` 3=3}> has first entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the first entry is <0=0>");" is 245.,281
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 2,281
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,281
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 3,281
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition,Magic Number,The method contains a magic number: 10,281
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{0=0` 1=1` 2=1` 3=3}> has last entry <10=1>. " + "It does contain this value` but the value is mapped from the keys <[1` 2]>` " + "and the last entry is <3=3>");" is 243.,293
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 2,293
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 3,293
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 3,293
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_multipleValuesWrongPosition_2,Magic Number,The method contains a magic number: 10,293
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0}> has first entry <2=2>. " + "It does not contain this entry` and the first entry is <1=0>");" is 180.,304
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,304
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent,Magic Number,The method contains a magic number: 2,304
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent_2,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=0}> has last entry <2=2>. " + "It does not contain this entry` and the last entry is <1=0>");" is 178.,314
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent_2,Magic Number,The method contains a magic number: 2,314
truth,com.google.common.truth,SortedMapSubjectTest,hasFirstLastEntry_absent_2,Magic Number,The method contains a magic number: 2,314
truth,com.google.common.truth,FactTest,twoFacts,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("foo"`"bar")`fact("longer name"`"other value")))).isEqualTo("foo : bar\nlonger name: other value");" is 171.,48
truth,com.google.common.truth,FactTest,twoFactsOneWithoutValue,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("foo"`"bar")`factWithoutValue("hello")))).isEqualTo("foo: bar\nhello");" is 143.,63
truth,com.google.common.truth,FactTest,newline,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("foo"`"bar\nbaz")))).isEqualTo("foo:\n bar\n baz");" is 123.,72
truth,com.google.common.truth,FactTest,newlineWithoutValue,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("foo"`"bar\nbaz")`factWithoutValue("xyz")))).isEqualTo("foo:\n bar\n baz\nxyz");" is 152.,78
truth,com.google.common.truth,FactTest,withMessage,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of("hello")`ImmutableList.of(fact("foo"`"bar")))).isEqualTo("hello\nfoo: bar");" is 124.,87
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.0,52
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2,52
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2,52
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2,52
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3,52
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3,52
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Long Statement,The length of the statement "assertThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`0.0`-0.0)).isEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`0.0`-0.0));" is 147.,66
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2d,66
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4d,66
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2d,66
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4d,66
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Long Statement,The length of the statement "assertThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0)).isEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0));" is 155.,72
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 2.2d,72
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 5.4d,72
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 2.2d,72
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 5.4d,72
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2d,79
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,87
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,87
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,87
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,87
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 4.4d,92
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,100
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,112
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,112
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,112
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY)).isNotEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY));" is 150.,117
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,117
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4d,117
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,117
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4d,117
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0)).isNotEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0));" is 176.,123
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 2.2d,123
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 5.4d,123
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 2.2d,123
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 5.4d,123
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2d,130
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,135
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 4.4d,140
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2d,145
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 3.3d,145
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2d,145
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 2.2d,155
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 3.3d,155
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 4.4d,155
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,160
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,160
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2d,160
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4d,160
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,165
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,165
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,165
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2` "+ INTOLERABLE_3POINT3+ "]>. It differs at indexes <[1]>");" is 207.,170
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,170
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,170
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,170
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[3.3` 2.2]>."+ " It differs at indexes <[0` 1]>");" is 192.,185
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,185
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,185
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,185
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,185
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2` 3.3` 1.1]>."+ " Expected length <3> but got <2>");" is 198.,199
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,199
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,199
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,199
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,199
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,199
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2]>."+ " Expected length <1> but got <2>");" is 188.,213
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,213
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,213
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,213
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2d`POSITIVE_INFINITY);" is 122.,225
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` Infinity]> has values within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 199.,225
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,225
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,225
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` Infinity]> has values within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 199.,239
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,239
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2` Infinity]>."+ " It differs at indexes <[1]>");" is 194.,252
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,252
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,252
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,252
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[Infinity]>."+ " Expected length <1> but got <2>");" is 193.,266
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,266
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,266
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[NaN]> has values within " + DEFAULT_TOLERANCE + " of <[NaN]>."+ " It differs at indexes <[0]>");" is 179.,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,292
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,292
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,292
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,302
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3d,302
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2d,302
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,312
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,312
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,312
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,312
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,312
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,322
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,322
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,322
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,322
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2d,329
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4d,329
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,329
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,329
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0d,336
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0d,336
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,336
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,336
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,343
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,343
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,343
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`INTOLERABLE_3POINT3));" is 137.,350
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2` "+ INTOLERABLE_3POINT3+ "]>. It differs at indexes <[1]>");" is 207.,350
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,350
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,350
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,350
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(3.3d`2.2d));" is 122.,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[3.3` 2.2]>."+ " It differs at indexes <[0` 1]>");" is 192.,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,365
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`3.3d`1.1d));" is 127.,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2` 3.3` 1.1]>."+ " Expected length <3> but got <2>");" is 198.,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1d,379
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2]>."+ " Expected length <1> but got <2>");" is 188.,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 148.,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` Infinity]> has values within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>. It differs at indexes <[1]>");" is 199.,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,407
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 135.,421
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[2.2` Infinity]>."+ " It differs at indexes <[1]>");" is 194.,421
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,421
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3d,421
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2d,421
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(POSITIVE_INFINITY));" is 130.,435
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values within " + DEFAULT_TOLERANCE + " of <[Infinity]>."+ " Expected length <1> but got <2>");" is 193.,435
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,435
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,435
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[NaN]> has values within " + DEFAULT_TOLERANCE + " of <[NaN]>."+ " It differs at indexes <[0]>");" is 179.,449
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,463
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,475
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,475
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,475
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,497
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,497
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,497
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,497
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,503
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of <[2.2` 3.3]>");" is 160.,509
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,509
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,509
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2d,509
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3d,509
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of <[2.2` "+ TOLERABLE_3POINT3+ "]>");" is 180.,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,523
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,539
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,539
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,539
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of <[2.2` 3.3]>");" is 160.,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2d,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3d,547
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2d`POSITIVE_INFINITY);" is 125.,560
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` Infinity]> has values not within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>");" is 174.,560
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,560
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,560
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` Infinity]> has values not within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>");" is 174.,575
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2d,575
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>");" is 169.,589
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,589
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3d,589
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2d,589
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,604
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,604
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[NaN]> has values not within " + DEFAULT_TOLERANCE + " of <[NaN]>");" is 150.,610
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,620
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3d,620
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2d,620
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,631
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3d,631
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2d,631
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,642
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,642
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,642
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,642
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,642
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,653
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,653
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,653
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,653
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2d,661
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3d,661
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,661
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,661
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2d,669
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3d,669
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,669
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,669
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,677
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,677
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2d,677
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3d,677
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1d,677
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`3.3d));" is 125.,685
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of <[2.2` 3.3]>");" is 160.,685
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,685
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,685
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2d,685
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3d,685
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`TOLERABLE_3POINT3));" is 138.,699
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of <[2.2` "+ TOLERABLE_3POINT3+ "]>");" is 180.,699
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,699
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,699
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,699
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`INTOLERABLE_3POINT3));" is 122.,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2d,715
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 151.,723
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` Infinity]> has values not within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>");" is 174.,723
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,723
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2d,723
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`3.3d)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Doubles.asList(2.2d`POSITIVE_INFINITY));" is 138.,738
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[2.2` 3.3]> has values not within " + DEFAULT_TOLERANCE + " of"+ " <[2.2` Infinity]>");" is 169.,738
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,738
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3d,738
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2d,738
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2d,753
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3d,753
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[NaN]> has values not within " + DEFAULT_TOLERANCE + " of <[NaN]>");" is 150.,761
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2d,773
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,786
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3d,786
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2d,786
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,799
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,799
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001d,799
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3d,799
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2d,799
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 1.1,812
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.3,812
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.2,812
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,817
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,817
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + INTOLERABLE_2POINT2 + "` 3.3]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.2>");" is 245.,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 1.1,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.3,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.2,822
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`POSITIVE_INFINITY`3.3)).usingTolerance(DEFAULT_TOLERANCE).contains(POSITIVE_INFINITY);" is 125.,837
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` Infinity` 3.3]> " + "contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 243.,837
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 1.1,837
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.3,837
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` NaN` 3.3]> " + "contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 233.,852
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 1.1,852
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.3,852
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 1.1,867
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.3,867
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`Integer.MAX_VALUE + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(Integer.MAX_VALUE);" is 133.,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`2.0 + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(BigInteger.valueOf(2));" is 123.,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`2.0 + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(BigDecimal.valueOf(2.0));" is 125.,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2L,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 12,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,872
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,905
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 1.1,905
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.2,905
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.3,905
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 1.1,914
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.2,914
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.3,914
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 1.1,914
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,914
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 1.1,914
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,926
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,926
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,926
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,926
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.2`99.99));" is 129.,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains at least one element that is a finite number "+ "within "+ DEFAULT_TOLERANCE+ " of each element of <[2.2` 99.99]>. It is missing an element that is a finite "+ "number within "+ DEFAULT_TOLERANCE+ " of <99.99>");" is 368.,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,933
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,952
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,952
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,952
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,952
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.2`1.1)).inOrder();" is 137.,960
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is a finite number within " + DEFAULT_TOLERANCE + " of an expected value"`"expected order for required elements"`"but was");" is 258.,960
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,960
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,960
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,960
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,960
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,977
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,977
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,977
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,977
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99`999.999));" is 133.,984
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of any element in <[99.99` 999.999]>");" is 271.,984
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,984
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,984
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,984
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 999.999,984
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,999
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,999
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,999
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,999
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,999
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.2`1.1));" is 129.,1006
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains exactly one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of each element of <[2.2` 1.1]>. It has unexpected elements <[3.3]>");" is 301.,1006
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1006
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,1006
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1006
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1006
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(1.1`2.2`3.3)).inOrder();" is 125.,1021
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,1021
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,1021
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,1021
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,1021
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,1021
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.2`1.1`3.3)).inOrder();" is 143.,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is a finite number within " + DEFAULT_TOLERANCE + " of an expected value"`"expected"`"but was");" is 212.,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,1029
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 999.999,1046
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99`2.2));" is 130.,1053
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains no element that is a finite number within "+ DEFAULT_TOLERANCE+ " of any element in <[99.99` 2.2]>. It contains <["+ TOLERABLE_2POINT2+ " which corresponds to 2.2]>");" is 323.,1053
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1053
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,1053
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1053
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1053
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 1.1,1070
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.2,1070
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.3,1070
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.2,1070
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + OVER_2POINT2 + "` 3.3]> contains at least one element that is exactly equal to <2.2>");" is 205.,1075
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 1.1,1075
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.3,1075
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.2,1075
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value 9007199254740993 in assertion using exact double equality was a long " + "with an absolute value greater than 2^52 which has no exact double " + "representation");" is 227.,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact double equality was of unsupported type " + BigInteger.class + " (it may not have an exact double representation)");" is 205.,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact double equality was of unsupported type " + BigDecimal.class + " (it may not have an exact double representation)");" is 205.,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2L,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1086
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 1.1,1133
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.3,1133
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 1.1,1138
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.3,1138
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` -0.0` 3.3]> " + "contains at least one element that is " + "exactly equal to <" + 0.0 + ">");" is 207.,1143
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 1.1,1143
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.3,1143
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1162
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 1.1,1162
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.2,1162
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.3,1162
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1171
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1171
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,1171
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1171
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1171
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains at least one element that is exactly equal " + "to each element of <[2.2` 99.99]>. It is missing an element that is exactly "+ "equal to <99.99>");" is 286.,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1176
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,1190
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,1190
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,1190
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,1190
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,1190
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected order for required elements"`"but was");" is 223.,1195
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,1195
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,1195
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,1195
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,1195
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAllOf_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,1195
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,1210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1210
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains at least one element that is exactly equal " + "to any element in <[99.99` 999.999]>");" is 226.,1215
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1215
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1215
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,1215
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1215
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 999.999,1215
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1228
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1228
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,1228
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1228
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1228
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,1228
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains exactly one element that is exactly equal " + "to each element of <[2.2` 1.1]>. It has unexpected elements <[3.3]>");" is 256.,1233
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1233
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1233
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,1233
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1233
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1233
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,1246
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,1246
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,1246
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,1246
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,1246
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,1246
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected"`"but was");" is 177.,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,1254
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,1269
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,1269
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,1269
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,1269
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 999.999,1269
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains no element that is exactly equal to any " + "element in <[99.99` 2.2]>. It contains <[2.2 which corresponds to 2.2]>");" is 258.,1274
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,1274
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1274
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,1274
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,1274
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,1274
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,smallDifferenceInLongRepresentation,Magic Number,The method contains a magic number: 4.4501477170144023E-308,1287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,smallDifferenceInLongRepresentation,Magic Number,The method contains a magic number: 4.450147717014402E-308,1287
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,noCommas,Magic Number,The method contains a magic number: 10000.0,1293
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,noCommas,Magic Number,The method contains a magic number: 20000.0,1293
truth,com.google.common.truth,StringUtilTest,compressType_GenericWithPartialUncompress,Long Statement,The length of the statement "assertThat(StringUtil.compressType("java.util.Set<com.google.common.truth.Truth>")).isEqualTo("Set<com.google.common.truth.Truth>");" is 132.,52
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,41
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,48
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,53
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,53
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,61
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFailNamed,Magic Number,The method contains a magic number: 5L,67
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,79
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,79
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,94
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,100
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,112
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,112
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,143
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,148
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,148
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,154
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,154
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,161
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,166
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,166
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,178
truth,com.google.common.truth,ObjectArraySubjectTest,setArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "expectFailureWhenTestingThat(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 151.,238
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,104
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 3,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 4,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 3,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 4,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,93
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,93
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,93
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,134
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,145
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,58
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,58
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,76
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,76
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,86
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,87
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,87
truth,com.google.common.truth,ExpectTest,expectFail10Aligned,Magic Number,The method contains a magic number: 10,110
truth,com.google.common.truth,ExpectTest,expectFail10WrappedAligned,Magic Number,The method contains a magic number: 10,120
truth,com.google.common.truth,ExpectTest,expectFailWithExceptionWithMessage,Long Statement,The length of the statement "thrown.expectMessage("3. Also` after those failures` an exception was thrown: " + "java.lang.IllegalStateException: testing");" is 126.,143
truth,com.google.common.truth,ExpectTest,expectFailWithFailuresBeforeAssume,Long Statement,The length of the statement "thrown.expectMessage("3. Also` after those failures` an assumption was violated: " + "com.google.common.truth.TruthJUnit$ThrowableAssumptionViolatedException: testing");" is 169.,169
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 3,196
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 4,196
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 10,196
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 1000,196
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 3,200
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 4,200
truth,com.google.common.truth,ExpectTest,failWhenCallingThatAfterTest,Empty catch clause,The method has an empty catch block.,217
truth,com.google.common.truth,ExpectTest,failWhenCallingThatAfterTest,Magic Number,The method contains a magic number: 3,217
truth,com.google.common.truth,ExpectTest,run,Empty catch clause,The method has an empty catch block.,223
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 3,223
truth,com.google.common.truth,ExpectTest,failWhenCallingFailingAssertionMethodAfterTest,Magic Number,The method contains a magic number: 3,236
truth,com.google.common.truth,ExpectTest,failWhenCallingFailingAssertionMethodAfterTest,Magic Number,The method contains a magic number: 4,236
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 4,248
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,83
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,100
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntryNullKey,Magic Number,The method contains a magic number: 2,204
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=1}> does not contain entry <kurt=1>");" is 126.,215
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,252
truth,com.google.common.truth,PrimitiveShortArraySubjectTest,asListWithoutCastingFails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1` 1` 0]> " + "contains at least <[1` 0]>. It is missing " + "<[1` 0] (java.lang.Integer)>. However` it does contain "+ "<[1 [2 copies]` 0] (java.lang.Short)>.");" is 271.,49
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionInSubject_shouldPropagate,Long Statement,The length of the statement "assertThat(reportedFailure.get(1).getException()).hasMessageThat().contains("ExpectFailure.whenTesting() invoked` but no failure was caught.");" is 143.,36
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionInSubject_shouldPropagate,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionAfterSubject_shouldPropagate,Long Statement,The length of the statement "assertThat(reportedFailure.get(1).getException()).hasMessageThat().contains("ExpectFailure.whenTesting() invoked` but no failure was caught.");" is 143.,60
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionAfterSubject_shouldPropagate,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,DoubleSubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 1.23,60
truth,com.google.common.truth,DoubleSubjectTest,testJ2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23,76
truth,com.google.common.truth,DoubleSubjectTest,testJ2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23f,76
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,99
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,132
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,206
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,222
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,363
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,363
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,372
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,383
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,383
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,383
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,394
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,405
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,416
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,428
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNonZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,439
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,451
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,460
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,471
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,480
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,491
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,500
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,511
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsFiniteFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,522
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,534
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,34
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,34
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 4L,39
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,39
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 4L,50
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,50
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,55
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,55
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail_nullActual,Magic Number,The method contains a magic number: 5L,65
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail_nullExpected,Magic Number,The method contains a magic number: 5L,70
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_long,Magic Number,The method contains a magic number: 42L,86
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_long,Magic Number,The method contains a magic number: 42L,86
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_int,Magic Number,The method contains a magic number: 42L,91
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_int,Magic Number,The method contains a magic number: 42,91
truth,com.google.common.truth,ChainingTest,twoLevelsNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamed("child"`"child").delegatingToNamed("grandchild"`"grandchild").isThePresentKingOfFrance();" is 144.,107
truth,com.google.common.truth,ChainingTest,twoLevelsOnlyFirstNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamed("child"`"child").delegatingTo("grandchild").isThePresentKingOfFrance();" is 126.,116
truth,com.google.common.truth,ChainingTest,twoLevelsOnlySecondNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingTo("child").delegatingToNamed("grandchild"`"grandchild").isThePresentKingOfFrance();" is 131.,125
truth,com.google.common.truth,ChainingTest,twoLevelsNamedNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamedNoNeedToDisplayBoth("child"`"child").delegatingToNamedNoNeedToDisplayBoth("grandchild"`"grandchild").isThePresentKingOfFrance();" is 182.,142
truth,com.google.common.truth,ChainingTest,twoLevelsOnlyFirstNamedNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamedNoNeedToDisplayBoth("child"`"child").delegatingTo("grandchild").isThePresentKingOfFrance();" is 145.,151
truth,com.google.common.truth,ChainingTest,twoLevelsOnlySecondNamedNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingTo("child").delegatingToNamedNoNeedToDisplayBoth("grandchild"`"grandchild").isThePresentKingOfFrance();" is 150.,160
truth,com.google.common.truth,ChainingTest,twoLevelsNamedOnlyFirstNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamedNoNeedToDisplayBoth("child"`"child").delegatingToNamed("grandchild"`"grandchild").isThePresentKingOfFrance();" is 163.,169
truth,com.google.common.truth,ChainingTest,twoLevelsNamedOnlySecondNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamed("child"`"child").delegatingToNamedNoNeedToDisplayBoth("grandchild"`"grandchild").isThePresentKingOfFrance();" is 163.,178
truth,com.google.common.truth,ChainingTest,namedAndMessage,Long Statement,The length of the statement "expectFailure.whenTesting().withMessage("prefix").about(myObjects()).that("root").delegatingToNamed("child"`"child").isThePresentKingOfFrance();" is 144.,194
truth,com.google.common.truth,ChainingTest,badFormat,Empty catch clause,The method has an empty catch block.,218
truth,com.google.common.truth,ChainingTest,badFormat,Magic Number,The method contains a magic number: 2,218
truth,com.google.common.truth,ChainingTest,badFormat,Magic Number,The method contains a magic number: 3,218
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,43
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,43
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,53
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,53
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,53
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,59
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,59
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,59
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,68
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,68
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2L,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 3L,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2L,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,99
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,99
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,99
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,106
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,106
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,111
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,111
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,116
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,116
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,128
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[1` 2` 2` 3]> has the following duplicates: <[2 x 2]>");" is 124.,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,141
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,146
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,146
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,151
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,151
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains any of <[5` 6` 0]>");" is 123.,156
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,156
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,156
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,156
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,156
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains any of <[2` 3] (java.lang.Integer)>. " + "However` it does contain <[2` 3] (java.lang.Long)>.");" is 198.,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 3L,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 3,164
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3` 3]> contains any of <[2` 3` 3] (java.lang.Integer)>. " + "However` it does contain <[3 [2 copies]] (java.lang.Long)>.");" is 206.,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,174
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndNullInSubject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[null` abc]> contains any of <[def` null] (java.lang.String)>. " + "However` it does contain <[null (null type)]>.");" is 199.,184
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndNullInExpectation,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[null` abc]> contains any of " + "<[def (java.lang.String)` null (null type)]>. " + "However` it does contain <[null] (java.lang.String)>.");" is 223.,194
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,205
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains any of <[5` 6` 0]>");" is 123.,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 2,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 3,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 10,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 100,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 2,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 3,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 5,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 6,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains any of <[5` 6` 0]>");" is 123.,229
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 2,229
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 3,229
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 2,229
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 3,229
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,239
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 3,239
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithMany,Magic Number,The method contains a magic number: 2,239
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,244
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,244
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,244
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 3,244
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,244
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicates,Magic Number,The method contains a magic number: 2,244
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,249
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNull,Magic Number,The method contains a magic number: 3,249
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,254
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,254
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains at least <[1` 2` 4]>. It is missing <[4]>");" is 146.,281
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,281
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 3,281
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 2,281
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailure,Magic Number,The method contains a magic number: 4,281
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithExtras,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[y` x]> contains at least <[x` y` z]>. It is missing <[z]>");" is 143.,289
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithExtraCopiesOfOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[y` x]> contains at least <[x` y` y]>. It is missing <[y]>");" is 143.,297
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains at least <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 174.,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,305
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains at least <[4` 4` 4]>. It is missing <[4 [3 copies]]>");" is 154.,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,319
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` null` 3]> contains at least <[1` null` null` 3]>. " + "It is missing <[null]>");" is 166.,328
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,328
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfWithNullFailure,Magic Number,The method contains a magic number: 3,328
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains at least <[1` 2]>. It is missing " + "<[1` 2] (java.lang.Integer)>. However` it does contain " + "<[1` 2] (java.lang.Long)>.");" is 226.,338
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,338
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,338
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2]> contains at least <[1` 1` 2]>. It is missing " + "<[1 [2 copies]` 2] (java.lang.Integer)>. However` it does contain " + "<[1` 2 [2 copies]] (java.lang.Long)>.");" is 254.,349
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,349
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,349
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,349
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHomogeneousListWithNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[null` abc]> contains at least <[abc` null]>. It is missing " + "<[null (null type)]>. However` it does contain <[null] (java.lang.String)>.");" is 225.,360
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2` 3` 3]> contains at least <[2` 2` 3` 3]>. It is missing " + "<[2 (java.lang.Long)` 3 (java.lang.Integer) [2 copies]]>. However` it does " + "contain <[2 (java.lang.Integer)` 3 (java.lang.Long) [2 copies]]>.");" is 300.,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,370
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfFailsWithEmptyString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[a` null]> contains at least <[\"\" (empty String)` null]>. " + "It is missing <[\"\" (empty String)]>");" is 187.,381
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,392
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,392
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 3,392
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 2,392
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrder,Magic Number,The method contains a magic number: 5,392
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 2,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 4,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 3,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithGaps,Magic Number,The method contains a magic number: 5,397
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 7,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithNull,Magic Number,The method contains a magic number: 5,408
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 124.,414
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithFailure,Magic Number,The method contains a magic number: 3,414
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,424
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,424
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,424
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,424
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 124.,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllOfInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains at least <[1` 2` 4]>. It is missing <[4]>");" is 146.,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 2,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 3,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 2,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 2,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 3,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 2,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInIterable,Magic Number,The method contains a magic number: 4,468
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains at least <[1` 2` 4]>. It is missing <[4]>");" is 146.,478
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInArray,Magic Number,The method contains a magic number: 2,478
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInArray,Magic Number,The method contains a magic number: 3,478
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInArray,Magic Number,The method contains a magic number: 2,478
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAllInArray,Magic Number,The method contains a magic number: 3,478
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains none of <[1` 2` 4]>. It contains <[1` 2]>");" is 146.,493
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,493
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,493
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2` 3]> contains none of <[1` 2` 4]>. It contains <[1` 2]>");" is 149.,501
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,501
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,501
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,501
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,501
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,501
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains none of <[1` 2` 2` 4]>. It contains <[1` 2]>");" is 149.,510
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,510
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,510
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,510
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,510
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,510
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithEmptyString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains none of <[\"\" (empty String)` null]>. " + "It contains <[\"\" (empty String)]>");" is 177.,519
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains none of <[1` 2` 4]>. It contains <[1` 2]>");" is 146.,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 2,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 3,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 4,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 5,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 6,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 2,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 3,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 2,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 4,530
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains none of <[1` 2` 4]>. It contains <[1` 2]>");" is 146.,539
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 2,539
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 3,539
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 2,539
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 3,539
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,563
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,563
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,568
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,601
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,601
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,606
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,606
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,611
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithEmptyString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains exactly <[\"\" (empty String)]>. " + "It is missing <[\"\" (empty String)]>");" is 173.,627
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithEmptyStringAndUnexpectedItem,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[a` null]> contains exactly <[\"\" (empty String)]>. " + "It is missing <[\"\" (empty String)]> and has unexpected items <[a` null]>");" is 217.,638
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithEmptyStringAndMissingItem,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains exactly <[a` null]>. " + "It is missing <[a` null]> and has unexpected items <[\"\" (empty String)]>");" is 198.,649
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlySingleElement,Magic Number,The method contains a magic number: 2,660
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithElementsThatThrowWhenYouCallHashCode,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[HCT` HCT]> contains exactly <[HCT]>. " + "It has unexpected items <[HCT]>");" is 159.,675
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInErrorMessageIsOrdered,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[foo OR bar]> contains exactly <[foo` bar]>. " + "It is missing <[foo` bar]> and has unexpected items <[foo OR bar]>");" is 201.,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2` 4]>. It is missing <[4]>");" is 142.,732
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,732
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,732
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,732
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2]>. It has unexpected items <[3]>");" is 152.,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,740
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3]>. " + "It is missing <[2 [2 copies]]>");" is 167.,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,749
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2` 2` 2` 3` 4]>. " + "It is missing <[2 [2 copies]` 4]>");" is 173.,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,759
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 2` 2` 2` 3]> contains exactly <[1` 2` 2` 3]>. " + "It has unexpected items <[2 [2 copies]]>");" is 183.,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,769
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[]> contains exactly <[4` 4` 4]>. It is missing <[4 [3 copies]]>");" is 149.,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,783
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` null` 3]> contains exactly <[1` null` null` 3]>. " + "It is missing <[null]>");" is 165.,792
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,792
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,792
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2` 4]>. " + "It is missing <[4]> and has unexpected items <[3]>");" is 181.,802
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,802
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,802
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,802
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,802
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 3]> contains exactly <[1` 2` 4` 4]>. " + "It is missing <[4 [2 copies]]> and has unexpected items <[3 [2 copies]]>");" is 209.,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2]>. It is missing " + "<[1` 2] (java.lang.Integer)> and has unexpected items " + "<[1` 2] (java.lang.Long)>");" is 223.,822
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,822
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,822
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[null` 1` 2]>. It is missing " + "<[null (null type)` 1 (java.lang.Integer)` 2 (java.lang.Integer)]> and has " + "unexpected items <[1` 2] (java.lang.Long)>");" is 267.,833
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Magic Number,The method contains a magic number: 2L,833
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Magic Number,The method contains a magic number: 2,833
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` null` 2]>. It is missing " + "<[1 (java.lang.Integer)` null (null type)` 2 (java.lang.Long)]> and has " + "unexpected items <[1 (java.lang.Long)` 2 (java.lang.Integer)]>");" is 284.,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Magic Number,The method contains a magic number: 2L,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2` 2]>. It is missing " + "<[1` 2 [2 copies]] (java.lang.Integer)> and has unexpected items " + "<[1` 2] (java.lang.Long)>");" is 237.,855
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,855
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,855
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,855
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` null` null` 2` 2]>. It is missing " + "<[1 (java.lang.Integer)` null (null type) [2 copies]` " + "2 (java.lang.Long) [2 copies]]> and has unexpected items "+ "<[1 (java.lang.Long)` 2 (java.lang.Integer)]>");" is 319.,866
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,866
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,866
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,866
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2` 3` 4]]>. " + "It is missing <[[1` 2` 3` 4]]> and has unexpected items <[1` 2` 3` 4]>. " + "Passing an iterable to the varargs method containsExactly(Object...) is "+ "often not the correct thing to do. Did you mean to call "+ "containsExactlyElementsIn(Iterable) instead?");" is 396.,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,878
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[1` 2` 3]>. " + "It has unexpected items <[4]>");" is 163.,891
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,891
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,891
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,891
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,891
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,891
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[[1` 2]` [3` 4]]>. " + "It is missing <[[1` 2]` [3` 4]]> and has unexpected items <[1` 2` 3` 4]>");" is 213.,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,901
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3` 4]> contains exactly <[1]>. " + "It has unexpected items <[2` 3` 4]>");" is 163.,911
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,911
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,911
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,911
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,921
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,921
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,921
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,921
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,921
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,921
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,926
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,926
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,926
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,926
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,931
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,931
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,938
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,938
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,951
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,951
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2` 3]> contains exactly <[1` 2]>. It has unexpected items <[3]>");" is 152.,972
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 2,972
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 3,972
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 2,972
truth,com.google.common.truth,IterableSubjectTest,iterator,Magic Number,The method contains a magic number: 2,976
truth,com.google.common.truth,IterableSubjectTest,iterator,Magic Number,The method contains a magic number: 3,976
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2` 4]>. It is missing <[4]>");" is 142.,989
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,989
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,989
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,989
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,989
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 4,989
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInArray,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1` 2]> contains exactly <[1` 2` 4]>. It is missing <[4]>");" is 142.,999
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInArray,Magic Number,The method contains a magic number: 2,999
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInArray,Magic Number,The method contains a magic number: 2,999
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,1014
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 2,1031
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 3,1031
truth,com.google.common.truth,IterableSubjectTest,iterableIsStrictlyOrdered,Magic Number,The method contains a magic number: 4,1031
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,1038
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 2,1038
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedFailure,Magic Number,The method contains a magic number: 4,1038
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,1045
truth,com.google.common.truth,IterableSubjectTest,isStrictlyOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,1045
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 2,1054
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,1054
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,1054
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 3,1054
truth,com.google.common.truth,IterableSubjectTest,iterableIsOrdered,Magic Number,The method contains a magic number: 4,1054
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 3,1061
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 2,1061
truth,com.google.common.truth,IterableSubjectTest,isOrderedFailure,Magic Number,The method contains a magic number: 4,1061
truth,com.google.common.truth,IterableSubjectTest,isOrderedMultipleFailures,Magic Number,The method contains a magic number: 3,1068
truth,com.google.common.truth,IterableSubjectTest,isOrderedMultipleFailures,Magic Number,The method contains a magic number: 2,1068
truth,com.google.common.truth,IterableSubjectTest,isOrderedMultipleFailures,Magic Number,The method contains a magic number: 4,1068
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,1075
truth,com.google.common.truth,IterableSubjectTest,isOrderedWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,1075
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,1145
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,1145
truth,com.google.common.truth,IterableSubjectTest,isNotIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("The actual value is an Iterable` and you've written a test that compares it to some " + "objects that are not Iterables. Did you instead mean to check whether its " + "*contents* match any of the *contents* of the given values? If so` call "+ "containsNoneOf(...)/containsNoneIn(...) instead. Non-iterables: [a` b]");" is 384.,1162
truth,com.google.common.truth,IterableSubjectTest,isNoneOf,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("The actual value is an Iterable` and you've written a test that compares it to some " + "objects that are not Iterables. Did you instead mean to check whether its " + "*contents* match any of the *contents* of the given values? If so` call "+ "containsNoneOf(...)/containsNoneIn(...) instead. Non-iterables: [a` b]");" is 384.,1187
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 123,52
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 123,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2f,54
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3f,54
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3f,54
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3f,54
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.0f,54
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.0f,54
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Long Statement,The length of the statement "assertThat(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f)).isEqualTo(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f));" is 159.,67
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2f,67
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4f,67
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2f,67
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4f,67
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2f,73
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2f,73
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,82
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,82
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,82
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,82
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,87
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,87
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,87
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,87
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 4.4f,87
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,95
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,95
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,95
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,107
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,107
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,107
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f)).isNotEqualTo(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f));" is 180.,112
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,112
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4f,112
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,112
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4f,112
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2f,119
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,124
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,124
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,124
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,124
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2f,129
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3f,129
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2f,129
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3f,129
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 4.4f,129
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2f,134
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 3.3f,134
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2f,134
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 2.2f,144
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 3.3f,144
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 4.4f,144
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,149
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,149
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 2.2f,149
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf,Magic Number,The method contains a magic number: 5.4f,149
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,154
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,154
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,154
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` %s]>." + " It differs at indexes <[1]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`INTOLERABLE_3POINT3));" is 224.,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,159
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` %s]>." + " It differs at indexes <[0` 1]>"`2.2f`3.3f`DEFAULT_TOLERANCE`3.3f`2.2f));" is 212.,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,173
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` %s` %s]>." + " Expected length <3> but got <2>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`3.3f`1.1f));" is 222.,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s]>." + " Expected length <1> but got <2>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f));" is 204.,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,201
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).of(2.2f`POSITIVE_INFINITY);" is 122.,213
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` Infinity]> has values within %s of" + " <[%s` Infinity]>. It differs at indexes <[1]>"`2.2f`DEFAULT_TOLERANCE`2.2f));" is 211.,213
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,213
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,213
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,213
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,213
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` Infinity]> has values within %s of" + " <[%s` Infinity]>. It differs at indexes <[1]>"`2.2f`DEFAULT_TOLERANCE`2.2f));" is 211.,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,227
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` Infinity]>." + " It differs at indexes <[1]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f));" is 210.,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,240
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[Infinity]>." + " Expected length <1> but got <2>"`2.2f`3.3f`DEFAULT_TOLERANCE));" is 205.,254
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,254
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,254
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,254
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,254
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[NaN]> has values within %s of <[NaN]>." + " It differs at indexes <[0]>"`DEFAULT_TOLERANCE));" is 183.,268
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,280
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,280
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,280
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Empty catch clause,The method has an empty catch block.,290
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 3.3f,290
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NullObbject,Magic Number,The method contains a magic number: 2.2f,290
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,300
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,300
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,300
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,300
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,300
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,300
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,312
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,312
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 2.2f,312
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_floats,Magic Number,The method contains a magic number: 5.4f,312
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2f,319
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4f,319
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 2.2d,319
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_doubles,Magic Number,The method contains a magic number: 5.4d,319
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2.0f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5.0f,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 2L,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_longs,Magic Number,The method contains a magic number: 5L,326
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,333
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,333
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_ApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,333
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`INTOLERABLE_3POINT3));" is 136.,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of" + " <[%s` %s]>. It differs at indexes <[1]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`INTOLERABLE_3POINT3));" is 224.,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_FailNotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(3.3f`2.2f));" is 121.,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` %s]>." + " It differs at indexes <[0` 1]>"`2.2f`3.3f`DEFAULT_TOLERANCE`3.3f`2.2f));" is 212.,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,354
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`3.3f`1.1f));" is 126.,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` %s` %s]>." + " Expected length <3> but got <2>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`3.3f`1.1f));" is 222.,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Longer,Magic Number,The method contains a magic number: 1.1f,368
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s]>." + " Expected length <1> but got <2>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f));" is 204.,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,382
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`POSITIVE_INFINITY)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 147.,396
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` Infinity]> has values within %s of" + " <[%s` Infinity]>. It differs at indexes <[1]>"`2.2f`DEFAULT_TOLERANCE`2.2f));" is 211.,396
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,396
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,396
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,396
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,396
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 134.,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[%s` Infinity]>." + " It differs at indexes <[1]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f));" is 210.,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 3.3f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_OneInfinity,Magic Number,The method contains a magic number: 2.2f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(POSITIVE_INFINITY));" is 129.,424
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values within %s of <[Infinity]>." + " Expected length <1> but got <2>"`2.2f`3.3f`DEFAULT_TOLERANCE));" is 205.,424
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,424
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,424
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,424
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,424
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[NaN]> has values within %s of <[NaN]>." + " It differs at indexes <[0]>"`DEFAULT_TOLERANCE));" is 183.,438
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,452
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,452
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,452
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,464
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,464
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,464
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,474
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,488
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,494
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,494
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,494
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,494
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,494
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` %s]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`3.3f));" is 179.,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 2.2f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailEquals,Magic Number,The method contains a magic number: 3.3f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` %s]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`TOLERABLE_3POINT3));" is 192.,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,514
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,528
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,528
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,528
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` %s]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`3.3f));" is 179.,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 2.2f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_FailSame,Magic Number,The method contains a magic number: 3.3f,536
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).of(2.2f`POSITIVE_INFINITY);" is 125.,549
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` Infinity]> has values not within %s of <[%s` Infinity]>"`2.2f`DEFAULT_TOLERANCE`2.2f));" is 181.,549
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,549
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,549
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,549
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,549
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` Infinity]> has values not within %s of <[%s` Infinity]>"`2.2f`DEFAULT_TOLERANCE`2.2f));" is 181.,563
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,563
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,563
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_SameInfinity,Magic Number,The method contains a magic number: 2.2f,563
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` Infinity]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f));" is 180.,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 3.3f,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_OneInfinity,Magic Number,The method contains a magic number: 2.2f,576
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[NaN]> has values not within %s of <[NaN]>"`DEFAULT_TOLERANCE));" is 153.,596
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Empty catch clause,The method has an empty catch block.,606
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 3.3f,606
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullSubject,Magic Number,The method contains a magic number: 2.2f,606
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Empty catch clause,The method has an empty catch block.,617
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 3.3f,617
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NullObject,Magic Number,The method contains a magic number: 2.2f,617
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,628
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,628
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,628
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,628
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,628
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOf_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,628
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,641
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,641
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 3.3f,641
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderFloats,Magic Number,The method contains a magic number: 2.2f,641
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2f,649
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3f,649
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 3.3d,649
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderDoubles,Magic Number,The method contains a magic number: 2.2d,649
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3f,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 3L,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentOrderLongs,Magic Number,The method contains a magic number: 2L,657
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,665
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,665
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 2.2f,665
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 3.3f,665
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_DifferentLengths,Magic Number,The method contains a magic number: 1.1f,665
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`3.3f));" is 124.,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` %s]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`3.3f));" is 179.,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 2.2f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailEquals,Magic Number,The method contains a magic number: 3.3f,673
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`TOLERABLE_3POINT3));" is 137.,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` %s]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f`TOLERABLE_3POINT3));" is 192.,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_FailApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,687
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Long Statement,The length of the statement "assertThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`INTOLERABLE_3POINT3));" is 121.,701
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,701
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 3.3f,701
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NotQuiteApproximatelyEquals,Magic Number,The method contains a magic number: 2.2f,701
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`POSITIVE_INFINITY)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 150.,709
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` Infinity]> has values not within %s of <[%s` Infinity]>"`2.2f`DEFAULT_TOLERANCE`2.2f));" is 181.,709
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,709
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,709
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,709
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_Infinity,Magic Number,The method contains a magic number: 2.2f,709
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`3.3f)).hasValuesNotWithin(DEFAULT_TOLERANCE).ofElementsIn(Floats.asList(2.2f`POSITIVE_INFINITY));" is 137.,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[%s` %s]> has values not within %s of <[%s` Infinity]>"`2.2f`3.3f`DEFAULT_TOLERANCE`2.2f));" is 180.,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 3.3f,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_OneInfinity,Magic Number,The method contains a magic number: 2.2f,723
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 2.2f,737
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_LongerOneInfinity,Magic Number,The method contains a magic number: 3.3f,737
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_Fail_NaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <[NaN]> has values not within %s of <[NaN]>"`DEFAULT_TOLERANCE));" is 153.,745
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Empty catch clause,The method has an empty catch block.,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 3.3f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullSubject,Magic Number,The method contains a magic number: 2.2f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Empty catch clause,The method has an empty catch block.,770
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 3.3f,770
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NullObject,Magic Number,The method contains a magic number: 2.2f,770
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,783
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,783
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,783
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 3.3f,783
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 2.2f,783
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,hasValuesNotWithinOfElementsIn_NegativeTolerance,Magic Number,The method contains a magic number: 0.001f,783
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,798
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,798
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,803
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,803
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is a finite " + "number within %s of <%s>"`1.0f`INTOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`2.0f));" is 271.,808
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,808
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,808
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,808
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,808
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`POSITIVE_INFINITY`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(POSITIVE_INFINITY);" is 127.,823
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` Infinity` %s]> " + "contains at least one element that is " + "a finite number within %s of <Infinity>"`1.0f`3.0f`(double)DEFAULT_TOLERANCE));" is 262.,823
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,823
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,823
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` NaN` %s]> " + "contains at least one element that is " + "a finite number within %s of <NaN>"`1.0f`3.0f`(double)DEFAULT_TOLERANCE));" is 252.,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,838
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,853
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`Integer.MIN_VALUE + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(1 << 9).contains(Integer.MIN_VALUE);" is 125.,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`2.0f + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(BigInteger.valueOf(2));" is 127.,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`2.0f + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(BigDecimal.valueOf(2.0));" is 129.,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 9,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2L,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 41,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,858
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Empty catch clause,The method has an empty catch block.,894
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,894
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,894
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,903
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,915
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,915
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0f`99.99f));" is 129.,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is a " + "finite number within %s of each element of <[%s` %s]>. "+ "It is missing an element that is a finite number within %s of <%s>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`2.0f`99.99f`(double)DEFAULT_TOLERANCE`99.99f));" is 403.,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,922
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,945
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,945
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAllOf(array(2.0f`1.0f)).inOrder();" is 137.,953
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is a finite number within " + (double)DEFAULT_TOLERANCE + " of an expected value"`"expected order for required elements"`"but was");" is 266.,953
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,953
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,953
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,953
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,970
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99f`999.999f));" is 133.,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is " + "a finite number within %s of any element in <[%s` %s]>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`99.99f`999.999f));" is 301.,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,977
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,992
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,992
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,992
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f));" is 129.,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains exactly one element that is a finite " + "number within %s of each element of <[%s` %s]>. "+ "It has unexpected elements <[%s]>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`2.0f`1.0f`3.0f));" is 339.,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,999
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(1.0f`2.0f`3.0f)).inOrder();" is 126.,1015
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1015
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1015
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1015
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f`3.0f)).inOrder();" is 144.,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is a finite number within " + (double)DEFAULT_TOLERANCE + " of an expected value"`"expected"`"but was");" is 220.,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1023
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1040
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1040
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 999.999f,1040
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99f`2.0f));" is 130.,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains no element that is a finite number within %s" + " of any element in <[%s` %s]>. It contains <[%s which corresponds to %s]>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`99.99f`2.0f`TOLERABLE_TWO`2.0f));" is 350.,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1047
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,1069
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element " + "that is exactly equal to <%s>"`1.0f`JUST_OVER_2POINT2`3.0f`2.2f));" is 235.,1074
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1074
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.2f,1074
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,1074
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.2f,1074
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value 16777217 in assertion using exact float equality was an int with an " + "absolute value greater than 2^24 which has no exact float representation");" is 212.,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value 16777217 in assertion using exact float equality was a long with an " + "absolute value greater than 2^24 which has no exact float representation");" is 212.,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact float equality was a double` which is not " + "supported as a double may not have an exact float representation");" is 203.,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact float equality was of unsupported type " + BigInteger.class + " (it may not have an exact float representation)");" is 203.,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Expected value in assertion using exact float equality was of unsupported type " + BigDecimal.class + " (it may not have an exact float representation)");" is 203.,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2L,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,1089
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,1154
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,1161
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` -0.0` %s]> " + "contains at least one element that is " + "exactly equal to <%s>"`1.0f`3.0f`0.0f));" is 219.,1166
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1166
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,1166
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Empty catch clause,The method has an empty catch block.,1179
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,1179
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,1179
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1188
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1188
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1188
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is exactly equal " + "to each element of <[%s` %s]>. It is missing an element that is exactly "+ "equal to <%s>"`1.0f`2.0f`3.0f`2.0f`99.99f`99.99f));" is 318.,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1193
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1209
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1209
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1209
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected order for required elements"`"but was");" is 223.,1217
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1217
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1217
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1217
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAllOf_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1217
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1232
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1232
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1232
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1232
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is exactly equal " + "to any element in <[%s` %s]>"`1.0f`2.0f`3.0f`99.99f`999.999f));" is 254.,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,1237
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1252
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1252
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1252
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1252
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains exactly one element that is exactly equal " + "to each element of <[%s` %s]>. It has unexpected elements <[%s]>"`1.0f`2.0f`3.0f`2.0f`1.0f`3.0f));" is 288.,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1259
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,1274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,1274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`2.0f`3.0f)).usingExactEquality().containsExactly(array(2.0f`1.0f`3.0f)).inOrder();" is 122.,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected"`"but was");" is 177.,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,1282
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,1297
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,1297
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,1297
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 999.999f,1297
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains no element that is exactly equal to any " + "element in <[%s` %s]>. It contains <[%s which corresponds to %s]>"`1.0f`2.0f`3.0f`99.99f`2.0f`2.0f`2.0f));" is 294.,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1304
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,1304
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,45
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,45
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,61
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,61
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 238.,61
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,83
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,83
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,99
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,99
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 212.,99
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).isEqualTo(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 124.,118
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`e.getMessage()).that(e).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 347.,118
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2L,118
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,139
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,146
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 5,159
truth,com.google.common.truth,MultimapSubjectTest,multimapNamedValuesForKey,Magic Number,The method contains a magic number: 4,159
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedSingleElements,Magic Number,The method contains a magic number: 5,177
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedSingleElements,Magic Number,The method contains a magic number: 4,177
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: multimap.valuesForKey(1)\n" + "Not true that valuez (<[5]>) contains exactly <[3` 4]>. " + "It is missing <[3` 4]> and has unexpected items <[5]>\n"+ "multimap was: {1=[5]}");" is 252.,192
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Magic Number,The method contains a magic number: 5,192
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Magic Number,The method contains a magic number: 3,192
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyNamedMultipleElements,Magic Number,The method contains a magic number: 4,192
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,205
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,215
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,215
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"multimap was");" is 138.,257
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,257
truth,com.google.common.truth,MultimapSubjectTest,containsEntryFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever]}> contains entry <daniel=ploch>");" is 132.,308
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 164.,324
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 170.,335
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 167.,347
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.builder().put(1`"1").put(1`1L).put(1L`1).put(2`3).build()).containsEntry(1`1);" is 125.,358
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[1` 1]` 1=[1]` 2=[3]}> contains entry " + "<1=1 (Map.Entry<java.lang.Integer` java.lang.Integer>)>. However` it does " + "contain entries <[1=1 (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=1 (Map.Entry<java.lang.Integer` java.lang.Long>)` "+ "1=1 (Map.Entry<java.lang.Long` java.lang.Integer>)]>");" is 394.,358
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 2,358
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 3,358
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,389
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,400
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,400
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,408
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,417
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,437
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 186.,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,459
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 176.,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,475
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 188.,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,493
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 230.,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,511
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}>");" is 177.,532
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]` =[]}> contains exactly <{a=[\"\" (empty String)]}>. " + "It has unexpected items <{\"\" (empty String)=[\"\" (empty String)]}>");" is 214.,542
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}> " + "and has unexpected items <{a=[\"\" (empty String)]}>");" is 239.,552
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,563
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,573
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 146.,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,582
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 192.,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,597
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,615
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,623
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 176.,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,632
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 188.,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 5,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,651
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 230.,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 5,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,670
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,692
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 186.,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,700
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,716
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(format("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 146.,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,726
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(format("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 192.,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,743
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 139.,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 397.,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,763
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2L`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2`"c"));" is 139.,778
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[" + "1=a (Map.Entry<java.lang.Long` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Long` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Integer` java.lang.String>)]> "+ "and has unexpected items <["+ "1=a (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Long` java.lang.String>)]>");" is 607.,778
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,778
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,778
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,798
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 124.,807
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 261.,807
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,807
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`789);" is 124.,822
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 266.,822
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,822
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 124.,837
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 197.,837
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,837
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 123,851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,864
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,873
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`789);" is 130.,891
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 256.,891
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,891
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,906
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,906
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 128,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,919
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 128,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 123,930
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 128,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,949
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 64,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 123,967
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`new Object());" is 127.,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,991
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 128,1007
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1018
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1038
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).named("multymap").comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 152.,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that multymap (<{abc=[+123]}>) contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each element " + "of <[abc=123` def=456]>. It is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=456>");" is 385.,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Magic Number,The method contains a magic number: 123,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWithNamed,Magic Number,The method contains a magic number: 456,1058
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyNoArgs,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableListMultimap.of("abc"`"+123")).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly();" is 149.,1076
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 136.,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 128,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,1094
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 154.,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 128,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 123,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64);" is 144.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 128,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1120
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`128`"abc"`123);" is 155.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 64,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 123,1136
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Empty catch clause,The method has an empty catch block.,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`new Object());" is 127.,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`123`"def"`64`"abc"`123);" is 136.,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`64`"def"`128);" is 136.,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1172
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`64`"def"`128`"abc"`123).inOrder();" is 164.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1181
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`128`"def"`64).inOrder();" is 164.,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1199
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).named("multymap").comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456);" is 154.,1217
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that multymap (<{abc=[+123]}>) contains exactly one element that has a key " + "that is equal to and a value that parses to the key and value of each element " + "of <[abc=123` def=456]>. It is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=456>");" is 385.,1217
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Magic Number,The method contains a magic number: 123,1217
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_failsWithNamed,Magic Number,The method contains a magic number: 456,1217
truth,com.google.common.truth,StackTraceCleaner,clean,Complex Method,Cyclomatic complexity of the method is 12,64
truth,com.google.common.truth,StackTraceCleaner,clean,Long Statement,The length of the statement "if (stackTraceElementWrapper.getStackFrameType() == StackFrameType.TEST_FRAMEWORK || stackTraceElementWrapper.getStackFrameType() == StackFrameType.REFLECTION) {" is 161.,64
truth,com.google.common.truth,StackTraceCleaner,createStreakReplacementFrame,Long Statement,The length of the statement "return new StackTraceElementWrapper(new StackTraceElement("[[" + stackFrameType.getName() + ": "+ length+ " frames collapsed ("+ CLEANER_LINK+ ")]]"`""`""`0)`stackFrameType);" is 174.,238
truth,com.google.common.truth,TruthJUnit,fail,Long Statement,The length of the statement "ThrowableAssumptionViolatedException assumptionViolated=new ThrowableAssumptionViolatedException(failure.getMessage()`failure.getCause());" is 138.,47
truth,com.google.common.truth,DoubleSubject,isWithin,Long Statement,The length of the statement "failWithoutActual(fact("expected"`doubleToString(expected))`butWas()`fact("outside tolerance"`doubleToString(tolerance)));" is 122.,82
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithoutActual(fact("expected"`doubleToString(expected))`butWas()`fact("outside tolerance"`doubleToString(tolerance)));" is 122.,106
truth,com.google.common.truth,DoubleSubject,isNotWithin,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`doubleToString(expected))`butWas()`fact("within tolerance"`doubleToString(tolerance)));" is 131.,123
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`doubleToString(expected))`butWas()`fact("within tolerance"`doubleToString(tolerance)));" is 131.,145
truth,com.google.common.truth,DoubleSubject,isFinite,Complex Conditional,The conditional expression actual() == null || actual().isNaN() || actual().isInfinite() is complex.,251
truth,com.google.common.truth,ThrowableSubject,hasMessageThat,Long Statement,The length of the statement "check=check.withMessage("(Note from Truth: When possible` instead of asserting on the full message` assert" + " about individual facts by using ExpectFailure.assertThat.)");" is 173.,50
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 122.,146
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,146
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,146
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 122.,167
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,167
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,167
truth,com.google.common.truth,PrimitiveDoubleArraySubject,hasValuesNotWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 124.,205
truth,com.google.common.truth,PrimitiveDoubleArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.doubleValue()`tolerance)) {" is 124.,227
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Long Statement,The length of the statement "checkArgument(expected instanceof Double || expected instanceof Float || expected instanceof Integer|| expected instanceof Long`"Expected value in assertion using exact double equality was of unsupported type %s " + "(it may not have an exact double representation)"`expected.getClass());" is 288.,295
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Long Statement,The length of the statement "checkArgument(Math.abs((Long)expected) <= 1L << 53`"Expected value %s in assertion using exact double equality was a long with an absolute " + "value greater than 2^52 which has no exact double representation"`expected);" is 220.,295
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Magic Number,The method contains a magic number: 53,295
truth,com.google.common.truth,PrimitiveDoubleArraySubject,iterableSubject,Long Statement,The length of the statement "return checkNoNeedToDisplayBothValues("asList()").about(iterablesWithCustomDoubleToString()).that(Doubles.asList(actual()));" is 124.,395
truth,com.google.common.truth,SubjectUtils,accumulate,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,SubjectUtils,countDuplicatesAndAddTypeInfo,Long Statement,The length of the statement "return homogeneousTypeName.isPresent() ? StringUtil.format("%s (%s)"`countDuplicates(items)`homogeneousTypeName.get()) : countDuplicates(addTypeInfoToEveryItem(items)).toString();" is 179.,96
truth,com.google.common.truth,SubjectUtils,annotateEmptyStrings,Long Identifier,The length of the field HUMAN_UNDERSTANDABLE_EMPTY_STRING is 33.,286
truth,com.google.common.truth,JUnitComparisonFailure,JUnitComparisonFailure,Long Parameter List,The method has 5 parameters. ,24
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s (%s)>. However` it does contain entries <%s>"`actualAsString()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().entries()`entryList)));" is 234.,102
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. However` it has a mapping from <%s> to <%s>"`actualAsString()`entry`key`actual().asMap().get(key));" is 157.,102
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualAsString()`entry`value`keys);" is 150.,102
truth,com.google.common.truth,MultimapSubject,isEqualTo,Complex Conditional,The conditional expression (actual() instanceof ListMultimap && other instanceof SetMultimap) || (actual() instanceof SetMultimap && other instanceof ListMultimap) is complex.,156
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "if ((actual() instanceof ListMultimap && other instanceof SetMultimap) || (actual() instanceof SetMultimap && other instanceof ListMultimap)) {" is 143.,156
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s is equal to %s <%s>. " + "A %s cannot equal a %s if either is non-empty."`mapType1`actualAsString()`mapType2`other`mapType1`mapType2);" is 174.,156
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains exactly <%s>. " + "It is missing <%s> and has unexpected items <%s>"`actualAsString()`annotateEmptyStringsMultimap(expectedMultimap)`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStringsMultimap(missing).entries()) : countDuplicatesMultimap(annotateEmptyStringsMultimap(missing))`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStringsMultimap(extra).entries()) : countDuplicatesMultimap(annotateEmptyStringsMultimap(extra)));" is 492.,180
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains exactly"`annotateEmptyStringsMultimap(expectedMultimap)`"is missing"`countDuplicatesMultimap(annotateEmptyStringsMultimap(missing)));" is 162.,180
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains exactly"`annotateEmptyStringsMultimap(expectedMultimap)`"has unexpected items"`countDuplicatesMultimap(annotateEmptyStringsMultimap(extra)));" is 170.,180
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,251
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth,TruthFailureSubject,doFactValue,Long Identifier,The length of the field HOW_TO_TEST_KEYS_WITHOUT_VALUES is 31.,129
truth,com.google.common.truth,TruthFailureSubject,doFactValue,Long Statement,The length of the statement "failWithoutActual(factWithoutValue("expected to have a value")`fact("for key"`key)`factWithoutValue("but the key was present with no value")`HOW_TO_TEST_KEYS_WITHOUT_VALUES);" is 174.,129
truth,com.google.common.truth,TruthFailureSubject,doFactValue,Long Statement,The length of the statement "failWithoutActual(factWithoutValue("expected to have a value")`fact("for key"`key)`fact("and index"`index)`factWithoutValue("but the key was present with no value")`HOW_TO_TEST_KEYS_WITHOUT_VALUES);" is 198.,129
truth,com.google.common.truth,Subject,standardIsNotEqualTo,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`unexpectedAsString)`fact("but was; string representation of actual value"`actualCustomStringRepresentation()));" is 155.,204
truth,com.google.common.truth,Subject,compareForEquality,Complex Method,Cyclomatic complexity of the method is 8,220
truth,com.google.common.truth,Subject,isInstanceOf,Long Statement,The length of the statement "throw new UnsupportedOperationException(actualCustomStringRepresentation() + "` an instance of " + actual().getClass().getName()+ "` may or may not be an instance of "+ clazz.getName()+ ". Under -XdisableClassMetadata` we do not have enough information to tell.");" is 264.,306
truth,com.google.common.truth,Subject,isInstanceOf,Long Statement,The length of the statement "failWithoutActual(fact("expected instance of"`clazz.getName())`fact("but was instance of"`actual().getClass().getName())`fact("with value"`actualCustomStringRepresentation()));" is 176.,306
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 2,476
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 4,476
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 0xf,476
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 0xf,476
truth,com.google.common.truth,Subject,apply,Complex Method,Cyclomatic complexity of the method is 10,492
truth,com.google.common.truth,Subject,checkByteArrayEquals,Long Statement,The length of the statement "return ComparisonResult.differentWithDescription(fact("expected"`Arrays.toString(expected))`fact("but was"`Arrays.toString(actual)));" is 133.,573
truth,com.google.common.truth,Subject,checkArrayEqualsRecursive,Complex Conditional,The conditional expression actual != null && actual.getClass().isArray() && expected != null && expected.getClass().isArray() is complex.,586
truth,com.google.common.truth,Subject,checkArrayEqualsRecursive,Complex Method,Cyclomatic complexity of the method is 8,586
truth,com.google.common.truth,Subject,checkArrayEqualsRecursive,Long Statement,The length of the statement "return ComparisonResult.differentWithDescription(indexFact`fact("expected"`expectedLength)`fact("but was"`actualLength));" is 121.,586
truth,com.google.common.truth,Subject,arrayType,Complex Method,Cyclomatic complexity of the method is 9,641
truth,com.google.common.truth,Subject,failEqualityCheck,Complex Conditional,The conditional expression equalityCheck == EqualityCheck.EQUAL && actual() != null && expected != null is complex.,834
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "String doppelgangerDescription=equal ? "(different but equal instance of same class with same string representation)" : "(non-equal instance of same class with same string representation)";" is 189.,834
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "failEqualityCheckNoComparisonFailure(difference`fact(equalityCheck.keyForExpected`expectedString)`fact("but was"`doppelgangerDescription));" is 139.,834
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "failEqualityCheckNoComparisonFailure(difference`fact(equalityCheck.keyForExpected`expectedString)`fact("an instance of"`expectedClass)`fact("but was"`"(non-equal value with same string representation)")`fact("an instance of"`actualClass));" is 239.,834
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "failEqualityCheckNoComparisonFailure(difference`fact(equalityCheck.keyForExpected`expectedString)`fact("but was"`actualString));" is 128.,834
truth,com.google.common.truth,Subject,failWithBadResults,Long Statement,The length of the statement "String message=format("Not true that %s %s <%s>. It %s <%s>"`actualAsString()`verb`expected`failVerb`(actual == null) ? "null reference" : actual);" is 147.,893
truth,com.google.common.truth,Subject,typeDescriptionOrGuess,Long Statement,The length of the statement "String actualClass=(subjectClass.endsWith("Subject") && !subjectClass.equals("Subject")) ? subjectClass.substring(0`subjectClass.length() - "Subject".length()) : "Object";" is 171.,1071
truth,com.google.common.truth,FailureMetadata,failEqualityCheck,Long Statement,The length of the statement "doFail(ComparisonFailureWithFacts.create(evaluateAll(messages)`concat(descriptionAsFacts()`headFacts)`concat(tailFacts`rootUnlessThrowableAsFacts())`expected`actual`rootCause().orNull()));" is 188.,173
truth,com.google.common.truth,FailureMetadata,fail,Long Statement,The length of the statement "doFail(AssertionErrorWithFacts.create(evaluateAll(messages)`concat(descriptionAsFacts()`facts`rootUnlessThrowableAsFacts())`rootCause().orNull()));" is 147.,188
truth,com.google.common.truth,FailureMetadata,failComparing,Long Statement,The length of the statement "doFail(new JUnitComparisonFailure(addToMessage(message)`expected.toString()`actual.toString()`rootUnlessThrowableAsString()`rootCause().orNull()));" is 147.,208
truth,com.google.common.truth,FailureMetadata,failComparing,Long Statement,The length of the statement "doFail(new JUnitComparisonFailure(addToMessage(message)`expected.toString()`actual.toString()`rootUnlessThrowableAsString()`cause));" is 132.,218
truth,com.google.common.truth,FailureMetadata,rootUnlessThrowable,Long Statement,The length of the statement "return seenDerivation ? Optional.of(fact(rootSubject.subject.typeDescription() + " was"`rootSubject.subject.actualAsStringNoBrackets())) : Optional.<Fact>absent();" is 163.,313
truth,com.google.common.truth,SortedMapSubject,hasFirstKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first key <%s>. " + "It does contain this key` but the first key is <%s>"`actualAsString()`key`actualAsNavigableMap().firstKey());" is 171.,54
truth,com.google.common.truth,SortedMapSubject,hasFirstKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first key <%s>. " + "It does not contain this key` and the first key is <%s>"`actualAsString()`key`actualAsNavigableMap().firstKey());" is 175.,54
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Complex Method,Cyclomatic complexity of the method is 10,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. " + "It does contain this entry` but the first entry is <%s>"`actualAsString()`expectedEntry`actualFirstEntry);" is 170.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>` the first value is <%s>"`actualAsString()`expectedEntry`actualFirstEntry.getValue());" is 144.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>` the first key is <%s>"`actualAsString()`expectedEntry`actualFirstKey);" is 129.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. It does contain this key` " + "but the key is mapped to <%s>` and the first entry is <%s>"`actualAsString()`expectedEntry`actualAsNavigableMap().get(key)`actualFirstEntry);" is 231.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. It does contain this value` but the value is " + "mapped from the keys <%s>` and the first entry is <%s>"`actualAsString()`expectedEntry`keys`actualFirstEntry);" is 219.,76
truth,com.google.common.truth,SortedMapSubject,hasFirstEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first entry <%s>. " + "It does not contain this entry` and the first entry is <%s>"`actualAsString()`expectedEntry`actualFirstEntry);" is 174.,76
truth,com.google.common.truth,SortedMapSubject,hasLastKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last key <%s>. " + "It does contain this key` but the last key is <%s>"`actualAsString()`key`actualAsNavigableMap().lastKey());" is 168.,125
truth,com.google.common.truth,SortedMapSubject,hasLastKey,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last key <%s>. " + "It does not contain this key` and the last key is <%s>"`actualAsString()`key`actualAsNavigableMap().lastKey());" is 172.,125
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Complex Method,Cyclomatic complexity of the method is 10,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. " + "It does contain this entry` but the last entry is <%s>"`actualAsString()`expectedEntry`actualLastEntry);" is 167.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>` the last value is <%s>"`actualAsString()`expectedEntry`actualLastEntry.getValue());" is 141.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>` the last key is <%s>"`actualAsString()`expectedEntry`actualLastKey);" is 126.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. It does contain this key` " + "but the key is mapped to <%s>` and the last entry is <%s>"`actualAsString()`expectedEntry`actualAsNavigableMap().get(key)`actualLastEntry);" is 228.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. It does contain this value` but the value is " + "mapped from the keys <%s>` and the last entry is <%s>"`actualAsString()`expectedEntry`keys`actualLastEntry);" is 216.,147
truth,com.google.common.truth,SortedMapSubject,hasLastEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last entry <%s>. " + "It does not contain this entry` and the last entry is <%s>"`actualAsString()`expectedEntry`actualLastEntry);" is 171.,147
truth,com.google.common.truth,AssertionErrorWithFacts,AssertionErrorWithFacts,Empty catch clause,The method has an empty catch block.,39
truth,com.google.common.truth,StringUtil,format,Magic Number,The method contains a magic number: 16,43
truth,com.google.common.truth,StringUtil,format,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,StandardSubjectBuilder,StandardSubjectBuilder,Long Identifier,The length of the field metadataDoNotReferenceDirectly is 30.,67
truth,com.google.common.truth,StandardSubjectBuilder,metadata,Long Identifier,The length of the field metadataDoNotReferenceDirectly is 30.,243
truth,com.google.common.truth,SortedSetSubject,hasFirstElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first element <%s>. " + "It does contain this element` but the first element is <%s>"`actualAsString()`element`actualAsNavigableSet().first());" is 184.,47
truth,com.google.common.truth,SortedSetSubject,hasFirstElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has first element <%s>. " + "It does not contain this element` and the first element is <%s>"`actualAsString()`element`actualAsNavigableSet().first());" is 188.,47
truth,com.google.common.truth,SortedSetSubject,hasLastElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last element <%s>. " + "It does contain this element` but the last element is <%s>"`actualAsString()`element`actualAsNavigableSet().last());" is 181.,69
truth,com.google.common.truth,SortedSetSubject,hasLastElement,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has last element <%s>. " + "It does not contain this element` and the last element is <%s>"`actualAsString()`element`actualAsNavigableSet().last());" is 185.,69
truth,com.google.common.truth,Platform,makeDiff,Magic Number,The method contains a magic number: 3,78
truth,com.google.common.truth,Platform,makeDiff,Magic Number,The method contains a magic number: 2,78
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 121.,145
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,145
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesWithin,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,145
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && !equalWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 121.,166
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has values within %s of <%s>. Expected length <%s> but got <%s>"`actualAsString()`tolerance`Iterables.toString(expected)`expectedCount`actual.length);" is 187.,166
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "failWithBadResults("has values within " + tolerance + " of"`Iterables.toString(expected)`"differs at indexes"`mismatches);" is 122.,166
truth,com.google.common.truth,PrimitiveFloatArraySubject,hasValuesNotWithin,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 123.,204
truth,com.google.common.truth,PrimitiveFloatArraySubject,ofElementsIn,Long Statement,The length of the statement "if (expectedCount < actual.length && notEqualWithinTolerance(actual[expectedCount]`expectedValue.floatValue()`tolerance)) {" is 123.,226
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(!(expected instanceof Double)`"Expected value in assertion using exact float equality was a double` which is not " + "supported as a double may not have an exact float representation");" is 199.,293
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(expected instanceof Float || expected instanceof Integer || expected instanceof Long`"Expected value in assertion using exact float equality was of unsupported type %s " + "(it may not have an exact float representation)"`expected.getClass());" is 257.,293
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(Math.abs((Integer)expected) <= 1 << 24`"Expected value %s in assertion using exact float equality was an int with an absolute " + "value greater than 2^24 which has no exact float representation"`expected);" is 220.,293
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(Math.abs((Long)expected) <= 1L << 24`"Expected value %s in assertion using exact float equality was a long with an absolute " + "value greater than 2^24 which has no exact float representation"`expected);" is 218.,293
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Magic Number,The method contains a magic number: 24,293
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Magic Number,The method contains a magic number: 24,293
truth,com.google.common.truth,PrimitiveFloatArraySubject,iterableSubject,Long Statement,The length of the statement "return checkNoNeedToDisplayBothValues("asList()").about(iterablesWithCustomFloatToString()).that(Floats.asList(actual()));" is 122.,399
truth,com.google.common.truth,Platform,isInstanceOfType,Long Statement,The length of the statement "throw new UnsupportedOperationException("Under GWT` we can't determine whether an object is an instance of an interface Class");" is 128.,39
truth,com.google.common.truth,ComparisonFailureWithFacts,create,Long Parameter List,The method has 6 parameters. ,42
truth,com.google.common.truth,ComparisonFailureWithFacts,ComparisonFailureWithFacts,Long Parameter List,The method has 5 parameters. ,55
truth,com.google.common.truth,ComparisonFailureWithFacts,ComparisonFailureWithFacts,Long Statement,The length of the statement "super(makeMessage(messages`facts)`checkNotNull(expected)`checkNotNull(actual)`null`cause`OMIT_COMPARISON_FAILURE_GENERATED_MESSAGE);" is 132.,55
truth,com.google.common.truth,ComparisonFailureWithFacts,removeCommonPrefixAndSuffix,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,ComparisonFailureWithFacts,removeCommonPrefixAndSuffix,Magic Number,The method contains a magic number: 3,115
truth,com.google.common.truth,ComparisonFailureWithFacts,validSurrogatePairAt,Long Statement,The length of the statement "return index >= 0 && index <= (string.length() - 2) && isHighSurrogate(string.charAt(index)) && isLowSurrogate(string.charAt(index + 1));" is 137.,161
truth,com.google.common.truth,ComparisonFailureWithFacts,validSurrogatePairAt,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth,MapSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that %s is equal to <%s>. It is equal according to the contract of " + "Map.equals(Object)` but this implementation returned false"`actualAsString()`other);" is 185.,56
truth,com.google.common.truth,MapSubject,containsEntry,Complex Method,Cyclomatic complexity of the method is 9,109
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s (%s)>. However` it does contain keys <%s>."`actualAsString()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().keySet()`keyList)));" is 229.,109
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s (%s)>. However` it does contain values <%s>."`actualAsString()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual().values()`valueList)));" is 233.,109
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualAsString()`entry`value`keys);" is 150.,109
truth,com.google.common.truth,MapSubject,accumulateMap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,187
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth,MapSubject,containsExactlyEntriesInAnyOrder,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. It %s"`actualAsString()`failVerb`expectedMap`diff.describe(VALUE_DIFFERENCE_FORMAT));" is 131.,230
truth,com.google.common.truth,MapSubject,apply,Long Statement,The length of the statement "return StringUtil.format("(expected %s but got %s)"`includeTypes ? new TypedToStringWrapper(values.expected) : values.expected`includeTypes ? new TypedToStringWrapper(values.actual) : values.actual);" is 199.,348
truth,com.google.common.truth,ExpectFailure,ensureFailureCaught,Long Statement,The length of the statement "throw new AssertionError("ExpectFailure.whenTesting() invoked` but no failure was caught." + Platform.EXPECT_FAILURE_WARNING_IF_GWT);" is 133.,121
truth,com.google.common.truth,ExpectFailure,captureFailure,Long Statement,The length of the statement "throw new AssertionError(format("ExpectFailure.whenTesting() caught multiple failures:\n\n%s\n\n%s\n"`Platform.getStackTraceAsString(failure)`Platform.getStackTraceAsString(captured)));" is 185.,141
truth,com.google.common.truth,Correspondence,equals,Long Statement,The length of the statement "throw new UnsupportedOperationException("Correspondence.equals(object) is not supported. If you meant to compare objects` use" + " .compare(actual` expected) instead.");" is 169.,132
truth,com.google.common.truth,FloatSubject,isNotWithin,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`floatToString(expected))`butWas()`fact("within tolerance"`floatToString(tolerance)));" is 129.,123
truth,com.google.common.truth,FloatSubject,of,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`floatToString(expected))`butWas()`fact("within tolerance"`floatToString(tolerance)));" is 129.,145
truth,com.google.common.truth,FloatSubject,isFinite,Complex Conditional,The conditional expression actual() == null || actual().isNaN() || actual().isInfinite() is complex.,249
truth,com.google.common.truth,Fact,makeMessage,Complex Method,Cyclomatic complexity of the method is 8,63
truth,com.google.common.truth,IterableSubject,contains,Long Statement,The length of the statement "failWithoutActual(fact("expected to contain"`element)`fact("an instance of"`objectToTypeName(element))`factWithoutValue("but did not")`fact("though it did contain"`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual()`elementList)))`fullContents());" is 257.,133
truth,com.google.common.truth,IterableSubject,containsAnyIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s %s <%s>. However` it does contain <%s>."`actualAsString()`"contains any of"`iterableToStringWithTypeInfo(expected)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual()`expected)));" is 226.,179
truth,com.google.common.truth,IterableSubject,containsAllIn,Long Statement,The length of the statement "failWithRawMessage("Not true that %s contains at least <%s>. " + "It is missing <%s>. However` it does contain <%s>."`actualAsString()`annotateEmptyStrings(expected)`countDuplicatesAndAddTypeInfo(annotateEmptyStrings(missing))`countDuplicatesAndAddTypeInfo(annotateEmptyStrings(retainMatchingToString(actual()`missing))));" is 322.,228
truth,com.google.common.truth,IterableSubject,containsAllIn,Long Statement,The length of the statement "failWithBadResults("contains at least"`annotateEmptyStrings(expected)`"is missing"`countDuplicates(annotateEmptyStrings(missing)));" is 131.,228
truth,com.google.common.truth,IterableSubject,containsAllIn,Long Statement,The length of the statement "fail(factWithoutValue("required elements were all found` but order was wrong")`fact("expected order for required elements"`expected));" is 134.,228
truth,com.google.common.truth,IterableSubject,inOrder,Long Statement,The length of the statement "fail(factWithoutValue("required elements were all found` but order was wrong")`fact("expected order for required elements"`expected));" is 134.,293
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Complex Conditional,The conditional expression isFirst && !actualIter.hasNext() && !requiredIter.hasNext() is complex.,375
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Complex Method,Cyclomatic complexity of the method is 12,375
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "checkNoNeedToDisplayBothValues("onlyElement()").that(actualElement).failEqualityCheckForEqualsWithoutDescription(requiredElement);" is 130.,375
truth,com.google.common.truth,IterableSubject,failExactly,Long Statement,The length of the statement "StringBuilder message=new StringBuilder(format("Not true that %s contains exactly <%s>. It "`actualAsString()`annotateEmptyStrings(required)));" is 143.,484
truth,com.google.common.truth,IterableSubject,failExactly,Long Statement,The length of the statement "message.append(format("is missing <%s>"`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStrings(missing)) : countDuplicates(annotateEmptyStrings(missing))));" is 166.,484
truth,com.google.common.truth,IterableSubject,failExactly,Long Statement,The length of the statement "message.append(format("has unexpected items <%s>"`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStrings(extra)) : countDuplicates(annotateEmptyStrings(extra))));" is 172.,484
truth,com.google.common.truth,IterableSubject,failExactly,Long Statement,The length of the statement "message.append(". Passing an iterable to the varargs method containsExactly(Object...) is " + "often not the correct thing to do. Did you mean to call " + "containsExactlyElementsIn(Iterable) instead?");" is 203.,484
truth,com.google.common.truth,IterableSubject,isNotIn,Long Statement,The length of the statement "failWithRawMessage("The actual value is an Iterable` and you've written a test that compares it to some " + "objects that are not Iterables. Did you instead mean to check whether its " + "*contents* match any of the *contents* of the given values? If so` call "+ "containsNoneOf(...)/containsNoneIn(...) instead. Non-iterables: %s"`nonIterables);" is 346.,678
truth,com.google.common.truth,StreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,53
truth,com.google.common.truth,StreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,StreamSubjectTest,testContainsNoneOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hello]> contains none of <[hello` hell]>. It contains <[hello]>");" is 131.,186
truth,com.google.common.truth,StreamSubjectTest,testContainsNoneIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hello]> contains none of <[hello` hell]>. " + "It contains <[hello]>");" is 136.,204
truth,com.google.common.truth,StreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains at least <[hell` hello` goodbye]>. " + "It is missing <[goodbye]>");" is 156.,223
truth,com.google.common.truth,StreamSubjectTest,testContainsAllOf_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,242
truth,com.google.common.truth,StreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains at least <[hell` hello` goodbye]>. " + "It is missing <[goodbye]>");" is 156.,262
truth,com.google.common.truth,StreamSubjectTest,testContainsAllIn_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,281
truth,com.google.common.truth,StreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains exactly <[hell]>. " + "It has unexpected items <[hello]>");" is 147.,302
truth,com.google.common.truth,StreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[hell` hello]> contains exactly <[hell]>. " + "It has unexpected items <[hello]>");" is 147.,338
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualTo,Magic Number,The method contains a magic number: 42,40
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,46
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,46
truth,com.google.common.truth,IntStreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,53
truth,com.google.common.truth,IntStreamSubjectTest,testIsEmpty_fails,Magic Number,The method contains a magic number: 42,80
truth,com.google.common.truth,IntStreamSubjectTest,testIsNotEmpty,Magic Number,The method contains a magic number: 42,86
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize,Magic Number,The method contains a magic number: 42,97
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 42,102
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates,Magic Number,The method contains a magic number: 42,108
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,113
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,113
truth,com.google.common.truth,IntStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,125
truth,com.google.common.truth,IntStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,125
truth,com.google.common.truth,IntStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 42,130
truth,com.google.common.truth,IntStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 100,130
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,136
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,136
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 43,136
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 42,141
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 43,141
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 44,141
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,153
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,153
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 43,153
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 42,158
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 43,158
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 44,158
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 42,170
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 43,170
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,175
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,175
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 42,181
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 43,181
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 44,181
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 43,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 43,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 44,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 43,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,215
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,215
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,215
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,215
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains at least <[42` 43` 44]>. It is missing <[44]>");" is 131.,220
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,220
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,220
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 44,220
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains at least <[42` 43` 44]>. " + "It is missing <[44]>");" is 136.,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 44,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42,272
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43,272
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42,272
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43,272
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,277
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42,277
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43,277
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43,277
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42,277
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,292
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,292
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,292
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,292
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 43,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,297
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,311
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,311
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,311
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,311
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,316
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,316
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,316
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,316
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,327
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 43,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,333
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,347
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,347
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,347
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,347
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,352
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,352
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,352
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,352
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 2,363
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 3,363
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 4,363
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 2,363
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 3,363
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 4,363
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualTo,Magic Number,The method contains a magic number: 42,40
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,46
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42L,46
truth,com.google.common.truth,LongStreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,53
truth,com.google.common.truth,LongStreamSubjectTest,testIsEmpty_fails,Magic Number,The method contains a magic number: 42,80
truth,com.google.common.truth,LongStreamSubjectTest,testIsNotEmpty,Magic Number,The method contains a magic number: 42,86
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize,Magic Number,The method contains a magic number: 42,97
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 42,102
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates,Magic Number,The method contains a magic number: 42,108
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,113
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,113
truth,com.google.common.truth,LongStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,125
truth,com.google.common.truth,LongStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,125
truth,com.google.common.truth,LongStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 42,130
truth,com.google.common.truth,LongStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 100,130
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,136
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,136
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 43,136
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 42,141
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 43,141
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 44,141
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,153
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42L,153
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 43L,153
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 42,158
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 43,158
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 44,158
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 42,170
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 43,170
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,175
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,175
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 42,181
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 43,181
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 44,181
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,186
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,186
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 43,186
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 43,198
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 44,198
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,203
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42L,203
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 43L,203
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,215
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,215
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 42,215
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf,Magic Number,The method contains a magic number: 43,215
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains at least <[42` 43` 44]>. It is missing <[44]>");" is 131.,220
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,220
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 43,220
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_fails,Magic Number,The method contains a magic number: 44,220
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,233
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,233
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 42,233
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder,Magic Number,The method contains a magic number: 43,233
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,238
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,238
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,238
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 43,238
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllOf_inOrder_fails,Magic Number,The method contains a magic number: 42,238
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42,253
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43,253
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 42L,253
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn,Magic Number,The method contains a magic number: 43L,253
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains at least <[42` 43` 44]>. " + "It is missing <[44]>");" is 136.,258
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42,258
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43,258
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 42L,258
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 43L,258
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_fails,Magic Number,The method contains a magic number: 44L,258
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains at least <[42` 43` 44]>. " + "It is missing <[42` 43` 44] (java.lang.Integer)>. " + "However` it does contain <[42` 43] (java.lang.Long)>.");" is 224.,272
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 42,272
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 43,272
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 42,272
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 43,272
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_wrongType_fails,Magic Number,The method contains a magic number: 44,272
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42,287
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43,287
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 42L,287
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder,Magic Number,The method contains a magic number: 43L,287
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,292
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42,292
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43,292
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 43L,292
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_fails,Magic Number,The method contains a magic number: 42L,292
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains at least <[43` 42]>. " + "It is missing <[43` 42] (java.lang.Integer)>. " + "However` it does contain <[42` 43] (java.lang.Long)>.");" is 216.,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAllIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,322
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,322
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,322
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,322
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,327
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,327
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 43,327
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,327
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,341
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,341
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,341
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,341
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,346
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,346
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,346
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,346
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42L,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43L,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43L,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42L,357
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It has unexpected items <[43]>");" is 137.,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 43,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42L,363
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[42]>. " + "It is missing <[42] (java.lang.Integer)> and " + "has unexpected items <[42` 43] (java.lang.Long)>");" is 205.,377
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,377
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 43,377
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,377
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,392
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,392
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42L,392
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43L,392
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,397
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,397
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43L,397
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42L,397
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Not true that <[42` 43]> contains exactly <[43` 42]>. " + "It is missing <[43` 42] (java.lang.Integer)> and " + "has unexpected items <[42` 43] (java.lang.Long)>");" is 213.,408
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,408
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,408
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,408
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,408
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 4,423
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 2,423
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 3,423
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 4,423
truth,com.google.common.truth,OptionalIntSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337,42
truth,com.google.common.truth,OptionalIntSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337,67
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,81
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,81
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337,86
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337,97
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42,97
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(OptionalInt.of(1337)).hasValueThat().isLessThan(42));" is 121.,114
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337,114
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42,114
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337,123
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42,123
truth,com.google.common.truth,OptionalDoubleSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337.0,42
truth,com.google.common.truth,OptionalDoubleSubjectTest,isPresentFailingWithNamed,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalDouble.empty()).named("name").isPresent());" is 121.,54
truth,com.google.common.truth,OptionalDoubleSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337.0,67
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,81
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,81
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337.0,86
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337.0,97
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42.0,97
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalDouble.of(1337.0)).hasValueThat().isLessThan(42.0));" is 130.,114
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337.0,114
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42.0,114
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337.0,124
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42.0,124
truth,com.google.common.truth,OptionalLongSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337L,42
truth,com.google.common.truth,OptionalLongSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337L,67
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,81
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,81
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337L,86
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337L,97
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42L,97
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalLong.of(1337L)).hasValueThat().isLessThan(42L));" is 126.,114
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337L,114
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42L,114
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337L,123
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42L,123
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 4,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 4,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailureAbout,Long Statement,The length of the statement "AssertionError unused=expectFailureAbout(STRINGS`(SimpleSubjectBuilderCallback<StringSubject`String>)whenTesting -> whenTesting.that("foo").contains("bar"));" is 157.,42
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 42,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 41,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,kurt,Magic Number,The method contains a magic number: 37802,39
truth,com.google.common.truth.extension,EmployeeSubjectTest,sundar,Magic Number,The method contains a magic number: 5243,55
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.extension,EmployeeSubjectTest,id,Magic Number,The method contains a magic number: 37802,37
truth,com.google.common.truth.extension,EmployeeSubjectTest,id,Magic Number,The method contains a magic number: 12345,37
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,57
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,129
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,129
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,133
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,133
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,132
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 5,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 2,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThat,Magic Number,The method contains a magic number: 3,30
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 5,35
truth,com.google.common.truth.delegation,DelegationTest,assertAboutThatFailure,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 5,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 2,47
truth,com.google.common.truth.delegation,DelegationTest,customTypeProposition,Magic Number,The method contains a magic number: 3,47
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 5,52
truth,com.google.common.truth.delegation,DelegationTest,customTypePropositionWithFailureMessage,Magic Number,The method contains a magic number: 4,52
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsEqualToFailed,Long Statement,The length of the statement "expectFailureMatches("Not true that messages compare equal\\.\\s*" + "(Differences were found:\\n.*|No differences were reported\\..*)");" is 137.,183
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsNotEqualToFailed,Long Statement,The length of the statement "expectFailureMatches("Not true that messages compare not equal\\.\\s*" + "(Only ignorable differences were found:\\n.*|" + "No differences were found\\..*)");" is 158.,189
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,mapOf,Magic Number,The method contains a magic number: 2,220
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,mapOf,Magic Number,The method contains a magic number: 2,220
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,multimapOf,Magic Number,The method contains a magic number: 2,232
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,multimapOf,Magic Number,The method contains a magic number: 2,232
truth,com.google.common.truth.extensions.proto,MultiExpectFailure,whenTesting,Long Statement,The length of the statement "Preconditions.checkState(currentIndex < expectFailures.size() - 1`"Not enough ExpectFailures (%s)"`expectFailures.size());" is 122.,47
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_ignoringField,Long Statement,The length of the statement "expectFailureWhenTesting().that(ignoringFieldDiffMessage).ignoringFields(goodFieldNumber).isEqualTo(ignoringFieldMessage);" is 122.,113
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_ignoringField,Long Statement,The length of the statement "expectFailureWhenTesting().that(ignoringFieldDiffMessage).ignoringFields(badFieldNumber).isNotEqualTo(ignoringFieldMessage);" is 124.,113
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 134.,137
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 133.,137
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 130.,137
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 135.,137
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 131.,153
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 136.,153
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 133.,153
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 132.,153
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 145.,169
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 150.,169
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 147.,169
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 146.,169
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 148.,185
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 147.,185
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 144.,185
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 149.,185
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message message=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 141.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage1=parse("o_int: 999999 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage2=parse("o_int: 3 o_sub_test_message: { o_int: 999999 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage3=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 999999 r_string: \"bar\" }");" is 151.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage4=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"999999\" }");" is 149.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"999999\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 146.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "FieldScope fieldScope=FieldScopes.ignoringFields(getFieldNumber("o_sub_test_message")).allowingFieldDescriptors(getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_int"));" is 196.,251
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message scopeMessage=parse("o_int: 1 r_string: \"x\" o_test_message: { o_int: 1 } " + "r_test_message: { r_string: \"x\" } r_test_message: { o_int: 1 } " + "o_sub_test_message: { o_test_message: { o_int: 1 } }");" is 212.,306
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"2\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } "+ "o_sub_test_message: { o_int: 2 o_test_message: { o_int: 1 r_string: \"2\" } }");" is 276.,306
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message diffMessage=parse("o_int: 4 r_string: \"4\" o_test_message: {o_int: 4 r_string: \"3\" } " + "r_test_message: { o_int: 4 r_string: \"4\" } " + "r_test_message: { o_int: 4 r_string: \"4\" }"+ "o_sub_test_message: { r_string: \"3\" o_int: 3 "+ "o_test_message: { o_int: 4 r_string: \"3\" } }");" is 299.,306
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"3\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" }"+ "o_sub_test_message: { o_int: 3 o_test_message: { o_int: 1 r_string: \"3\" } }");" is 277.,306
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isEqualTo(message);" is 122.,306
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(eqMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isNotEqualTo(message);" is 123.,306
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message scopeMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).build()).addField(21`Field.newBuilder().addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).build()).build()).addGroup(UnknownFieldSet.newBuilder().addField(2`Field.newBuilder().addFixed64(1).build()).build()).build()).build());" is 466.,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message message=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(2).addFixed64(2).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(2).addLengthDelimited(ByteString.copyFrom("2"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(2).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(2).addFixed64(2).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(2).build()).addField(2`Field.newBuilder().addFixed32(2).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(2).build()).build()).build()).build());" is 772.,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message diffMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(4).addFixed64(4).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(4).addLengthDelimited(ByteString.copyFrom("4"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(4).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(4).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build());" is 776.,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message eqMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build());" is 774.,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isEqualTo(message);" is 122.,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(eqMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isNotEqualTo(message);" is 123.,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,374
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFieldNumbersAreRecursive,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).withPartialScope(FieldScopes.allowingFields(fieldNumber)).isEqualTo(message);" is 122.,535
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFieldNumbersAreRecursive,Long Statement,The length of the statement "expectFailureWhenTesting().that(eqMessage).withPartialScope(FieldScopes.allowingFields(fieldNumber)).isNotEqualTo(message);" is 123.,535
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testInvalidFieldNumber,Magic Number,The method contains a magic number: 999,600
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 145.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage1=parse("o_int: 111 r_string: \"foo\" o_sub_test_message: { o_int: 222 " + "o_sub_sub_test_message: { o_int: 333 r_string: \"bar\" } }");" is 154.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage2=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 148.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage3=parse("r_string: \"foo\" o_sub_test_message: { " + "o_sub_sub_test_message: { r_string: \"bar\" } }");" is 121.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage4=parse("o_int: 333 r_string: \"foo\" o_sub_test_message: { o_int: 111 " + "o_sub_sub_test_message: { o_int: 222 r_string: \"bar\" } }");" is 154.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "FieldDescriptor bottom=getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_sub_sub_test_message").getMessageType().findFieldByName("o_int");" is 165.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "ImmutableMap<String`FieldScope> fieldScopes=ImmutableMap.of("BASIC"`FieldScopes.ignoringFieldDescriptors(top`middle`bottom)`"CHAINED"`FieldScopes.ignoringFieldDescriptors(top).ignoringFieldDescriptors(middle).ignoringFieldDescriptors(bottom)`"REPEATED"`FieldScopes.ignoringFieldDescriptors(top`middle).ignoringFieldDescriptors(middle`bottom));" is 343.,627
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqMessage1`eqMessage2);" is 131.,697
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqMessage1`eqMessage2);" is 180.,697
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 166.,697
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 224.,697
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 215.,697
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 224.,697
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(listOf())).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,750
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,750
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(listOf())).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 165.,750
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 165.,750
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,780
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,780
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "assertThat(message).withPartialScope(FieldScopes.fromSetFields(TestMessage3.newBuilder().setOInt(2).build()`TestMessage3.newBuilder().addRString("foo").build())).isEqualTo(eqMessage);" is 183.,802
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "expect.that(expected).hasMessageThat().contains("Message given to FieldScopes.fromSetFields() " + "does not have the same descriptor as the message being tested");" is 163.,802
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Magic Number,The method contains a magic number: 2,802
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "expectThat(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage1);" is 144.,834
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage2);" is 165.,834
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).ignoringFieldScope(FieldScopes.allowingFields(listOf(getFieldNumber("o_int")))).isEqualTo(eqExceptInt);" is 123.,851
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).withPartialScope(FieldScopes.ignoringFields(listOf(getFieldNumber("o_int")))).isEqualTo(eqExceptInt);" is 121.,851
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).reportingMismatchesOnly().ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).isEqualTo(eqExceptInt);" is 131.,851
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(listOf(getFieldDescriptor("o_int")))).isEqualTo(eqExceptInt);" is 137.,851
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).withPartialScope(FieldScopes.ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int")))).isEqualTo(eqExceptInt);" is 135.,851
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnly().ignoringFields(listOf(getFieldNumber("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 134.,883
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 122.,883
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnly().ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 148.,883
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldsForValues(listOf(getFieldNumber("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 151.,904
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 130.,904
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 165.,904
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldsForValues(listOf(getFieldNumber("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 151.,927
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 130.,927
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 165.,927
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactlyEntriesIn(multimapOf(1`eqMessage2`2`eqMessage1`1`eqMessage1));" is 134.,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactlyEntriesIn(multimapOf(1`eqMessage1`1`eqMessage2`2`eqMessage1)).inOrder();" is 144.,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`2`message2)).containsExactlyEntriesIn(multimapOf(2`eqMessage2`1`eqMessage1)).inOrder();" is 141.,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactly(1`eqMessage1`1`eqMessage2`2`eqMessage1).inOrder();" is 123.,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).containsExactly(eqMessage2`eqMessage1).inOrder();" is 143.,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqIgnoredMessage2);" is 135.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqIgnoredMessage2);" is 136.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqRepeatedMessage2);" is 157.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqRepeatedMessage2);" is 158.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(multimapOf(1`eqIgnoredMessage2`2`eqIgnoredMessage1`1`eqIgnoredMessage1));" is 198.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(multimapOf(1`eqRepeatedMessage1`1`eqRepeatedMessage2`2`eqRepeatedMessage1)).inOrder();" is 206.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(multimapOf(2`eqRepeatedMessage2`1`eqRepeatedMessage1));" is 174.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(multimapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1)).inOrder();" is 198.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(1`eqIgnoredMessage2`2`eqIgnoredMessage1`1`eqIgnoredMessage1);" is 177.,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`1`eqRepeatedMessage2`2`eqRepeatedMessage1).inOrder();" is 185.,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(2`eqRepeatedMessage2`1`eqRepeatedMessage1);" is 153.,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1).inOrder();" is 177.,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,251
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).ignoringFields(ignoreFieldNumber).containsExactly(eqIgnoredMessage2`eqIgnoredMessage1);" is 160.,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(2).ignoringRepeatedFieldOrder().containsExactly(eqRepeatedMessage1);" is 138.,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).ignoringFields(ignoreFieldNumber).containsExactly(eqRepeatedMessage1`eqRepeatedMessage2);" is 183.,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,275
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(ImmutableMultimap.of(2`TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`2`TestMessage2.newBuilder().addRString("quibble").addRString("frozzit").build()`3`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(ImmutableMultimap.of(2`TestMessage2.newBuilder().addRString("frozzit").addRString("quibble").build()`3`TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`2`TestMessage2.newBuilder().addRString("bar").addRString("foo").build()));" is 568.,294
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,294
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,294
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).containsExactlyElementsIn(listOf(eqMessage2`eqMessage1)).inOrder();" is 126.,141
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).containsExactlyElementsIn(arrayOf(eqMessage2`eqMessage1)).inOrder();" is 127.,141
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).contains(eqRepeatedMessage1);" is 122.,224
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,224
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().doesNotContain(eqRepeatedMessage1);" is 123.,224
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,224
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqIgnoredMessage1`eqRepeatedMessage2);" is 124.,258
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 127.,258
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqRepeatedMessage1`eqRepeatedMessage2);" is 146.,258
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,258
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqIgnoredMessage2));" is 147.,258
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,258
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqRepeatedMessage2)).ignoringFields(ignoreFieldNumber).containsAllOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 142.,292
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqIgnoredMessage1)).ignoringRepeatedFieldOrder().containsAllIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2));" is 146.,292
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAll,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringRepeatedFieldOrder().containsAllIn(listOf(eqMessage1`eqMessage2));" is 124.,292
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsExactly(eqIgnoredMessage2`eqIgnoredMessage1);" is 125.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactly(eqRepeatedMessage1`eqRepeatedMessage2).inOrder();" is 132.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsExactlyElementsIn(listOf(eqIgnoredMessage2`eqIgnoredMessage1));" is 143.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2)).inOrder();" is 150.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactly(eqMessage2`eqMessage1).inOrder();" is 137.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqMessage1`eqMessage2));" is 136.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqMessage2`eqMessage1)).inOrder();" is 155.,317
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsNoneOf(eqRepeatedMessage1`eqIgnoredMessage2);" is 146.,361
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,361
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsNoneIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 149.,361
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,361
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).withPartialScope(FieldScopes.fromSetFields(message2)).ignoringRepeatedFieldOrder().contains(message2);" is 152.,395
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("assertThat(proto).withPartialScope(FieldScopes.fromSetFields({o_int: 3\n" + "r_string: \"baz\"\n" + "r_string: \"qux\"\n"+ "})).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 224.,395
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringRepeatedFieldOrder().ignoringFieldScope(FieldScopes.ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string"))).ignoringFieldAbsence().contains(message2);" is 220.,395
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("assertThat(proto)" + ".ignoringRepeatedFieldOrder()" + ".ignoringFieldScope("+ "FieldScopes.ignoringFields(" + fullMessageName() + ".o_int` "+ fullMessageName()+ ".r_string))"+ ".ignoringFieldAbsence()"+ ".isEqualTo(target)");" is 273.,395
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringFields(getFieldNumber("o_enum")`getFieldNumber("o_test_message")).reportingMismatchesOnly().contains(message2);" is 169.,395
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_enum` "+ fullMessageName()+ ".o_test_message)"+ ".reportingMismatchesOnly()"+ ".isEqualTo(target)");" is 213.,395
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFormatDiff,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("(diff: Differences were found:\n" + "modified: o_int: 3 -> 1\n" + "added: r_string[0]: \"foo\"\n"+ "added: r_string[1]: \"bar\"\n"+ "deleted: r_string[0]: \"baz\"\n"+ "deleted: r_string[1]: \"qux\"\n");" is 249.,456
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testDisplayingDiffsPairedBy,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(actualInt3`actualInt4)).displayingDiffsPairedBy(getInt).containsExactly(expectedInt3`expectedInt4);" is 138.,473
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(listOf(TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrder().containsExactly(TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 346.,496
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compareByOIntAscending,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,513
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compare,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,515
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1111,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 10,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 100,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1000,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 139.,130
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,144
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFieldsForValues(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(1`message3`2`message4).inOrder();" is 152.,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,234
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_assertAbout_listAndSet,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 3,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,271
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,289
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFieldsForValues(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactlyEntriesIn(multimapOf(1`message3`1`message4`2`message3)).inOrder();" is 184.,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).valuesForKey(1).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 155.,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,316
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 3,336
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Long Statement,The length of the statement "assertThat(altActualObjects).containsExactlyEntriesIn(multimapOf("b"`21 * 2`"a"`"Ba" + "z!"`"a"`"Foo! Bar!".substring(0`4)));" is 125.,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,353
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,353
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,84
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).containsExactlyEntriesIn(mapOf(2`eqMessage2`1`eqMessage1)).inOrder();" is 131.,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqRepeatedMessage1);" is 141.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqRepeatedMessage1);" is 142.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1);" is 141.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`2`eqRepeatedMessage2).inOrder();" is 148.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(mapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1));" is 157.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(mapOf(1`eqRepeatedMessage1`2`eqRepeatedMessage2)).inOrder();" is 164.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`2`eqMessage2);" is 140.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1).inOrder();" is 172.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(mapOf(2`eqRepeatedMessage2`1`eqRepeatedMessage1));" is 164.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(mapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1)).inOrder();" is 188.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(ImmutableMap.of(2`TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`3`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrderForValues().containsExactly(3`TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`2`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 372.,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,231
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message message=fromUnknownFields(UnknownFieldSet.newBuilder().addField(99`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build());" is 142.,107
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message diffMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(93`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build());" is 146.,107
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 99,107
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,107
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 93,107
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,107
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message nestedMessage=parse("r_test_message: { o_int: 33 r_string: \"foo\" r_string: \"bar\" } " + "r_test_message: { o_int: 44 r_string: \"baz\" r_string: \"qux\" } ");" is 169.,138
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message diffNestedMessage=parse("r_test_message: { o_int: 33 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 44 r_string: \"bar\" r_string: \"foo\" } ");" is 173.,138
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message eqNestedMessage=parse("r_test_message: { o_int: 44 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 33 r_string: \"bar\" r_string: \"foo\" } ");" is 171.,138
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance,Magic Number,The method contains a magic number: 0.2,190
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance,Magic Number,The method contains a magic number: 0.05,190
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance,Magic Number,The method contains a magic number: 0.2f,190
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance,Magic Number,The method contains a magic number: 0.2f,202
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance,Magic Number,The method contains a magic number: 0.05f,202
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance,Magic Number,The method contains a magic number: 0.2,202
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_ignoringOrder,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).ignoringExtraRepeatedFieldElements().ignoringRepeatedFieldOrder().isEqualTo(message);" is 130.,256
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_empty,Long Statement,The length of the statement "expectThat(diffMessage).comparingExpectedFieldsOnly().ignoringExtraRepeatedFieldElements().ignoringRepeatedFieldOrder().isEqualTo(message);" is 139.,280
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 2,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 3,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 3,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 4,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 2,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 5,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 2,317
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testReportingMismatchesOnly_isNotEqualTo,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).ignoringRepeatedFieldOrder().reportingMismatchesOnly().isNotEqualTo(message);" is 122.,364
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testHasAllRequiredFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(parsePartial("r_required_string_message: {} r_required_string_message: {}")).hasAllRequiredFields();" is 132.,386
truth,com.google.common.truth.extensions.proto,ProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has all required fields set. Missing: %s"`actualAsString()`actual().findInitializationErrors());" is 133.,197
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,shouldMaybeIgnore,Missing default,The following switch statement is missing a default case: switch (this) {,105
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "checkArgument(actual.getDescriptorForType() == expected.getDescriptorForType()`"The actual [%s] and expected [%s] message descriptors do not match."`actual.getDescriptorForType()`expected.getDescriptorForType());" is 212.,139
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Complex Method,Cyclomatic complexity of the method is 8,152
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addAllSingularFields(fieldDescriptor.getNumber()`compareMapFieldsByKey(actualMap`expectedMap`keyOrder`fieldDescriptor`fieldScopeLogic));" is 144.,152
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addRepeatedField(fieldDescriptor.getNumber()`compareRepeatedFieldIgnoringOrder(actualList`expectedList`shouldIgnore.shouldMaybeIgnore()`fieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 228.,152
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addRepeatedField(fieldDescriptor.getNumber()`compareRepeatedFieldExpectingSubsequence(actualList`expectedList`shouldIgnore.shouldMaybeIgnore()`fieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 235.,152
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addAllSingularFields(fieldDescriptor.getNumber()`compareRepeatedFieldByIndices(actualList`expectedList`shouldIgnore.shouldMaybeIgnore()`fieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 228.,152
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addSingularField(fieldDescriptor.getNumber()`compareSingularValue(actualFields.get(fieldDescriptor)`expectedFields.get(fieldDescriptor)`actual.getDefaultInstanceForType().getField(fieldDescriptor)`shouldIgnore.shouldMaybeIgnore()`fieldDescriptor`name(fieldDescriptor)`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 344.,152
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,toProtoMap,Magic Number,The method contains a magic number: 2,246
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Complex Conditional,The conditional expression config.ignoreExtraRepeatedFieldElements() && !expectedMap.isEmpty() && expectedValue == null is complex.,272
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Parameter List,The method has 5 parameters. ,272
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Statement,The length of the statement "FieldDescriptorOrUnknown valueFieldDescriptorOrUnknown=FieldDescriptorOrUnknown.fromFieldDescriptor(valueFieldDescriptor);" is 122.,272
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Statement,The length of the statement "builder.add(compareSingularValue(actualValue`expectedValue`null`shouldIgnoreValue.shouldMaybeIgnore()`valueFieldDescriptor`indexedName(mapFieldDescriptor`key`keyFieldDescriptor)`valueFieldScopeLogic));" is 201.,272
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Magic Number,The method contains a magic number: 2,272
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Parameter List,The method has 5 parameters. ,318
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "RepeatedField.Builder builder=RepeatedField.newBuilder().setFieldDescriptor(fieldDescriptor).setActual(actualList).setExpected(expectedList);" is 141.,318
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "RepeatedField.PairResult pairResult=compareRepeatedFieldElementPair(actual`expected`shouldMaybeIgnore`fieldDescriptor`i`j`fieldScopeLogic);" is 139.,318
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(RepeatedField.PairResult.newBuilder().setResult(Result.IGNORED).setActual(actualList.get(i)).setActualFieldIndex(i).setFieldDescriptor(fieldDescriptor).build());" is 183.,318
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(compareRepeatedFieldElementPair(actualList.get(i)`null`shouldMaybeIgnore`fieldDescriptor`i`null`fieldScopeLogic));" is 136.,318
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(compareRepeatedFieldElementPair(null`expectedList.get(j)`shouldMaybeIgnore`fieldDescriptor`null`j`fieldScopeLogic));" is 138.,318
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Parameter List,The method has 5 parameters. ,387
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "RepeatedField.Builder builder=RepeatedField.newBuilder().setFieldDescriptor(fieldDescriptor).setActual(actualList).setExpected(expectedList);" is 141.,387
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "@NullableDecl RepeatedField.PairResult matchingResult=findMatchingPairResult(actualIndices`actualList`expectedIndex`expected`shouldMaybeIgnore`fieldDescriptor`fieldScopeLogic);" is 176.,387
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "matchingResult=findMatchingPairResult(actualNotInOrder`actualList`expectedIndex`expected`shouldMaybeIgnore`fieldDescriptor`fieldScopeLogic);" is 140.,387
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "builder.addPairResult(RepeatedField.PairResult.newBuilder().setResult(Result.REMOVED).setFieldDescriptor(fieldDescriptor).setExpected(expected).setExpectedFieldIndex(expectedIndex).build());" is 190.,387
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "builder.addPairResult(RepeatedField.PairResult.newBuilder().setResult(Result.IGNORED).setFieldDescriptor(fieldDescriptor).setActual(actualList.get(index)).setActualFieldIndex(index).build());" is 191.,387
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,findMatchingPairResult,Long Parameter List,The method has 7 parameters. ,478
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,findMatchingPairResult,Long Statement,The length of the statement "RepeatedField.PairResult pairResult=compareRepeatedFieldElementPair(actualValues.get(actualIndex)`expectedValue`shouldMaybeIgnore`fieldDescriptor`actualIndex`expectedIndex`fieldScopeLogic);" is 189.,478
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Parameter List,The method has 7 parameters. ,508
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Statement,The length of the statement "SingularField comparison=compareSingularValue(actual`expected`null`shouldMaybeIgnore`fieldDescriptor`"<no field path>"`fieldScopeLogic);" is 136.,508
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Statement,The length of the statement "RepeatedField.PairResult.Builder pairResultBuilder=RepeatedField.PairResult.newBuilder().setResult(comparison.result()).setFieldDescriptor(fieldDescriptor);" is 156.,508
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldByIndices,Long Parameter List,The method has 5 parameters. ,551
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldByIndices,Long Statement,The length of the statement "builder.add(compareSingularValue(actual`expected`null`shouldMaybeIgnore`fieldDescriptor`indexedName(fieldDescriptor`i)`fieldScopeLogic));" is 137.,551
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularValue,Long Parameter List,The method has 7 parameters. ,583
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularValue,Long Statement,The length of the statement "return compareSingularMessage((Message)actual`(Message)expected`(Message)defaultValue`shouldMaybeIgnore`fieldDescriptor`fieldName`fieldScopeLogic);" is 147.,583
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularMessage,Long Parameter List,The method has 7 parameters. ,619
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularMessage,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromFieldDescriptor(fieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 211.,619
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Parameter List,The method has 5 parameters. ,671
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromFieldDescriptor(fieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 211.,671
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffUnknowns,Long Statement,The length of the statement "builder.addAllSingularFields(fieldNumber`compareUnknownFieldList(actualValues`expectedValues`shouldIgnore.shouldMaybeIgnore()`unknownFieldDescriptor`fieldScopeLogic.subLogic(rootDescriptor`fieldDescriptorOrUnknown)));" is 217.,728
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldList,Long Parameter List,The method has 5 parameters. ,772
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldList,Long Statement,The length of the statement "builder.add(compareUnknownFieldValue(actual`expected`shouldMaybeIgnore`unknownFieldDescriptor`indexedName(unknownFieldDescriptor`i)`fieldScopeLogic));" is 150.,772
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldValue,Long Parameter List,The method has 6 parameters. ,796
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldValue,Long Statement,The length of the statement "return compareUnknownFieldSet((UnknownFieldSet)actual`(UnknownFieldSet)expected`shouldMaybeIgnore`unknownFieldDescriptor`fieldName`fieldScopeLogic);" is 148.,796
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldSet,Long Parameter List,The method has 6 parameters. ,817
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldSet,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromUnknown(unknownFieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 210.,817
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownPrimitive,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromUnknown(unknownFieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 210.,863
truth,com.google.common.truth.extensions.proto,DiffResult,childEntities,Long Statement,The length of the statement "ImmutableList.Builder<RecursableDiffEntity> builder=ImmutableList.builderWithExpectedSize(singularFields().size() + repeatedFields().size() + unknownFields().asSet().size());" is 174.,540
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubject,usingCorrespondence,Long Statement,The length of the statement "return comparingValuesUsing(config.withExpectedMessages(expectedValues).<M>toCorrespondence(FieldScopeUtil.getSingleDescriptor(actual().values())));" is 148.,465
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubject,valuesForKey,Long Statement,The length of the statement "Subject.Factory<IterableValuesForKey<M>`Iterable<M>> factory=iterableOfProtos("Values for key <" + key + "> (<"+ actual()+ ">) in "+ actualAsString());" is 151.,181
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubject,usingCorrespondence,Long Statement,The length of the statement "return comparingValuesUsing(config.withExpectedMessages(expectedValues).<M>toCorrespondence(FieldScopeUtil.getSingleDescriptor(actual().values())));" is 148.,512
truth,com.google.common.truth.extensions.proto,RecursableDiffEntity,isAnyChildMatched,Complex Conditional,The conditional expression (entity.isMatched() && !entity.isContentEmpty()) || entity.isAnyChildMatched() is complex.,64
truth,com.google.common.truth.extensions.proto,RecursableDiffEntity,isAnyChildIgnored,Complex Conditional,The conditional expression (entity.isIgnored() && !entity.isContentEmpty()) || entity.isAnyChildIgnored() is complex.,82
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringRepeatedFieldOrder,Long Statement,The length of the statement "return toBuilder().setIgnoreRepeatedFieldOrder(true).addUsingCorrespondenceString(".ignoringRepeatedFieldOrder()").build();" is 123.,118
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringExtraRepeatedFieldElements,Long Statement,The length of the statement "return toBuilder().setIgnoreExtraRepeatedFieldElements(true).addUsingCorrespondenceString(".ignoringExtraRepeatedFieldElements()").build();" is 139.,125
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingDoubleTolerance,Long Statement,The length of the statement "return toBuilder().setDoubleCorrespondence(Correspondence.tolerance(tolerance)).addUsingCorrespondenceString(".usingDoubleTolerance(" + tolerance + ")").build();" is 161.,132
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingFloatTolerance,Long Statement,The length of the statement "return toBuilder().setFloatCorrespondence(Correspondence.tolerance(tolerance)).addUsingCorrespondenceString(".usingFloatTolerance(" + tolerance + ")").build();" is 159.,139
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,comparingExpectedFieldsOnly,Long Statement,The length of the statement "return toBuilder().setCompareExpectedFieldsOnly(true).addUsingCorrespondenceString(".comparingExpectedFieldsOnly()").build();" is 125.,146
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,withPartialScope,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(FieldScopeLogic.and(fieldScopeLogic()`partialScope.logic())).addUsingCorrespondenceFieldScopeString(".withPartialScope(%s)"`partialScope).build();" is 184.,168
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFields,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(fieldScopeLogic().ignoringFields(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers).build();" is 171.,175
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(fieldScopeLogic().ignoringFieldDescriptors(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDescriptors(%s)"`fieldDescriptors).build();" is 203.,182
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldScope,Long Statement,The length of the statement "return toBuilder().setFieldScopeLogic(FieldScopeLogic.and(fieldScopeLogic()`FieldScopeLogic.not(fieldScope.logic()))).addUsingCorrespondenceFieldScopeString(".ignoringFieldScope(%s)"`fieldScope).build();" is 203.,190
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toCorrespondence,Long Statement,The length of the statement "return FluentEqualityConfig.this.toMessageDifferencer(actual.getDescriptorForType()).diffMessages(actual`expected).printToString(FluentEqualityConfig.this.reportMismatchesOnly());" is 179.,214
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toCorrespondence,Long Statement,The length of the statement "return "is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to";" is 123.,214
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,formatDiff,Long Statement,The length of the statement "return FluentEqualityConfig.this.toMessageDifferencer(actual.getDescriptorForType()).diffMessages(actual`expected).printToString(FluentEqualityConfig.this.reportMismatchesOnly());" is 179.,225
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toString,Long Statement,The length of the statement "return "is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to";" is 123.,237
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,create,Long Identifier,The length of the parameter usingCorrespondenceStringFunction is 33.,50
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(message)`Functions.constant(String.format("FieldScopes.fromSetFields({%s})"`message.toString())));" is 141.,65
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none()`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`messages.toString())));" is 125.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "checkArgument(optDescriptor.isPresent()`"Cannot create scope from messages with different descriptors: %s"`getDescriptors(messages));" is 133.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(aggregateMessage)`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`formatList(messages))));" is 150.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFields,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.ignoringFields(%s)"`fieldNumbers));" is 149.,103
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.ignoringFieldDescriptors(%s)"`join(fieldDescriptors))));" is 181.,109
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.allowingFields(%s)"`fieldNumbers));" is 150.,116
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.allowingFieldDescriptors(%s)"`join(fieldDescriptors))));" is 182.,122
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFields,Long Statement,The length of the statement "return create(logic().ignoringFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers));" is 129.,165
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFieldDescriptors,Long Statement,The length of the statement "return create(logic().ignoringFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDesciptors(%s)"`fieldDescriptors));" is 160.,178
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFields,Long Statement,The length of the statement "return create(logic().allowingFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".allowingFields(%s)"`fieldNumbers));" is 129.,191
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFieldDescriptors,Long Statement,The length of the statement "return create(logic().allowingFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".allowingFieldDescriptors(%s)"`fieldDescriptors));" is 161.,204
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,addUsingCorrespondenceFieldDescriptorsString,Long Statement,The length of the statement "return FieldScopeUtil.concat(usingCorrespondenceStringFunction()`Functions.constant(String.format(fmt`join(fieldDescriptors))));" is 128.,219
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "TestMessageLite2WithRequiredFields withoutRequiredFields=TestMessageLite2WithRequiredFields.newBuilder().setOptionalString("foo").buildPartial();" is 145.,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto2Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite2.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite2.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite2.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite2.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite2.newBuilder().buildPartial()).setMessageWithoutRequiredFields(withoutRequiredFields).build();" is 672.,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto3Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite3.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite3.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite3.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite3.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite3.newBuilder().buildPartial()).build();" is 617.,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`"Not true that \\(.*\\) proto is equal to the expected \\(.*\\) object\\.\\s*" + "They are not of the same class\\.");" is 132.,175
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that protos are different\\.\\s*Both are \\(%s\\) <.*optional_int: 3.*>\\."`Pattern.quote(config.nonEmptyMessage().getClass().getName())));" is 177.,175
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testHasAllRequiredFields_failures,Long Statement,The length of the statement "expectRegex(e`"Not true that <.*> has all required fields set\\.\\s*" + "\\(Lite runtime could not determine which fields were missing\\.\\)");" is 143.,212
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testDefaultInstance_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that \\(%s\\) <.*\\[empty proto\\].*> is not a default " + "proto instance\\.\\s*It has no set values\\."`Pattern.quote(config.defaultInstance().getClass().getName())));" is 207.,239
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,expectRegex,Long Statement,The length of the statement "expect.withMessage(String.format("Expected <%s> to match '%s'."`regex`e.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(e.getMessage()).matches()).isTrue();" is 174.,293
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,expectNoRegex,Long Statement,The length of the statement "expect.withMessage(String.format("Expected <%s> to match '%s'."`regex`e.getMessage())).that(Pattern.compile(regex`Pattern.DOTALL).matcher(e.getMessage()).matches()).isFalse();" is 175.,300
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,getTrimmedToString,Long Statement,The length of the statement "String objectToString=String.format("# %s@%s"`messageLite.getClass().getName()`Integer.toHexString(messageLite.hashCode()));" is 124.,71
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that (%s) %s is equal to the expected (%s) object. " + "They are not of the same class."`actual().getClass().getName()`internalCustomName() != null ? internalCustomName() + " (proto)" : "proto"`expected.getClass().getName());" is 254.,91
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualTo,Long Statement,The length of the statement "failWithRawMessage("Not true that protos are different. Both are (%s) <%s>."`actual().getClass().getName()`getTrimmedToString(actual()));" is 137.,136
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualToDefaultInstance,Long Statement,The length of the statement "failWithRawMessage("Not true that (%s) %s is not a default proto instance. It has no set values."`actual().getClass().getName()`actualAsString());" is 146.,169
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithRawMessage("Not true that %s has all required fields set. " + "(Lite runtime could not determine which fields were missing.)"`actualAsString());" is 152.,178
