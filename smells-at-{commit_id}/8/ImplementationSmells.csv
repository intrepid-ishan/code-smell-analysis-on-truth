Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
truth,com.google.common.truth,AutoValue_ActualValueInference_OpaqueEntry,hashCode,Magic Number,The method contains a magic number: 1000003,37
truth,com.google.common.truth,AutoValue_ActualValueInference_SubjectEntry,hashCode,Magic Number,The method contains a magic number: 1000003,50
truth,com.google.common.truth,AutoValue_ActualValueInference_SubjectEntry,hashCode,Magic Number,The method contains a magic number: 1000003,50
truth,com.google.common.truth,AutoValue_ActualValueInference_Invocation,toString,Long Statement,The length of the statement "return "Invocation{" + "receiver=" + receiver + "` "+ "actualValue="+ actualValue+ "` "+ "boxingInput="+ boxingInput+ "` "+ "name="+ name+ "}";" is 143.,52
truth,com.google.common.truth,AutoValue_ActualValueInference_Invocation,equals,Long Statement,The length of the statement "return (this.receiver == null ? that.receiver() == null : this.receiver.equals(that.receiver())) && (this.actualValue == null ? that.actualValue() == null : this.actualValue.equals(that.actualValue())) && (this.boxingInput == null ? that.boxingInput() == null : this.boxingInput.equals(that.boxingInput()))&& this.name.equals(that.name());" is 339.,62
truth,com.google.common.truth,AutoValue_ActualValueInference_Invocation,hashCode,Magic Number,The method contains a magic number: 1000003,77
truth,com.google.common.truth,AutoValue_ActualValueInference_Invocation,hashCode,Magic Number,The method contains a magic number: 1000003,77
truth,com.google.common.truth,AutoValue_ActualValueInference_Invocation,hashCode,Magic Number,The method contains a magic number: 1000003,77
truth,com.google.common.truth,AutoValue_ActualValueInference_Invocation,hashCode,Magic Number,The method contains a magic number: 1000003,77
truth,com.google.common.truth,AutoValue_ActualValueInference_FrameInfo,hashCode,Magic Number,The method contains a magic number: 1000003,59
truth,com.google.common.truth,AutoValue_ActualValueInference_FrameInfo,hashCode,Magic Number,The method contains a magic number: 1000003,59
truth,com.google.common.truth,AutoValue_ActualValueInference_DescribedEntry,hashCode,Magic Number,The method contains a magic number: 1000003,50
truth,com.google.common.truth,AutoValue_ActualValueInference_DescribedEntry,hashCode,Magic Number,The method contains a magic number: 1000003,50
truth,com.google.common.truth,AutoValue_ActualValueInference_InferredType,hashCode,Magic Number,The method contains a magic number: 1000003,37
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 2,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleEntries,Magic Number,The method contains a magic number: 3,102
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,112
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth,MapSubjectTest,containsExactlyDuplicateKeys,Magic Number,The method contains a magic number: 3,112
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Duplicate keys ([jan x 2` feb x 2]) cannot be passed to containsExactly().");" is 126.,126
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,126
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,126
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,126
truth,com.google.common.truth,MapSubjectTest,containsExactlyMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,126
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{feb=2` jan=1}>. " + "It has the following entries with unexpected keys: {march=3}");" is 210.,140
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Magic Number,The method contains a magic number: 3,140
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKey,Magic Number,The method contains a magic number: 2,140
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{feb=2` jan=1}>. " + "It has the following entries with unexpected keys: {march=3}");" is 210.,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Magic Number,The method contains a magic number: 3,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyInOrder,Magic Number,The method contains a magic number: 2,151
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> contains exactly <{jan=1` march=3` feb=2}>. " + "It is missing keys for the following entries: {march=3}");" is 205.,162
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Magic Number,The method contains a magic number: 2,162
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Magic Number,The method contains a magic number: 3,162
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKey,Magic Number,The method contains a magic number: 2,162
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{jan=1` march=33` feb=2}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 33 but got 3)}");" is 266.,173
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 2,173
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 3,173
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 33,173
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue,Magic Number,The method contains a magic number: 2,173
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValueWithNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly " + "<{jan=1` march=null` feb=2}>. It has the following entries with matching keys " + "but different values: {march=(expected null but got 3)}");" is 270.,185
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValueWithNull,Magic Number,The method contains a magic number: 2,185
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValueWithNull,Magic Number,The method contains a magic number: 3,185
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValueWithNull,Magic Number,The method contains a magic number: 2,185
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains exactly <{jan=1` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with unexpected keys: {march=3}");" is 263.,198
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey,Magic Number,The method contains a magic number: 3,198
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey,Magic Number,The method contains a magic number: 2,198
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly <{jan=1` march=33}>. " + "It has the following entries with unexpected keys: {feb=2} " + "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 323.,210
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Magic Number,The method contains a magic number: 3,210
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndWrongValue,Magic Number,The method contains a magic number: 33,210
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains exactly <{jan=1` march=33` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 318.,223
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 3,223
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 33,223
truth,com.google.common.truth,MapSubjectTest,containsExactlyMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains exactly <{march=33` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with unexpected keys: {jan=1} "+ "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 375.,236
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 3,236
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 33,236
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 2,236
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains exactly these entries in order " + "<{jan=1` march=3` feb=2}>");" is 180.,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 3,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyNotInOrder,Magic Number,The method contains a magic number: 2,250
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 167.,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 2,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 3,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 4,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 5,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyBadNumberOfArgs,Magic Number,The method contains a magic number: 6,265
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> contains exactly <{jan=1` feb=2}>. " + "It has the following entries with matching keys but different values: " + "{jan=(expected 1 (java.lang.Integer) but got 1 (java.lang.Long))` "+ "feb=(expected 2 (java.lang.Integer) but got 2 (java.lang.Long))}");" is 350.,286
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 2L,286
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 2,286
truth,com.google.common.truth,MapSubjectTest,containsExactlyWrongValue_sameToStringForKeys,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=jan` 1=feb}> contains exactly <{1=jan` 1=feb}>. " + "It has the following entries with matching keys but different values: " + "{1 (java.lang.Integer)=(expected jan but got feb)` "+ "1 (java.lang.Long)=(expected feb but got jan)}");" is 317.,299
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey_failsWithSameToStringForKeys,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=jan` 2=feb}> contains exactly <{1=jan` 2=feb}>. " + "It is missing keys for the following entries: {1 (java.lang.Integer)=jan} " + "and has the following entries with unexpected keys: {1 (java.lang.Long)=jan}");" is 296.,312
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey_failsWithSameToStringForKeys,Magic Number,The method contains a magic number: 2,312
truth,com.google.common.truth,MapSubjectTest,containsExactlyExtraKeyAndMissingKey_failsWithSameToStringForKeys,Magic Number,The method contains a magic number: 2,312
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 2,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 3,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 4,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 4,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 2,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 2,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 4,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 4,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleEntries,Magic Number,The method contains a magic number: 2,370
truth,com.google.common.truth,MapSubjectTest,containsAtLeastDuplicateKeys,Magic Number,The method contains a magic number: 2,380
truth,com.google.common.truth,MapSubjectTest,containsAtLeastDuplicateKeys,Magic Number,The method contains a magic number: 3,380
truth,com.google.common.truth,MapSubjectTest,containsAtLeastDuplicateKeys,Magic Number,The method contains a magic number: 2,380
truth,com.google.common.truth,MapSubjectTest,containsAtLeastDuplicateKeys,Magic Number,The method contains a magic number: 3,380
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleDuplicateKeys,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("Duplicate keys ([jan x 2` feb x 2]) cannot be passed to containsAtLeast().");" is 126.,394
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,394
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleDuplicateKeys,Magic Number,The method contains a magic number: 3,394
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,394
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMultipleDuplicateKeys,Magic Number,The method contains a magic number: 2,394
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMissingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> contains at least <{jan=1` march=3}>. " + "It is missing keys for the following entries: {march=3}");" is 199.,408
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMissingKey,Magic Number,The method contains a magic number: 2,408
truth,com.google.common.truth,MapSubjectTest,containsAtLeastMissingKey,Magic Number,The method contains a magic number: 3,408
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains at least <{jan=1` march=33}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 33 but got 3)}");" is 260.,419
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue,Magic Number,The method contains a magic number: 2,419
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue,Magic Number,The method contains a magic number: 3,419
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue,Magic Number,The method contains a magic number: 33,419
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValueWithNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains at least " + "<{jan=1` march=null}>. It has the following entries with matching keys " + "but different values: {march=(expected null but got 3)}");" is 264.,431
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValueWithNull,Magic Number,The method contains a magic number: 2,431
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValueWithNull,Magic Number,The method contains a magic number: 3,431
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKeyAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` march=3}> contains at least <{march=33` feb=2}>. " + "It is missing keys for the following entries: {feb=2} " + "and has the following entries with matching keys but different values: "+ "{march=(expected 33 but got 3)}");" is 312.,444
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 3,444
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 33,444
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKeyAndWrongValue,Magic Number,The method contains a magic number: 2,444
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> contains at least these entries in order " + "<{march=3` feb=2}>");" is 174.,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Magic Number,The method contains a magic number: 2,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Magic Number,The method contains a magic number: 3,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Magic Number,The method contains a magic number: 3,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Magic Number,The method contains a magic number: 2,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Magic Number,The method contains a magic number: 3,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastNotInOrder,Magic Number,The method contains a magic number: 2,457
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().isEqualTo("There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (13) must be even).");" is 167.,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 2,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 3,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 4,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 5,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 2,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 3,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 4,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 5,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastBadNumberOfArgs,Magic Number,The method contains a magic number: 6,470
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue_sameToStringForValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` mar=3}> contains at least <{jan=1` feb=2}>. " + "It has the following entries with matching keys but different values: " + "{jan=(expected 1 (java.lang.Integer) but got 1 (java.lang.Long))` "+ "feb=(expected 2 (java.lang.Integer) but got 2 (java.lang.Long))}");" is 358.,489
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 2L,489
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 3L,489
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue_sameToStringForValues,Magic Number,The method contains a magic number: 2,489
truth,com.google.common.truth,MapSubjectTest,containsAtLeastWrongValue_sameToStringForKeys,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=jan` 1=feb}> contains at least <{1=jan` 1=feb}>. " + "It has the following entries with matching keys but different values: " + "{1 (java.lang.Integer)=(expected jan but got feb)` "+ "1 (java.lang.Long)=(expected feb but got jan)}");" is 318.,502
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKey_failsWithSameToStringForKeys,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=jan` 2=feb}> contains at least <{1=jan` 2=feb}>. " + "It is missing keys for the following entries: {1 (java.lang.Integer)=jan}");" is 215.,515
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKey_failsWithSameToStringForKeys,Magic Number,The method contains a magic number: 2,515
truth,com.google.common.truth,MapSubjectTest,containsAtLeastExtraKeyAndMissingKey_failsWithSameToStringForKeys,Magic Number,The method contains a magic number: 2,515
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,526
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,526
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 2,526
truth,com.google.common.truth,MapSubjectTest,isEqualToPass,Magic Number,The method contains a magic number: 3,526
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` april=4` march=5}>. " + "It is missing keys for the following entries: {april=4} and " + "has the following entries with unexpected keys: {feb=2} and "+ "has the following entries with matching keys but different values: "+ "{march=(expected 5 but got 3)}");" is 386.,534
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 2,534
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 3,534
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 4,534
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraMissingAndDiffering,Magic Number,The method contains a magic number: 5,534
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=4}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 4 but got 3)}");" is 259.,550
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 3,550
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering,Magic Number,The method contains a magic number: 4,550
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2}>. " + "It has the following entries with unexpected keys: {march=3}");" is 205.,564
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,564
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 3,564
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtra,Magic Number,The method contains a magic number: 2,564
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2}> is equal to <{jan=1` feb=2` march=3}>. " + "It is missing keys for the following entries: {march=3}");" is 200.,577
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,577
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 2,577
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureMissing,Magic Number,The method contains a magic number: 3,577
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` mar=3}>. " + "It is missing keys for the following entries: {mar=3} " + "and has the following entries with unexpected keys: {march=3}");" is 272.,590
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,590
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,590
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 2,590
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureExtraAndMissing,Magic Number,The method contains a magic number: 3,590
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{jan=1` feb=2` march=3}> is equal to <{jan=1` feb=2` march=3}>. " + "It has the following entries with matching keys but different values: " + "{march=(expected 3 (java.lang.Integer) but got 3 (java.lang.Long))}");" is 296.,604
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 2,604
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 3L,604
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 2,604
truth,com.google.common.truth,MapSubjectTest,isEqualToFailureDiffering_sameToString,Magic Number,The method contains a magic number: 3,604
truth,com.google.common.truth,MapSubjectTest,isEqualToNonMap,Magic Number,The method contains a magic number: 2,619
truth,com.google.common.truth,MapSubjectTest,isEqualToNonMap,Magic Number,The method contains a magic number: 3,619
truth,com.google.common.truth,MapSubjectTest,isEqualToNotConsistentWithEquals_failure,Magic Number,The method contains a magic number: 2,639
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,660
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,660
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 2,660
truth,com.google.common.truth,MapSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 3,660
truth,com.google.common.truth,MapSubjectTest,isEmptyWithFailure,Magic Number,The method contains a magic number: 5,674
truth,com.google.common.truth,MapSubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,681
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,694
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,694
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,694
truth,com.google.common.truth,MapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,694
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,704
truth,com.google.common.truth,MapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,704
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"map was");" is 133.,739
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,739
truth,com.google.common.truth,MapSubjectTest,containsKey_failsWithNullStringAndNull,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"map was");" is 133.,755
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfKey,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=value1` 2=value2}> contains entry " + "<1=value1 (Map.Entry<java.lang.Integer` java.lang.String>)>. " + "However` it does contain keys <[1] (java.lang.Long)>.");" is 318.,823
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfKey,Magic Number,The method contains a magic number: 2L,823
truth,com.google.common.truth,MapSubjectTest,containsEntry_failsWithSameToStringOfValue,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=null}> contains entry <1=null " + "(Map.Entry<java.lang.Integer` null type>)>. However` it does contain values " + "<[null] (java.lang.String)>.");" is 304.,836
truth,com.google.common.truth,MapSubjectTest,containsNullEntryValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{null=null}> contains entry <kurt=null>. " + "However` the following keys are mapped to <null>: [null]");" is 187.,864
truth,com.google.common.truth,MapSubjectTest,containsNullEntryKey,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,879
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithValue,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,974
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithNullValuePresentExpected,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,987
truth,com.google.common.truth,MapSubjectTest,failMapContainsKeyWithPresentValueNullExpected,Long Identifier,The length of the field KEY_IS_PRESENT_WITH_DIFFERENT_VALUE is 35.,1001
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 456,1014
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 124.,1022
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <+456>");" is 233.,1022
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 123,1022
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`456);" is 124.,1036
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <456>. " + "However` the following keys are mapped to such values: <[def]>");" is 246.,1036
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 456,1036
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 124.,1050
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> contains an entry with " + "key <xyz> and a value that parses to <321>");" is 177.,1050
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,1050
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=35` def=71}> contains an entry with key <def> and a value that is " + "within 10 of <60>. However` it has a mapping from that key to <71> (diff: 11)");" is 238.,1063
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 35,1063
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 71,1063
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_diffExpectedKeyHasWrongValue,Magic Number,The method contains a magic number: 60,1063
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=35` def=null}> contains an entry with key <def> and a value that is " + "within 10 of <60>. However` it has a mapping from that key to <null>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 367.,1076
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception"`1).startsWith("formatDiff(null` 60) threw java.lang.NullPointerException");" is 123.,1076
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 35,1076
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 60,1076
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_expectedKeyHasWrongValue,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=one` 2=null}> contains an entry with key <2> and a value that equals " + "(ignoring case) <TWO>. However` it has a mapping from that key to <null>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 278.,1099
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_expectedKeyHasWrongValue,Magic Number,The method contains a magic number: 2,1099
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_expectedKeyHasWrongValue,Magic Number,The method contains a magic number: 2,1099
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_wrongKeyHasExpectedValue,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=null` 2=three}> contains an entry with key <3> and a value that equals " + "(ignoring case) <THREE>. However` the following keys are mapped to such values: " + "<[2]>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 298.,1119
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_wrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(null` THREE) threw java.lang.NullPointerException");" is 121.,1119
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_wrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 2,1119
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsEntry_handlesExceptions_wrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 3,1119
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,1142
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 456,1150
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,1158
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`456);" is 130.,1166
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=+123` def=+456}> does not contain an entry with " + "key <def> and a value that parses to <456>. It maps that key to <+456>");" is 213.,1166
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 456,1166
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing values"`"first exception"`"comparing contents by testing that no entry had the forbidden key and a value that " + "equals (ignoring case) the forbidden value"`"forbidden key"`"forbidden value"`"but was");" is 274.,1179
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException,Magic Number,The method contains a magic number: 2,1179
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException,Magic Number,The method contains a magic number: 2,1179
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 456,1204
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,1204
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`456).inOrder();" is 128.,1212
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,1212
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 456,1212
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456);" is 126.,1221
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456}>. It has the following entries with unexpected keys: {abc=123}");" is 309.,1221
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsExtraEntry,Magic Number,The method contains a magic number: 456,1221
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"xyz"`999`"abc"`123);" is 146.,1235
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` xyz=999` abc=123}>. It is missing keys for the following entries: "+ "{xyz=999}");" is 326.,1235
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 456,1235
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 999,1235
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsMissingEntry,Magic Number,The method contains a magic number: 123,1235
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"cab"`123);" is 136.,1250
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` cab=123}>. It is missing keys for the following entries: {cab=123} "+ "and has the following entries with unexpected keys: {abc=123}");" is 379.,1250
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 456,1250
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongKey,Magic Number,The method contains a magic number: 123,1250
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`321);" is 136.,1265
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=321}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 321 but got 123)}");" is 364.,1265
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 456,1265
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_failsWrongValue,Magic Number,The method contains a magic number: 321,1265
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=one` 2=null}> contains exactly one entry that has a key that is " + "equal to and a value that equals (ignoring case) the key and value of each entry of " + "<{1=ONE` 2=TWO}>. It has the following entries with matching keys but different "+ "values: {2=(expected TWO but got null)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 413.,1280
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_handlesExceptions,Magic Number,The method contains a magic number: 2,1280
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_handlesExceptions,Magic Number,The method contains a magic number: 2,1280
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123).inOrder();" is 146.,1300
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains` in order` exactly one entry that has" + " a key that is equal to and a value that parses to the key and value of each" + " entry of <{def=456` abc=123}>");" is 267.,1300
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,1300
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,1300
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123);" is 136.,1315
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=123}>. It has the following entries with matching keys but "+ "different values: {def=(expected 456 but got 456)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 408.,1315
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1315
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1315
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,1315
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`456`"abc"`123L);" is 137.,1333
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=123}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 123 but got 123)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 408.,1333
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,1333
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactly_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,1333
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 456,1351
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,1351
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 126.,1360
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1360
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 456,1360
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1370
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456}>. It has the following entries with unexpected keys: {abc=123}");" is 309.,1370
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsExtraEntry,Magic Number,The method contains a magic number: 456,1370
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1385
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` xyz=999` abc=123}>. It is missing keys for the following entries: "+ "{xyz=999}");" is 326.,1385
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,1385
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,1385
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,1385
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1401
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` cab=123}>. It is missing keys for the following entries: {cab=123} "+ "and has the following entries with unexpected keys: {abc=123}");" is 379.,1401
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,1401
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,1401
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1417
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=321}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 321 but got 123)}");" is 364.,1417
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,1417
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,1417
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=35` fed=60` ghi=101}> contains exactly one entry that has a key " + "that is equal to and a value that is within 10 of the key and value of each " + "entry of <{abc=30` def=60` ghi=90}>. It is missing keys for the following "+ "entries: {def=60} and has the following entries with unexpected keys: {fed=60} "+ "and has the following entries with matching keys but different values: "+ "{ghi=(expected 90 but got 101` diff: 11)}");" is 517.,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 30,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 60,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 90,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 35,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 60,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 101,1433
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=35` def=null` ghi=95}> contains exactly one entry that has a key that " + "is equal to and a value that is within 10 of the key and value of each entry of " + "<{abc=30` def=60` ghi=90}>. It has the following entries with matching keys but "+ "different values: {def=(expected 60 but got null)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 520.,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception"`1).startsWith("formatDiff(null` 60) threw java.lang.NullPointerException");" is 123.,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 30,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 60,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 90,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 35,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 95,1451
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1478
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains` in order` exactly one entry that has" + " a key that is equal to and a value that parses to the key and value of each" + " entry of <{def=456` abc=123}>");" is 267.,1478
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,1478
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,1478
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_failsEmpty,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1503
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1513
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=123` def=456}> contains exactly one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=123}>. It has the following entries with matching keys but "+ "different values: {def=(expected 456 but got 456)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 408.,1513
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1513
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 123,1513
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueTypeInActual,Magic Number,The method contains a magic number: 456,1513
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_success,Magic Number,The method contains a magic number: 456,1532
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_success,Magic Number,The method contains a magic number: 123,1532
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("abc"`123`"def"`456).inOrder();" is 128.,1540
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 123,1540
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 456,1540
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsMissingEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`456`"xyz"`999`"abc"`123);" is 146.,1549
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456` ghi=789}> contains at least one entry that has a " + "key that is equal to and a value that parses to the key and value of each entry " + "of <{def=456` xyz=999` abc=123}>. It is missing keys for the following entries: "+ "{xyz=999}");" is 336.,1549
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsMissingEntry,Magic Number,The method contains a magic number: 456,1549
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsMissingEntry,Magic Number,The method contains a magic number: 999,1549
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsMissingEntry,Magic Number,The method contains a magic number: 123,1549
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`456`"cab"`123);" is 136.,1564
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains at least one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` cab=123}>. It is missing keys for the following entries: {cab=123}");" is 314.,1564
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongKey,Magic Number,The method contains a magic number: 456,1564
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongKey,Magic Number,The method contains a magic number: 123,1564
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("abc"`321);" is 126.,1578
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains at least one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{abc=321}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 321 but got 123)}");" is 356.,1578
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_failsWrongValue,Magic Number,The method contains a magic number: 321,1578
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=one` 2=null` 3=three}> contains at least one entry that has a key that " + "is equal to and a value that equals (ignoring case) the key and value of each " + "entry of <{1=ONE` 2=TWO}>. It has the following entries with matching keys but "+ "different values: {2=(expected TWO but got null)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 423.,1593
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_handlesExceptions,Magic Number,The method contains a magic number: 2,1593
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_handlesExceptions,Magic Number,The method contains a magic number: 3,1593
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_handlesExceptions,Magic Number,The method contains a magic number: 2,1593
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`456`"abc"`123).inOrder();" is 146.,1614
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456` ghi=789}> contains` in order` at least one entry " + "that has a key that is equal to and a value that parses to the key and value of " + "each entry of <{def=456` abc=123}>");" is 277.,1614
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 456,1614
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,1614
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpectedActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`456);" is 126.,1629
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpectedActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=123` def=456}> contains at least one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456}>. It has the following entries with matching keys but "+ "different values: {def=(expected 456 but got 456)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 400.,1629
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpectedActual,Magic Number,The method contains a magic number: 456,1629
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpectedActual,Magic Number,The method contains a magic number: 456,1629
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInUnexpectedActual_success,Magic Number,The method contains a magic number: 456,1647
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInUnexpectedActual_success,Magic Number,The method contains a magic number: 123,1647
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpected,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`456`"abc"`123L);" is 137.,1655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpected,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=123` def=456` ghi=789}> contains at least one entry that has a key " + "that is equal to and a value that parses to the key and value of each entry of " + "<{def=456` abc=123}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 123 but got 123)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 418.,1655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 456,1655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueTypeInExpected,Magic Number,The method contains a magic number: 123L,1655
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_success,Magic Number,The method contains a magic number: 456,1673
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_success,Magic Number,The method contains a magic number: 123,1673
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected).inOrder();" is 126.,1682
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1682
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 789,1682
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsMissingEntry,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1692
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsMissingEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456` ghi=789}> contains at least one entry that has a " + "key that is equal to and a value that parses to the key and value of each entry " + "of <{def=456` xyz=999` abc=123}>. It is missing keys for the following entries: "+ "{xyz=999}");" is 336.,1692
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 456,1692
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 999,1692
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsMissingEntry,Magic Number,The method contains a magic number: 123,1692
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1708
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456}> contains at least one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456` cab=123}>. It is missing keys for the following entries: {cab=123}");" is 314.,1708
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 456,1708
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongKey,Magic Number,The method contains a magic number: 123,1708
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1723
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456` ghi=789}> contains at least one entry that has a " + "key that is equal to and a value that parses to the key and value of each entry " + "of <{def=456` abc=321}>. It has the following entries with matching keys but "+ "different values: {abc=(expected 321 but got 123)}");" is 374.,1723
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 456,1723
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_failsWrongValue,Magic Number,The method contains a magic number: 321,1723
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=35` fed=60` ghi=101}> contains at least one entry that has a key " + "that is equal to and a value that is within 10 of the key and value of each " + "entry of <{abc=30` def=60` ghi=90}>. It is missing keys for the following "+ "entries: {def=60} "+ "and has the following entries with matching keys but different values: "+ "{ghi=(expected 90 but got 101` diff: 11)}");" is 457.,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 30,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 60,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 90,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 35,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 60,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_diffMissingAndExtraAndWrongValue,Magic Number,The method contains a magic number: 101,1739
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=35` def=null` ghi=95}> contains at least one entry that has a key" + " that is equal to and a value that is within 10 of the key and value of each entry" + " of <{abc=30` def=60` ghi=90}>. It has the following entries with matching keys but"+ " different values: {def=(expected 60 but got null)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 521.,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception"`1).startsWith("formatDiff(null` 60) threw java.lang.NullPointerException");" is 123.,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 30,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 60,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 90,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 35,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 95,1757
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected).inOrder();" is 144.,1784
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=123` def=456` ghi=789}> contains` in order` at least one entry " + "that has a key that is equal to and a value that parses to the key and value of " + "each entry of <{ghi=789` abc=123}>");" is 277.,1784
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 789,1784
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 123,1784
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueTypeInExpectedActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1809
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueTypeInExpectedActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=123` def=456}> contains at least one entry that has a key that is " + "equal to and a value that parses to the key and value of each entry of " + "<{def=456}>. It has the following entries with matching keys but "+ "different values: {def=(expected 456 but got 456)}"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 400.,1809
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueTypeInExpectedActual,Magic Number,The method contains a magic number: 456,1809
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueTypeInExpectedActual,Magic Number,The method contains a magic number: 456,1809
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueTypeInUnexpectedActual_success,Magic Number,The method contains a magic number: 123,1828
truth,com.google.common.truth,MapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueTypeInUnexpectedActual_success,Magic Number,The method contains a magic number: 456,1828
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_simpleCase,Magic Number,The method contains a magic number: 2,35
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_loop,Long Statement,The length of the statement "assertWithMessage("test method name should only show up once with following omitted").that(expected.getMessage().split("testExpectTrace_loop")).hasLength(2);" is 157.,51
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_loop,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_loop,Magic Number,The method contains a magic number: 4,51
truth,com.google.common.truth,ExpectWithStackTest,verify,Long Statement,The length of the statement "assertWithMessage("test method name should only show up once with following omitted").that(expected.getMessage().split("testExpectTrace_loop")).hasLength(2);" is 157.,55
truth,com.google.common.truth,ExpectWithStackTest,verify,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_callerException,Magic Number,The method contains a magic number: 5,70
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_onlyCallerException,Long Statement,The length of the statement "assertWithMessage("Should throw exception as it is if only caller exception").that(expected.getStackTrace().length).isAtLeast(2);" is 129.,87
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_onlyCallerException,Magic Number,The method contains a magic number: 2,87
truth,com.google.common.truth,ExpectWithStackTest,testExpectTrace_onlyCallerException,Magic Number,The method contains a magic number: 5,87
truth,com.google.common.truth,ExpectWithStackTest,verify,Long Statement,The length of the statement "assertWithMessage("Should throw exception as it is if only caller exception").that(expected.getStackTrace().length).isAtLeast(2);" is 129.,91
truth,com.google.common.truth,ExpectWithStackTest,verify,Magic Number,The method contains a magic number: 2,91
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,ExpectFailureWithStackTraceTest,expectTwoFailures,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchStandardSubjectBuilderInstanceMethods,Long Statement,The length of the statement "ImmutableSet<TypeToken<?>> verbTypes=FluentIterable.from(asList(StandardSubjectBuilder.class.getMethods())).filter(new Predicate<Method>(){" is 139.,49
truth,com.google.common.truth,TruthAssertThatTest,staticAssertThatMethodsMatchStandardSubjectBuilderInstanceMethods,Long Statement,The length of the statement "ImmutableSet<TypeToken<?>> truthTypes=FluentIterable.from(asList(Truth.class.getMethods())).filter(new Predicate<Method>(){" is 123.,49
truth,com.google.common.truth,TruthFailureSubjectTest,factValueFailNoValue,Long Statement,The length of the statement "assertFailureKeys("expected to have a value"`"for key"`"but the key was present with no value"`HOW_TO_TEST_KEYS_WITHOUT_VALUES.key);" is 132.,85
truth,com.google.common.truth,TruthFailureSubjectTest,factValueIntFailNegative,Empty catch clause,The method has an empty catch block.,110
truth,com.google.common.truth,TruthFailureSubjectTest,factValueIntFailNotEnoughWithKey,Magic Number,The method contains a magic number: 5,133
truth,com.google.common.truth,TruthFailureSubjectTest,factValueIntFailNoValue,Long Statement,The length of the statement "assertFailureKeys("expected to have a value"`"for key"`"and index"`"but the key was present with no value"`HOW_TO_TEST_KEYS_WITHOUT_VALUES.key);" is 144.,142
truth,com.google.common.truth,CorrespondenceTest,testEquals_throws,Empty catch clause,The method has an empty catch block.,51
truth,com.google.common.truth,CorrespondenceTest,testHashCode_throws,Empty catch clause,The method has an empty catch block.,61
truth,com.google.common.truth,CorrespondenceTest,testFrom_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of("foot"`"barn"`"gallon")).comparingElementsUsing(STRING_PREFIX_EQUALITY).containsExactly("foot"`"barn");" is 153.,109
truth,com.google.common.truth,CorrespondenceTest,testFrom_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[foot` barn` gallon]> contains exactly one element that starts with " + "each element of <[foot` barn]>. It has unexpected elements <[gallon]>");" is 227.,109
truth,com.google.common.truth,CorrespondenceTest,testFrom_viaIterableSubjectContainsExactly_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(asList("foot"`"barn"`null)).comparingElementsUsing(STRING_PREFIX_EQUALITY).containsExactly("foot"`"barn");" is 139.,123
truth,com.google.common.truth,CorrespondenceTest,testFrom_viaIterableSubjectContainsExactly_null,Long Statement,The length of the statement "assertFailureKeys("Not true that <[foot` barn` null]> contains exactly one element that starts with each " + "element of <[foot` barn]>. It has unexpected elements <[null]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 269.,123
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_compare,Magic Number,The method contains a magic number: 3,175
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_compare,Magic Number,The method contains a magic number: 4,175
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_compare,Magic Number,The method contains a magic number: 4,175
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_compare_nullTransformedValues,Magic Number,The method contains a magic number: 7,182
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_compare_nullActualValue,Empty catch clause,The method has an empty catch block.,189
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_compare_nullActualValue,Magic Number,The method contains a magic number: 7,189
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_formatDiff,Magic Number,The method contains a magic number: 4,198
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_success,Magic Number,The method contains a magic number: 4,208
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_success,Magic Number,The method contains a magic number: 5,208
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_success,Magic Number,The method contains a magic number: 7,208
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of("feet"`"barns"`"gallons")).comparingElementsUsing(LENGTHS).containsExactly(4`5);" is 130.,216
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[feet` barns` gallons]> contains exactly one element that has a length " + "of each element of <[4` 5]>. It has unexpected elements <[gallons]>");" is 228.,216
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_failure,Magic Number,The method contains a magic number: 4,216
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_failure,Magic Number,The method contains a magic number: 5,216
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_nullActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <[feet` barns` null]> contains exactly one element that has a length of " + "each element of <[4` 5]>. It has unexpected elements <[null]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 268.,230
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_nullActual,Magic Number,The method contains a magic number: 4,230
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_nullActual,Magic Number,The method contains a magic number: 5,230
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_nullTransformed,Long Statement,The length of the statement "assertThat(ImmutableList.of("mailing-list"`"chat-room"`"forum")).comparingElementsUsing(HYPHEN_INDEXES).containsExactly(7`4`null).inOrder();" is 140.,247
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_nullTransformed,Magic Number,The method contains a magic number: 7,247
truth,com.google.common.truth,CorrespondenceTest,testTransforming_actual_viaIterableSubjectContainsExactly_nullTransformed,Magic Number,The method contains a magic number: 4,247
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_compare_nullInputValues,Empty catch clause,The method has an empty catch block.,303
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_compare_nullInputValues,Empty catch clause,The method has an empty catch block.,303
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_success,Long Statement,The length of the statement "assertThat(ImmutableList.of("mailing-list"`"chat-room"`"web-app")).comparingElementsUsing(HYPHENS_MATCH_COLONS).containsExactly("abcdefg:hij"`"abcd:efghij"`"abc:defghij").inOrder();" is 181.,328
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of("mailing-list"`"chat-room"`"web-app")).comparingElementsUsing(HYPHENS_MATCH_COLONS).containsExactly("abcdefg:hij"`"abcd:efghij");" is 179.,336
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[mailing-list` chat-room` web-app]> contains exactly one element that " + "has a hyphen at the same index as the colon in each element of " + "<[abcdefg:hij` abcd:efghij]>. It has unexpected elements <[web-app]>");" is 296.,336
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullActual,Long Statement,The length of the statement "expectFailure.whenTesting().that(asList("mailing-list"`"chat-room"`null)).comparingElementsUsing(HYPHENS_MATCH_COLONS).containsExactly("abcdefg:hij"`"abcd:efghij");" is 164.,351
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <[mailing-list` chat-room` null]> contains exactly one element that has a " + "hyphen at the same index as the colon in each element of " + "<[abcdefg:hij` abcd:efghij]>. It has unexpected elements <[null]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 336.,351
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullActual,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(null` abcdefg:hij) threw java.lang.NullPointerException");" is 127.,351
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullExpected,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of("mailing-list"`"chat-room")).comparingElementsUsing(HYPHENS_MATCH_COLONS).containsExactly("abcdefg:hij"`"abcd:efghij"`null);" is 174.,369
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullExpected,Long Statement,The length of the statement "assertFailureKeys("Not true that <[mailing-list` chat-room]> contains exactly one element that has a hyphen " + "at the same index as the colon in each element of " + "<[abcdefg:hij` abcd:efghij` null]>. It is missing an element that has a hyphen at "+ "the same index as the colon in <null>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 388.,369
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullExpected,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(mailing-list` null) threw java.lang.NullPointerException");" is 128.,369
truth,com.google.common.truth,CorrespondenceTest,testTransforming_both_viaIterableSubjectContainsExactly_nullTransformed,Long Statement,The length of the statement "assertThat(ImmutableList.of("mailing-list"`"chat-room"`"forum")).comparingElementsUsing(HYPHENS_MATCH_COLONS).containsExactly("abcdefg:hij"`"abcd:efghij"`"abcde-fghij").inOrder();" is 179.,388
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 0.00001,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1.00001,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 3.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1003.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 2.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doubles,Magic Number,The method contains a magic number: 1000.0,401
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 0.00001,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1.00001,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 3.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1003.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 2.0f,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_floats,Magic Number,The method contains a magic number: 1000.0,416
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 0.00001,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1.00001,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 3,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1000.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 2.0,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_doublesVsInts,Magic Number,The method contains a magic number: 1003,431
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 0.05,440
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_negativeTolerance,Magic Number,The method contains a magic number: 2.0,440
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,450
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Empty catch clause,The method has an empty catch block.,450
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,450
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 0.05,450
truth,com.google.common.truth,CorrespondenceTest,testTolerance_compare_null,Magic Number,The method contains a magic number: 2.0,450
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 1.02,464
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.04,464
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 3.08,464
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 0.05,464
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_success,Magic Number,The method contains a magic number: 2.0,464
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of(1.02`2.04`3.08)).comparingElementsUsing(tolerance(0.05)).contains(3.01);" is 122.,471
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1.02` 2.04` 3.08]> contains at least one element that " + "is a finite number within 0.05 of <3.01>");" is 185.,471
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 1.02,471
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 2.04,471
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.08,471
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 0.05,471
truth,com.google.common.truth,CorrespondenceTest,testTolerance_viaIterableSubjectContains_failure,Magic Number,The method contains a magic number: 3.01,471
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_compare,Magic Number,The method contains a magic number: 3,508
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_compare,Magic Number,The method contains a magic number: 4,508
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_compare,Magic Number,The method contains a magic number: 4,508
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_formatDiff,Magic Number,The method contains a magic number: 4,516
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_formatDiff,Magic Number,The method contains a magic number: 3,516
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(ImmutableList.of("feet"`"gallons")).comparingElementsUsing(LENGTHS_WITH_DIFF).containsExactly(4`5);" is 132.,528
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[feet` gallons]> contains exactly one element that has a length of " + "each element of <[4` 5]>. It is missing an element that has a length of <5> " + "and has unexpected elements <[gallons (diff: 2)]>");" is 287.,528
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_failure,Magic Number,The method contains a magic number: 4,528
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_failure,Magic Number,The method contains a magic number: 5,528
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_nullActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <[feet` null]> contains exactly one element that has a length of each " + "element of <[4` 5]>. It is missing an element that has a length of <5> " + "and has unexpected elements <[null]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 409.,543
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_nullActual,Long Statement,The length of the statement "assertThatFailure().factValue("first exception"`1).startsWith("formatDiff(null` 5) threw java.lang.NullPointerException");" is 122.,543
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_nullActual,Magic Number,The method contains a magic number: 4,543
truth,com.google.common.truth,CorrespondenceTest,testFormattingDiffsUsing_viaIterableSubjectContainsExactly_nullActual,Magic Number,The method contains a magic number: 5,543
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,describeAsMainCause_empty,Empty catch clause,The method has an empty catch block.,50
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,describeAsMainCause_notEmpty,Long Statement,The length of the statement "assertExpectedFacts(exceptions.describeAsMainCause().asIterable()`"one or more exceptions were thrown while comparing elements");" is 129.,60
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,describeAsAdditionalInfo_notEmpty,Long Statement,The length of the statement "assertExpectedFacts(exceptions.describeAsAdditionalInfo().asIterable()`"additionally` one or more exceptions were thrown while comparing elements");" is 148.,75
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,addCompareException,Magic Number,The method contains a magic number: 123,84
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,addCompareException,Magic Number,The method contains a magic number: 123,84
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,assertExpectedFacts,Long Statement,The length of the statement "assertThat(second.value).matches("compare\\(null` 123\\) threw java.lang.NullPointerException" + "\\s+" + "at com\\.google\\.common\\.truth\\.TestCorrespondences"+ "(.|\\n)*"+ "\\n---");" is 186.,93
truth,com.google.common.truth,CorrespondenceExceptionStoreTest,assertExpectedFacts,Magic Number,The method contains a magic number: 2,93
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,contains_success,Magic Number,The method contains a magic number: 456,57
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[not a number` +123` +456` +789]> contains at least one element that" + " parses to <2345>");" is 175.,65
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,contains_failure,Magic Number,The method contains a magic number: 2345,65
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,contains_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[abc` null` ghi]> contains at least one element that " + "equals (ignoring case) <DEF>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 217.,80
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,contains_handlesExceptions_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that at least one element equals (ignoring case) " + "the expected value"`"expected to contain"`"but was");" is 236.,100
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(4`400)`Record.create(2`189)`Record.createWithoutId(999));" is 159.,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).contains(expected);" is 157.,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` 2/189` none/999]> contains at least one element " + "that has the same id as and a score is within 10 of <2/200>. It did contain the " + "following elements with the correct key: "+ "<[2/211 (diff: score:11)` 2/189 (diff: score:-11)]>");" is 341.,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 200,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 100,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 211,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 4,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 400,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 189,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains,Magic Number,The method contains a magic number: 999,124
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).contains(expected);" is 157.,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/100` null` 4/400]> contains at least one element that has the same id " + "as and a score is within 10 of <0/999>"`"additionally` one or more exceptions were thrown while keying elements for pairing"`"first exception");" is 256.,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("actualKeyFunction.apply(null) threw java.lang.NullPointerException");" is 130.,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 999,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 100,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 4,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 400,149
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).contains(null);" is 153.,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/100` 2/200` 4/400]> contains at least one element that has the same id " + "as and a score is within 10 of <null>"`"additionally` one or more exceptions were thrown while keying elements for pairing"`"first exception");" is 256.,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("expectedKeyFunction.apply(null) threw java.lang.NullPointerException");" is 132.,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 100,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 2,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 200,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 4,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 400,169
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(NULL_SAFE_RECORD_ID).contains(expected);" is 167.,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/100` null` 4/400]> contains at least one element that has the same id " + "as and a score is within 10 of <0/999>. It did contain the following elements with " + "the correct key: <[null]>"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 320.,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("formatDiff(null` 0/999) threw java.lang.NullPointerException");" is 124.,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 999,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 100,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 4,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_contains_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 400,189
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <[valid` 123]> contains at least one element that parses to <456>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 195.,218
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,wrongTypeInActual,Magic Number,The method contains a magic number: 123,218
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,wrongTypeInActual,Magic Number,The method contains a magic number: 456,218
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,doesNotContain_success,Magic Number,The method contains a magic number: 2345,235
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,doesNotContains_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContain(456);" is 125.,243
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,doesNotContains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("<[not a number` +123` +456` +789]> should not have contained an element that " + "parses to <456>. It contained the following such elements: <[+456]>");" is 219.,243
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,doesNotContains_failure,Magic Number,The method contains a magic number: 456,243
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,doesNotContain_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("<[abc` null` ghi]> should not have contained an element that " + "equals (ignoring case) <GHI>. It contained the following such elements: <[ghi]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 261.,258
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,doesNotContain_handlesExceptions_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that no element equals (ignoring case) the forbidden value"`"expected not to contain"`"but was");" is 226.,278
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,301
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,301
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,301
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,301
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,301
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,311
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,311
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,311
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,311
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,336
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,336
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,336
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,336
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,336
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,336
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,354
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 248.,354
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,354
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,354
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,354
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,354
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_passesWhenBothEmpty,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 129.,372
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExpectedIsEmpty,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,382
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,394
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +64` 0x40` 0x40]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 267.,394
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,394
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,394
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,394
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,394
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,412
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 242.,412
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,412
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,412
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,412
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,412
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,430
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 242.,430
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 64,430
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,430
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 256,430
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraCandidates,Magic Number,The method contains a magic number: 128,430
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,448
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` +256` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It has unexpected elements <[cheese]>");" is 248.,448
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 64,448
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,448
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 256,448
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsOrderedExtraCandidates,Magic Number,The method contains a magic number: 128,448
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,466
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` jalapenos` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[jalapenos` cheese]>");" is 309.,466
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 64,466
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,466
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 256,466
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraCandidates,Magic Number,The method contains a magic number: 128,466
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraNull,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,486
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraNull,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x80` null]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256> "+ "and has unexpected elements <[null]>");" is 289.,486
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraNull,Magic Number,The method contains a magic number: 64,486
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraNull,Magic Number,The method contains a magic number: 128,486
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraNull,Magic Number,The method contains a magic number: 256,486
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraNull,Magic Number,The method contains a magic number: 128,486
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsNullMissingAndExtra,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,506
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsNullMissingAndExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x80` cheese]> contains exactly one element that " + "parses to each element of <[64` 128` null` 128]>. " + "It is missing an element that parses to <null> "+ "and has unexpected elements <[cheese]>");" is 295.,506
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsNullMissingAndExtra,Magic Number,The method contains a magic number: 64,506
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsNullMissingAndExtra,Magic Number,The method contains a magic number: 128,506
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsNullMissingAndExtra,Magic Number,The method contains a magic number: 128,506
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_handlesExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(CASE_INSENSITIVE_EQUALITY).containsExactlyElementsIn(expected);" is 127.,526
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[null` xyz` abc` def]> contains exactly one element that " + "equals (ignoring case) each element of <[ABC` DEF` GHI` JKL]>. " + "It is missing an element that equals (ignoring case) each of <[GHI` JKL]>"+ " and has unexpected elements <[null` xyz]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 380.,526
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_handlesExceptions_alwaysFails,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(CASE_INSENSITIVE_EQUALITY_HALF_NULL_SAFE).containsExactlyElementsIn(expected);" is 142.,549
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_handlesExceptions_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that each element equals (ignoring case) an expected value"`"expected"`"but was");" is 211.,549
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[101` 65` 35` 190]> contains exactly one element that is within 10 of " + "each element of <[30` 60` 90]>. It is missing an element that is within 10 of " + "<90> and has unexpected elements <[101 (diff: 11)` 190 (diff: 100)]>");" is 311.,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 30,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 60,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 90,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 101,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 65,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 35,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingSomeExtraCandidate,Magic Number,The method contains a magic number: 190,574
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(900));" is 140.,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(4`400)`Record.createWithoutId(999));" is 138.,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/900]>. It is missing an element that corresponds to "+ "<2/200> and has unexpected elements <[2/211 (diff: score:11)]> with key 2` and "+ "is missing an element that corresponds to each of <[3/300` none/900]> and has "+ "unexpected elements <[4/400` none/999]> without matching keys");" is 535.,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 100,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 2,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 200,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 3,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 300,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 900,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 100,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 2,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 211,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 4,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 400,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_1arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 999,591
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(900));" is 140.,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(PARSED_RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(PARSED_RECORD_ID`RECORD_ID).containsExactlyElementsIn(expected);" is 198.,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` none/999]> contains exactly one element that " + "parses to a record that has the same id as and a score is within 10 of each " + "element of <[1/100` 2/200` 3/300` none/900]>. It is missing an element that "+ "corresponds to <2/200> and has unexpected elements <[2/211 (diff: score:11)]> "+ "with key 2` and is missing an element that corresponds to each of "+ "<[3/300` none/900]> and has unexpected elements <[4/400` none/999]> without "+ "matching keys");" is 563.,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 100,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 2,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 200,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 3,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 300,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_2arg_containsExactlyElementsIn,Magic Number,The method contains a magic number: 900,622
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(999));" is 140.,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(3`303)`Record.createWithoutId(999));" is 138.,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 3/303` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/999]>. It is missing an element that corresponds to "+ "<2/200> and has unexpected elements <[2/211 (diff: score:11)]> with key 2");" is 382.,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 100,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 200,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 300,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 999,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 100,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 2,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 211,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 3,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 303,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_onlyKeyed,Magic Number,The method contains a magic number: 999,649
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(900));" is 140.,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`201)`Record.create(4`400)`Record.createWithoutId(999));" is 138.,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/201` 4/400` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/900]>. It is missing an element that corresponds "+ "to each of <[3/300` none/900]> and has unexpected elements "+ "<[4/400` none/999]> without matching keys");" is 410.,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 100,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 200,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 3,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 300,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 900,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 100,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 2,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 201,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 4,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 400,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noKeyed,Magic Number,The method contains a magic number: 999,678
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(999));" is 140.,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(3`303)`Record.createWithoutId(999));" is 138.,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10_NO_DIFF).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 182.,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 3/303` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` none/999]>. It is missing an element that corresponds to "+ "<2/200> and has unexpected elements <[2/211]> with key 2");" is 365.,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 100,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 2,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 200,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 3,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 300,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 999,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 100,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 2,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 211,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 3,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 303,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_noDiffs,Magic Number,The method contains a magic number: 999,708
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(tolerance(0.1)).displayingDiffsPairedBy(identity()).containsExactlyElementsIn(expected);" is 130.,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.1,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.2,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.05,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 1.15,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 0.95,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_passing,Magic Number,The method contains a magic number: 0.1,737
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.create(3`301)`Record.createWithoutId(900));" is 161.,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`100)`Record.create(2`211)`Record.create(4`400)`Record.createWithoutId(999));" is 138.,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/100` 2/211` 4/400` none/999]> contains exactly one element that has " + "the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 3/300` 3/301` none/900]>. It is missing an element that has the "+ "same id as and a score is within 10 of each of <[2/200` 3/300` 3/301` none/900]>"+ " and has unexpected elements <[2/211` 4/400` none/999]>. (N.B. A key function "+ "which does not uniquely key the expected elements was provided and has "+ "consequently been ignored.)");" is 577.,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 100,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 2,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 200,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 3,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 300,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 3,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 301,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 900,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 100,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 2,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 211,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 4,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 400,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_notUnique,Magic Number,The method contains a magic number: 999,752
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/101` 2/211` null]> contains exactly one element that has the same id " + "as and a score is within 10 of each element of <[1/100` 2/200` 4/400]>. It is " + "missing an element that corresponds to <2/200> and has unexpected elements "+ "<[2/211 (diff: score:11)]> with key 2` and is missing an element that corresponds "+ "to <4/400> and has unexpected elements <[null]> without matching keys"`"additionally` one or more exceptions were thrown while keying elements for pairing"`"first exception");" is 534.,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("actualKeyFunction.apply(null) threw java.lang.NullPointerException");" is 130.,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 100,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 2,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 200,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 4,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 400,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 101,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 2,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesActualKeyerExceptions,Magic Number,The method contains a magic number: 211,787
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsExactlyElementsIn(expected);" is 174.,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/101` 2/211` 4/400]> contains exactly one element that has the same id " + "as and a score is within 10 of each element of <[1/100` 2/200` null]>. It is " + "missing an element that corresponds to <2/200> and has unexpected elements "+ "<[2/211 (diff: score:11)]> with key 2` and is missing an element that corresponds "+ "to <null> and has unexpected elements <[4/400]> without matching keys"`"additionally` one or more exceptions were thrown while keying elements for pairing"`"first exception");" is 534.,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("expectedKeyFunction.apply(null) threw java.lang.NullPointerException");" is 132.,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 100,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 2,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 200,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 101,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 2,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 211,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 4,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesExpectedKeyerExceptions,Magic Number,The method contains a magic number: 400,811
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(NULL_SAFE_RECORD_ID).containsExactlyElementsIn(expected);" is 184.,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/101` 2/211` null]> contains exactly one element that has the same id as " + "and a score is within 10 of each element of <[1/100` 2/200` 0/999]>. It is missing " + "an element that corresponds to <2/200> and has unexpected elements "+ "<[2/211 (diff: score:11)]> with key 2` and is missing an element that corresponds "+ "to <0/999> and has unexpected elements <[null]> with key 0"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 512.,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("formatDiff(null` 0/999) threw java.lang.NullPointerException");" is 124.,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 100,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 2,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 200,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 999,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 101,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 2,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsExactlyElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 211,835
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,859
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128>");" is 549.,859
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,859
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,859
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,859
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,859
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x80` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it has unexpected elements ";" is 496.,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 64,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 256,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsExtraElementInOneToOne,Magic Number,The method contains a magic number: 128,880
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,901
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[25` 55` 65]> contains exactly one element that is within 10 of " + "each element of <[30` 30` 60]>. It contains at least one element that matches each " + "expected element` and every element it contains matches at least one expected "+ "element` but there was no 1:1 mapping between all the actual and expected elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` it is "+ "missing an element that is within 10 of <30> and has unexpected elements ";" is 530.,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[55 (diff: 25)]>"`expectedPreamble + "<[65 (diff: 35)]>");" is 143.,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 30,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 30,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 60,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 25,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 55,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_diffOneMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 65,923
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected).inOrder();" is 151.,944
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element parses to an expected value"`"expected"`"but was");" is 156.,944
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,944
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,944
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,944
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,944
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_null,Magic Number,The method contains a magic number: 128,962
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyElementsIn(expected);" is 141.,971
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactlyElementsIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+64` +128` 0x40` 0x80]> contains exactly one element that " + "parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 248.,971
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128).inOrder();" is 125.,993
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,993
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,993
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_inOrder_success,Magic Number,The method contains a magic number: 256,993
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,993
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 64,1002
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1002
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 256,1002
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_successOutOfOrder,Magic Number,The method contains a magic number: 128,1002
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly(64`128`256`128);" is 137.,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "String expectedPreamble="Not true that <[+128` +64` +256` 0x40]> contains exactly one element that parses " + "to each element of <[64` 128` 256` 128]>. It contains at least one element " + "that matches each expected element` and every element it contains matches at "+ "least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one "+ "such mapping` if there is a tie)` it is missing an element that parses to "+ "<128> and has unexpected elements ";" is 541.,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[0x40]>"`expectedPreamble + "<[+64]>");" is 124.,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 64,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 256,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_failsMissingAndExtraInOneToOne,Magic Number,The method contains a magic number: 128,1010
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_nullValueInArray,Magic Number,The method contains a magic number: 128,1031
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsExactly_nullArray,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly((Integer[])null).inOrder();" is 126.,1039
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected).inOrder();" is 129.,1049
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn,Magic Number,The method contains a magic number: 64,1049
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn,Magic Number,The method contains a magic number: 128,1049
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn,Magic Number,The method contains a magic number: 256,1049
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn,Magic Number,The method contains a magic number: 128,1049
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected).inOrder();" is 129.,1060
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_success,Magic Number,The method contains a magic number: 64,1060
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1060
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_success,Magic Number,The method contains a magic number: 256,1060
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_success,Magic Number,The method contains a magic number: 128,1060
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 64,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 256,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successOutOfOrder,Magic Number,The method contains a magic number: 128,1071
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.1,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.2,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.05,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 1.15,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.95,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 99.999,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_successNonGreedy,Magic Number,The method contains a magic number: 0.1,1097
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected);" is 141.,1115
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 267.,1115
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 64,1115
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1115
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 256,1115
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingOneCandidate,Magic Number,The method contains a magic number: 128,1115
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_handlesExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(CASE_INSENSITIVE_EQUALITY).containsAtLeastElementsIn(expected);" is 127.,1134
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[null` xyz` abc` ghi]> contains at least one element that " + "equals (ignoring case) each element of <[ABC` DEF` GHI]>. " + "It is missing an element that equals (ignoring case) <DEF>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 315.,1134
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_handlesExceptions_alwaysFails,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(CASE_INSENSITIVE_EQUALITY_HALF_NULL_SAFE).containsAtLeastElementsIn(expected);" is 142.,1156
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_handlesExceptions_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that each element equals (ignoring case) an expected value"`"expected"`"but was");" is 211.,1156
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(1`101)`Record.create(2`211)`Record.create(2`222)`Record.create(3`303)`Record.createWithoutId(888));" is 159.,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAtLeastElementsIn(expected);" is 174.,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/101` 2/211` 2/222` 3/303` none/888]> contains at least one element " + "that has the same id as and a score is within 10 of each element of " + "<[1/100` 2/200` none/999]>. It is missing an element that corresponds to "+ "<2/200> (but did have elements <[2/211 (diff: score:11)` "+ "2/222 (diff: score:22)]> with matching key 2)` and is missing an element that "+ "corresponds to <none/999> (without matching keys)");" is 502.,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 100,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 2,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 200,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 999,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 101,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 2,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 211,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 2,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 222,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 3,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 303,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn,Magic Number,The method contains a magic number: 888,1181
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(2`201)`Record.createWithoutId(999));" is 140.,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAtLeastElementsIn(expected);" is 174.,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[1/101` 3/303` none/999]> contains at least one element that has the " + "same id as and a score is within 10 of each element of " + "<[1/100` 2/200` 2/201` none/999]>. It is missing an element that has the same "+ "id as and a score is within 10 of each of <[2/200` 2/201]>. (N.B. A key "+ "function which does not uniquely key the expected elements was provided and has "+ "consequently been ignored.)");" is 488.,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 100,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 2,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 200,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 2,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 201,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 999,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 101,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 3,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 303,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_notUnique,Magic Number,The method contains a magic number: 999,1209
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(NULL_SAFE_RECORD_ID).containsAtLeastElementsIn(expected);" is 184.,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[1/101` 2/211` 3/303` null]> contains at least one element that has the " + "same id as and a score is within 10 of each element of <[1/100` 2/200` 0/999]>. " + "It is missing an element that corresponds to <2/200> (but did have elements "+ "<[2/211 (diff: score:11)]> with matching key 2)` and is missing an element that "+ "corresponds to <0/999> (but did have elements <[null]> with matching key 0)"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 530.,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("formatDiff(null` 0/999) threw java.lang.NullPointerException");" is 124.,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 100,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 2,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 200,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 999,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 101,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 2,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 211,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 3,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingElementsPairedBy_containsAtLeastElementsIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 303,1236
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected);" is 141.,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMultipleMissingCandidates,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +64` fi` fo` 0x40` 0x40` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to each of <[128` 256` 128]>");" is 286.,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 64,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 256,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMultipleMissingCandidates,Magic Number,The method contains a magic number: 128,1261
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected);" is 141.,1280
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsOrderedMissingOneCandidate,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` fi` fo` +128` +256` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 512]>. " + "It is missing an element that parses to <512>");" is 261.,1280
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 64,1280
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 128,1280
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 256,1280
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsOrderedMissingOneCandidate,Magic Number,The method contains a magic number: 512,1280
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected);" is 141.,1299
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 522.,1299
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1299
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1299
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1299
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1299
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected).inOrder();" is 151.,1320
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_failsOutOfOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"comparing contents by testing that each element parses to an expected value"`"expected order for required elements"`"but was");" is 202.,1320
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 64,1320
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1320
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 256,1320
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_inOrder_failsOutOfOrder,Magic Number,The method contains a magic number: 128,1320
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_null,Magic Number,The method contains a magic number: 128,1339
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastElementsIn(expected);" is 141.,1348
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeastElementsIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +64` +128` fi` fo` 0x40` 0x80` fum]> contains at least one " + "element that parses to each element of <[64` 128` 256` 128]>. " + "It is missing an element that parses to <256>");" is 267.,1348
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast(64`128`256`128).inOrder();" is 125.,1371
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast,Magic Number,The method contains a magic number: 64,1371
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast,Magic Number,The method contains a magic number: 128,1371
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast,Magic Number,The method contains a magic number: 256,1371
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast,Magic Number,The method contains a magic number: 128,1371
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast(64`128`256`128).inOrder();" is 125.,1381
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 64,1381
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 128,1381
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 256,1381
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 128,1381
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_successOutOfOrder,Magic Number,The method contains a magic number: 64,1391
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_successOutOfOrder,Magic Number,The method contains a magic number: 128,1391
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_successOutOfOrder,Magic Number,The method contains a magic number: 256,1391
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_successOutOfOrder,Magic Number,The method contains a magic number: 128,1391
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_failsMissingElementInOneToOne,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast(64`128`256`128);" is 137.,1400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_failsMissingElementInOneToOne,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[fee` +128` fi` fo` +64` +256` fum]> contains at least one element " + "that parses to each element of <[64` 128` 256` 128]>. It contains at least " + "one element that matches each expected element` but there was no 1:1 mapping "+ "between all the expected elements and any subset of the actual elements. "+ "Using the most complete 1:1 mapping (or one such mapping` if there is a tie)` "+ "it is missing an element that parses to <128>");" is 522.,1400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 64,1400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 256,1400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_failsMissingElementInOneToOne,Magic Number,The method contains a magic number: 128,1400
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAtLeast_nullValueInArray,Magic Number,The method contains a magic number: 128,1420
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_success,Magic Number,The method contains a magic number: 255,1428
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_success,Magic Number,The method contains a magic number: 256,1428
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_success,Magic Number,The method contains a magic number: 257,1428
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyOf(255`256`257);" is 132.,1436
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any of <[255` 256` 257]>");" is 221.,1436
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_failure,Magic Number,The method contains a magic number: 255,1436
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_failure,Magic Number,The method contains a magic number: 256,1436
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_failure,Magic Number,The method contains a magic number: 257,1436
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_null,Magic Number,The method contains a magic number: 255,1452
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_null,Magic Number,The method contains a magic number: 257,1452
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[abc` null` ghi]> contains at least one element that " + "equals (ignoring case) any of <[DEF` FED]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 231.,1460
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyOf_handlesExceptions_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that at least one element equals (ignoring case) " + "any expected value"`"expected to contain any of"`"but was");" is 243.,1480
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_success,Magic Number,The method contains a magic number: 255,1504
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_success,Magic Number,The method contains a magic number: 256,1504
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_success,Magic Number,The method contains a magic number: 257,1504
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyIn(expected);" is 129.,1513
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains at least one element that parses to any element in " + "<[255` 256` 257]>");" is 234.,1513
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_failure,Magic Number,The method contains a magic number: 255,1513
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_failure,Magic Number,The method contains a magic number: 256,1513
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_failure,Magic Number,The method contains a magic number: 257,1513
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(3`300)`Record.createWithoutId(999));" is 140.,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "ImmutableList<Record> actual=ImmutableList.of(Record.create(3`311)`Record.create(2`211)`Record.create(2`222)`Record.create(4`404)`Record.createWithoutId(888));" is 159.,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAnyIn(expected);" is 162.,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3/311` 2/211` 2/222` 4/404` none/888]> contains at least one element " + "that has the same id as and a score is within 10 of any element in " + "<[1/100` 2/200` 3/300` none/999]>. It contains the following values that match "+ "by key: with key 2` would have accepted 2/200` but got "+ "[2/211 (diff: score:11)` 2/222 (diff: score:22)]; with key 3` would have "+ "accepted 3/300` but got [3/311 (diff: score:11)]");" is 499.,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 100,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 2,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 200,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 3,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 300,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 999,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 3,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 311,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 2,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 211,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 2,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 222,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 4,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 404,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withKeyMatches,Magic Number,The method contains a magic number: 888,1531
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAnyIn(expected);" is 162.,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3/300` 4/411` none/888]> contains at least one element that has the " + "same id as and a score is within 10 of any element in " + "<[1/100` 2/200` none/999]>. It does not contain any matches by key` either");" is 292.,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 100,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 2,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 200,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 999,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 3,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 300,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 4,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 411,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_withoutKeyMatches,Magic Number,The method contains a magic number: 888,1563
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Long Statement,The length of the statement "ImmutableList<Record> expected=ImmutableList.of(Record.create(1`100)`Record.create(2`200)`Record.create(2`250)`Record.createWithoutId(999));" is 140.,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(RECORD_ID).containsAnyIn(expected);" is 162.,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[3/300` 2/211` none/888]> contains at least one element that has the " + "same id as and a score is within 10 of any element in " + "<[1/100` 2/200` 2/250` none/999]>. (N.B. A key function which does not uniquely "+ "key the expected elements was provided and has consequently been ignored.)");" is 376.,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 100,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 2,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 200,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 2,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 250,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 999,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 3,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 300,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 2,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 211,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_notUnique,Magic Number,The method contains a magic number: 888,1583
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(RECORDS_EQUAL_WITH_SCORE_TOLERANCE_10).displayingDiffsPairedBy(NULL_SAFE_RECORD_ID).containsAnyIn(expected);" is 172.,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[3/311` 4/404` null]> contains at least one element that has the same id " + "as and a score is within 10 of any element in <[1/100` 2/200` 0/999]>. It contains " + "the following values that match by key: with key 0` would have accepted 0/999` but "+ "got [null]"`"additionally` one or more exceptions were thrown while formatting diffs"`"first exception");" is 392.,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("formatDiff(null` 0/999) threw java.lang.NullPointerException");" is 124.,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 100,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 2,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 200,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 999,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 3,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 311,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 4,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,displayingDiffsPairedBy_containsAnyIn_handlesFormatDiffExceptions,Magic Number,The method contains a magic number: 404,1608
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_null,Magic Number,The method contains a magic number: 255,1631
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_null,Magic Number,The method contains a magic number: 257,1631
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAnyIn(expected);" is 129.,1640
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsAnyIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> " + "contains at least one element that parses to any element in " + "<[511` 512` 513]>");" is 197.,1640
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_success,Magic Number,The method contains a magic number: 255,1662
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_success,Magic Number,The method contains a magic number: 256,1662
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_success,Magic Number,The method contains a magic number: 257,1662
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(255`256`257);" is 133.,1671
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[255` 256` 257]>. It contains <[+256 which corresponds to 256]>");" is 221.,1671
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_failure,Magic Number,The method contains a magic number: 255,1671
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_failure,Magic Number,The method contains a magic number: 256,1671
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_failure,Magic Number,The method contains a magic number: 257,1671
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_multipleFailures,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(64`128);" is 128.,1686
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_multipleFailures,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to any of " + "<[64` 128]>. It contains <[[+64` 0x40] which all correspond to 64` " + "+128 which corresponds to 128]>");" is 260.,1686
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_multipleFailures,Magic Number,The method contains a magic number: 64,1686
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_multipleFailures,Magic Number,The method contains a magic number: 128,1686
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneOf(255`null`257);" is 134.,1702
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_null,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` null` 0x40]> contains no element that parses to any of " + "<[255` null` 257]>. It contains <[null which corresponds to null]>");" is 223.,1702
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_null,Magic Number,The method contains a magic number: 255,1702
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_null,Magic Number,The method contains a magic number: 257,1702
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_handlesExceptions,Long Statement,The length of the statement "assertFailureKeys("Not true that <[abc` null` ghi]> contains no element that " + "equals (ignoring case) any of <[GHI` XYZ]>. " + "It contains <[ghi which corresponds to GHI]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 272.,1717
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneOf_handlesExceptions_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that no element equals (ignoring case) any forbidden value"`"expected not to contain any of"`"but was");" is 233.,1738
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_success,Magic Number,The method contains a magic number: 255,1761
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_success,Magic Number,The method contains a magic number: 256,1761
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_success,Magic Number,The method contains a magic number: 257,1761
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_failure,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1771
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` +256` 0x40]> contains no element that parses to " + "any element in <[255` 256` 257]>. It contains " + "<[+256 which corresponds to 256]>");" is 234.,1771
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_failure,Magic Number,The method contains a magic number: 255,1771
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_failure,Magic Number,The method contains a magic number: 256,1771
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_failure,Magic Number,The method contains a magic number: 257,1771
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_null,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1788
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_null,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` null` 0x40]> contains no element that parses to " + "any element in <[255` null` 257]>. It contains " + "<[null which corresponds to null]>");" is 236.,1788
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_null,Magic Number,The method contains a magic number: 255,1788
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_null,Magic Number,The method contains a magic number: 257,1788
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_array,Long Statement,The length of the statement "expectFailure.whenTesting().that(actual).comparingElementsUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsNoneIn(excluded);" is 130.,1805
truth,com.google.common.truth,IterableSubjectCorrespondenceTest,containsNoneIn_array,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <[+128` +64` This is not the string you're looking for` 0x40]> " + "contains no element that parses to any element in <[127` 128` 129]>. " + "It contains <[+128 which corresponds to 128]>");" is 271.,1805
truth,com.google.common.truth,StringSubjectTest,hasLength,Magic Number,The method contains a magic number: 4,37
truth,com.google.common.truth,StringSubjectTest,hasLengthFails,Magic Number,The method contains a magic number: 5,47
truth,com.google.common.truth,StringSubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,53
truth,com.google.common.truth,TestCorrespondences,apply,Magic Number,The method contains a magic number: 10,75
truth,com.google.common.truth,TestCorrespondences,recordsAreCloseEnough,Magic Number,The method contains a magic number: 10,288
truth,com.google.common.truth,TestCorrespondences,formatRecordDiff,Complex Conditional,The conditional expression actual.hasId() && expected.hasId() && actual.getId() == expected.getId() is complex.,299
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2d,58
truth,com.google.common.truth,SubjectTest,nullPointerTester,Magic Number,The method contains a magic number: 2f,58
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Complex Conditional,The conditional expression Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1 is complex.,89
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Empty catch clause,The method has an empty catch block.,89
truth,com.google.common.truth,SubjectTest,allAssertThatOverloadsAcceptNull,Long Statement,The length of the statement "if (Modifier.isPublic(method.getModifiers()) && method.getName().equals("assertThat") && method.getParameterTypes().length == 1) {" is 130.,89
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,165
truth,com.google.common.truth,SubjectTest,toStringsAreIdentical,Magic Number,The method contains a magic number: 5,165
truth,com.google.common.truth,SubjectTest,isSameInstanceAsFailureWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,216
truth,com.google.common.truth,SubjectTest,isSameInstanceAsFailureWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,216
truth,com.google.common.truth,SubjectTest,isNotSameInstanceAsWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,277
truth,com.google.common.truth,SubjectTest,isNotSameInstanceAsWithComparableObjects_nonString,Magic Number,The method contains a magic number: 42,277
truth,com.google.common.truth,SubjectTest,isInstanceOfSuperclass,Magic Number,The method contains a magic number: 3,488
truth,com.google.common.truth,SubjectTest,isInstanceOfImplementedInterface,Empty catch clause,The method has an empty catch block.,493
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedClass,Magic Number,The method contains a magic number: 4.5,507
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedInterface,Empty catch clause,The method has an empty catch block.,516
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 4.5,516
truth,com.google.common.truth,SubjectTest,isInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 4.5,516
truth,com.google.common.truth,SubjectTest,isNotInstanceOfUnrelatedInterface,Empty catch clause,The method has an empty catch block.,547
truth,com.google.common.truth,SubjectTest,isNotInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 5,547
truth,com.google.common.truth,SubjectTest,isNotInstanceOfUnrelatedInterface,Magic Number,The method contains a magic number: 5,547
truth,com.google.common.truth,SubjectTest,isNotInstanceOfExactType,Magic Number,The method contains a magic number: 5,561
truth,com.google.common.truth,SubjectTest,isNotInstanceOfSuperclass,Magic Number,The method contains a magic number: 5,568
truth,com.google.common.truth,SubjectTest,isNotInstanceOfImplementedInterface,Empty catch clause,The method has an empty catch block.,573
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,708
truth,com.google.common.truth,SubjectTest,equalsThrowsUSOE,Magic Number,The method contains a magic number: 5,708
truth,com.google.common.truth,SubjectTest,hashCodeThrowsUSOE,Magic Number,The method contains a magic number: 5,722
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 2,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,43
truth,com.google.common.truth,CustomFailureMessageTest,countPlaceholders,Magic Number,The method contains a magic number: 3,43
truth,com.google.common.truth,CustomFailureMessageTest,extraPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,71
truth,com.google.common.truth,CustomFailureMessageTest,missingPlaceholderThrowsIae,Empty catch clause,The method has an empty catch block.,80
truth,com.google.common.truth,CustomFailureMessageTest,noPlaceholdersWithArgsThrowsIae,Empty catch clause,The method has an empty catch block.,89
truth,com.google.common.truth,StackTraceCleanerTest,realWorld,Magic Number,The method contains a magic number: 3,45
truth,com.google.common.truth,StackTraceCleanerTest,realWorld,Magic Number,The method contains a magic number: 4,45
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"org.junit.Bar"`"com.google.testing.junit.Car"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Gar");" is 213.,69
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createCollapsedStackTraceElement("Testing framework"`5)`createStackTraceElement("com.example.Gar")});" is 219.,69
truth,com.google.common.truth,StackTraceCleanerTest,collapseStreaks,Magic Number,The method contains a magic number: 5,69
truth,com.google.common.truth,StackTraceCleanerTest,assertionsActuallyUseCleaner,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.MyTest"`"junit.Foo"`"com.example.Helper"`"org.junit.Bar"`"com.example.Helper"`"com.google.testing.junit.Car"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Gar");" is 255.,106
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createStackTraceElement("junit.Foo")`createStackTraceElement("com.example.Helper")`createStackTraceElement("org.junit.Bar")`createStackTraceElement("com.example.Helper")`createCollapsedStackTraceElement("Testing framework"`3)`createStackTraceElement("com.example.Gar")});" is 389.,106
truth,com.google.common.truth,StackTraceCleanerTest,dontCollapseStreaksOfOneFrame,Magic Number,The method contains a magic number: 3,106
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.IterableSubject"`"com.google.common.truth.MapSubject"`"com.example.MyTest"`"junit.Foo"`"org.junit.Bar"`"java.lang.reflect.Car"`"sun.reflect.Dar"`"com.google.testing.testsize.Dar"`"com.google.testing.util.Far"`"com.example.Jar");" is 303.,135
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.MyTest")`createCollapsedStackTraceElement("Testing framework"`2)`createCollapsedStackTraceElement("Reflective call"`2)`createCollapsedStackTraceElement("Testing framework"`2)`createStackTraceElement("com.example.Jar")});" is 329.,135
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth,StackTraceCleanerTest,mixedStreaks,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth,StackTraceCleanerTest,classNestedInSubject,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.IterableSubject$UsingCorrespondence"`"com.example.MyTest");" is 134.,163
truth,com.google.common.truth,StackTraceCleanerTest,removesTestingAndReflectiveFramesOnBottom,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.example.Foo"`"com.example.Bar"`"sun.reflect.Car"`"org.junit.Dar"`"java.lang.reflect.Far"`"junit.Gar"`"com.google.testing.junit.Har"`"java.lang.reflect.Jar"`"java.lang.reflect.JarJar"`"com.google.testing.junit.Kar");" is 270.,178
truth,com.google.common.truth,StackTraceCleanerTest,removesTestingAndReflectiveFramesOnBottom,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.example.Foo")`createStackTraceElement("com.example.Bar")});" is 160.,178
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.testing.util.ShouldStrip1"`"com.google.testing.util.ShouldStrip2"`"com.google.testing.util.ShouldNotStripTest");" is 174.,203
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createCollapsedStackTraceElement("Testing framework"`2)`createStackTraceElement("com.google.testing.util.ShouldNotStripTest")});" is 200.,203
truth,com.google.common.truth,StackTraceCleanerTest,packagesAreIgnoredForTestClasses,Magic Number,The method contains a magic number: 2,203
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveStandardSubjectBuilderCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.random.Package"`"com.google.common.base.collection.ImmutableMap"`"com.google.common.truth.StandardSubjectBuilder"`"com.google.example.SomeClass");" is 208.,221
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveStandardSubjectBuilderCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeClass")});" is 130.,221
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveSubjectCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.random.Package"`"com.google.common.base.collection.ImmutableMap"`"com.google.common.truth.StringSubject"`"com.google.example.SomeClass");" is 199.,239
truth,com.google.common.truth,StackTraceCleanerTest,allFramesAboveSubjectCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeClass")});" is 130.,239
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitStatementCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.StringSubject"`"com.google.example.SomeTest"`SomeStatement.class.getName()`"com.google.example.SomeClass");" is 182.,257
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitStatementCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeTest")});" is 129.,257
truth,com.google.common.truth,StackTraceCleanerTest,failureFromJUnitInfrastructureIncludesItInStack,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.StringSubject"`SomeStatement.class.getName()`"com.google.example.SomeClass");" is 152.,275
truth,com.google.common.truth,StackTraceCleanerTest,failureFromJUnitInfrastructureIncludesItInStack,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement(SomeStatement.class.getName())`createStackTraceElement("com.google.example.SomeClass")});" is 185.,275
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitRunnerCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.common.truth.StringSubject"`"com.google.example.SomeTest"`SomeRunner.class.getName()`"com.google.example.SomeClass");" is 179.,293
truth,com.google.common.truth,StackTraceCleanerTest,allFramesBelowJUnitRunnerCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.example.SomeTest")});" is 129.,293
truth,com.google.common.truth,StackTraceCleanerTest,truthFrameWithOutSubject_shouldNotCleaned,Long Statement,The length of the statement "Throwable throwable=createThrowableWithStackTrace("com.google.random.Package"`"com.google.common.truth.FailureMetadata"`"com.google.example.SomeClass");" is 152.,315
truth,com.google.common.truth,StackTraceCleanerTest,truthFrameWithOutSubject_shouldNotCleaned,Long Statement,The length of the statement "assertThat(throwable.getStackTrace()).isEqualTo(new StackTraceElement[]{createStackTraceElement("com.google.random.Package")`createStackTraceElement("com.google.common.truth.FailureMetadata")`createStackTraceElement("com.google.example.SomeClass")});" is 250.,315
truth,com.google.common.truth,StackTraceCleanerTest,createCollapsedStackTraceElement,Long Statement,The length of the statement "return new StackTraceElement("[[" + frameworkName + ": "+ collapsed+ " frames collapsed ("+ StackTraceCleaner.CLEANER_LINK+ ")]]"`""`""`0);" is 139.,441
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Empty catch clause,The method has an empty catch block.,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,testNulls,Magic Number,The method contains a magic number: 6,38
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 5,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 4,67
truth,com.google.common.truth,ComparableSubjectTest,isInRange,Magic Number,The method contains a magic number: 6,67
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 5,78
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 6,78
truth,com.google.common.truth,ComparableSubjectTest,isNotInRange,Magic Number,The method contains a magic number: 4,78
truth,com.google.common.truth,ComparableSubjectTest,isEquivalentAccordingToCompareTo,Long Statement,The length of the statement "expectFailureWhenTestingThat(new StringComparedByLength("abc")).isEquivalentAccordingToCompareTo(new StringComparedByLength("abcd"));" is 133.,89
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 5,117
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,117
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,117
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsEqual,Magic Number,The method contains a magic number: 4,117
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsSmaller,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth,ComparableSubjectTest,isGreaterThan_failsSmaller,Magic Number,The method contains a magic number: 4,125
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,131
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 5,131
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,131
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsEqual,Magic Number,The method contains a magic number: 4,131
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsGreater,Magic Number,The method contains a magic number: 4,139
truth,com.google.common.truth,ComparableSubjectTest,isLessThan_failsGreater,Magic Number,The method contains a magic number: 3,139
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,145
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,145
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 5,145
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 6,145
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 4,145
truth,com.google.common.truth,ComparableSubjectTest,isAtMost,Magic Number,The method contains a magic number: 3,145
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 3,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 4,154
truth,com.google.common.truth,ComparableSubjectTest,isAtLeast,Magic Number,The method contains a magic number: 5,154
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 2L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 4L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 3L,165
truth,com.google.common.truth,ComparableSubjectTest,longs,Magic Number,The method contains a magic number: 5L,165
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,195
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,195
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 3,195
truth,com.google.common.truth,ComparableSubjectTest,comparableType,Magic Number,The method contains a magic number: 4,195
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 2,201
truth,com.google.common.truth,ComparableSubjectTest,namedComparableType,Magic Number,The method contains a magic number: 3,201
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 3,219
truth,com.google.common.truth,ComparableSubjectTest,rawComparableType,Magic Number,The method contains a magic number: 4,219
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,35
truth,com.google.common.truth,MultisetSubjectTest,hasCount,Magic Number,The method contains a magic number: 2,35
truth,com.google.common.truth,MultisetSubjectTest,hasCountFail,Magic Number,The method contains a magic number: 3,45
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 100,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 100,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 20,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStart,Magic Number,The method contains a magic number: 20,50
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 100,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 100,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 20,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEnd,Magic Number,The method contains a magic number: 20,59
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Long Statement,The length of the statement "runFormatTest(repeat("b"`100) + "aa" + repeat("t"`7)`repeat("b"`100) + "oo" + repeat("t"`7)`"…" + repeat("b"`20) + "aattttttt"`"…" + repeat("b"`20) + "oottttttt");" is 163.,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 100,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 7,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 100,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 7,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 20,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapStartAlsoSmallAtEnd,Magic Number,The method contains a magic number: 20,68
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Long Statement,The length of the statement "runFormatTest(repeat("a"`7) + "ba" + repeat("r"`100)`repeat("a"`7) + "fu" + repeat("r"`100)`"aaaaaaaba" + repeat("r"`20) + "…"`"aaaaaaafu" + repeat("r"`20) + "…");" is 163.,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 7,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 100,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 7,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 100,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 20,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapEndAlsoSmallAtStart,Magic Number,The method contains a magic number: 20,77
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Long Statement,The length of the statement "runFormatTest(repeat("r"`60) + "a" + repeat("g"`60)`repeat("r"`60) + "u" + repeat("g"`60)`"…" + repeat("r"`20) + "a"+ repeat("g"`20)+ "…"`"…" + repeat("r"`20) + "u"+ repeat("g"`20)+ "…");" is 187.,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 60,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBoth,Magic Number,The method contains a magic number: 20,86
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Long Statement,The length of the statement "runFormatTest(repeat("r"`60) + "aaaaa" + repeat("g"`60)`repeat("r"`60) + "u" + repeat("g"`60)`"…" + repeat("r"`20) + "aaaaa"+ repeat("g"`20)+ "…"`"…" + repeat("r"`20) + "u"+ repeat("g"`20)+ "…");" is 195.,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 60,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatLongOverlapBothDifferentLength,Magic Number,The method contains a magic number: 20,95
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Long Statement,The length of the statement "runFormatTest(repeat("a"`40) + "lmnopqrstuv" + repeat("a"`40)`repeat("a"`40) + "lmnopqrstuvlmnopqrstuv" + repeat("a"`40)`"…aaaaaaaaalmnopqrstuvaaaaaaaaa…"`"…aaaaaaaaalmnopqrstuvlmnopqrstuvaaaaaaaaa…");" is 201.,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,104
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 100,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 102,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 20,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,prefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 22,113
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Long Statement,The length of the statement "runFormatTest(repeat("b"`100) + "\uD8AB\uDCAB" + repeat("b"`19)+ "aa"`repeat("b"`100) + "\uD8AB\uDCAB" + repeat("b"`19)+ "oo"`"…\uD8AB\uDCAB" + repeat("b"`19) + "aa"`"…\uD8AB\uDCAB" + repeat("b"`19) + "oo");" is 207.,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 100,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 100,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateStart,Magic Number,The method contains a magic number: 19,118
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Long Statement,The length of the statement "runFormatTest("ba" + repeat("r"`19) + "\uD8AB\uDCAB"+ repeat("r"`100)`"fu" + repeat("r"`19) + "\uD8AB\uDCAB"+ repeat("r"`100)`"ba" + repeat("r"`19) + "\uD8AB\uDCAB…"`"fu" + repeat("r"`19) + "\uD8AB\uDCAB…");" is 207.,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 100,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 100,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatNoSplitSurrogateEnd,Magic Number,The method contains a magic number: 19,127
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitStart,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "b"`repeat("a\n"`100) + "c"`Joiner.on('\n').join("@@ -98`4 +98`4 @@"`" a"`" a"`" a"`"-b"`"+c"));" is 130.,136
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitStart,Magic Number,The method contains a magic number: 100,136
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitStart,Magic Number,The method contains a magic number: 100,136
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitEnd,Long Statement,The length of the statement "runFormatTest("a" + repeat("\nz"`100)`"b" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -1`4 +1`4 @@"`"-a"`"+b"`" z"`" z"`" z"));" is 128.,145
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitEnd,Magic Number,The method contains a magic number: 100,145
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitEnd,Magic Number,The method contains a magic number: 100,145
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "m" + repeat("\nz"`100)`repeat("a\n"`100) + "n" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -98`7 +98`7 @@"`" a"`" a"`" a"`"-m"`"+n"`" z"`" z"`" z"));" is 185.,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBoth,Magic Number,The method contains a magic number: 100,154
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "m\nn\no\np" + repeat("\nz"`100)`repeat("a\n"`100) + "q\nr\ns\nt" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -98`10 +98`10 @@"`" a"`" a"`" a"`"-m"`"-n"`"-o"`"-p"`"+q"`"+r"`"+s"`"+t"`" z"`" z"`" z"));" is 235.,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLines,Magic Number,The method contains a magic number: 100,163
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`100) + "m\nn\no\np" + repeat("\nz"`100)`repeat("a\n"`100) + "q\nr\ns\nt\nu\nv" + repeat("\nz"`100)`Joiner.on('\n').join("@@ -98`10 +98`12 @@"`" a"`" a"`" a"`"-m"`"-n"`"-o"`"-p"`"+q"`"+r"`"+s"`"+t"`"+u"`"+v"`" z"`" z"`" z"));" is 251.,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffOmitBothMultipleDifferingLinesDifferentLength,Magic Number,The method contains a magic number: 100,188
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`40) + "l\nm\nn\no\np\n" + repeat("a\n"`40)`repeat("a\n"`40) + "l\nm\nn\no\np\nl\nm\nn\no\np\n" + repeat("a\n"`40)`Joiner.on('\n').join("@@ -43`6 +43`11 @@"`" n"`" o"`" p"`"+l"`"+m"`"+n"`"+o"`"+p"`" a"`" a"`" a"));" is 240.,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapSimple,Magic Number,The method contains a magic number: 40,215
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 80,237
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffPrefixAndSuffixWouldOverlapAllSame,Magic Number,The method contains a magic number: 82,237
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptNewlineStyle,Magic Number,The method contains a magic number: 10,250
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptNewlineStyle,Magic Number,The method contains a magic number: 10,250
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptTrailingNewline,Long Statement,The length of the statement "runFormatTest(repeat("a\n"`19) + "a"`repeat("a\n"`19) + "a\n"`Joiner.on('\n').join("@@ -18`3 +18`4 @@"`" a"`" a"`" a"`"+"));" is 124.,259
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptTrailingNewline,Magic Number,The method contains a magic number: 19,259
truth,com.google.common.truth,ComparisonFailureWithFactsTest,formatDiffSameExceptTrailingNewline,Magic Number,The method contains a magic number: 19,259
truth,com.google.common.truth,ComparisonFailureWithFactsTest,testSerialization_ComparisonFailureWithFacts,Long Statement,The length of the statement "ComparisonFailureWithFacts original=ComparisonFailureWithFacts.create(messages`headFacts`tailFacts`expected`actual`cause);" is 122.,268
truth,com.google.common.truth,ComparisonFailureWithFactsTest,testSerialization_ComparisonFailureWithFacts,Magic Number,The method contains a magic number: 3,268
truth,com.google.common.truth,ComparisonFailureWithFactsTest,runFormatTest,Magic Number,The method contains a magic number: 2,320
truth,com.google.common.truth,ActualValueInferenceTest,otherValueOfOverloads,Magic Number,The method contains a magic number: 16,84
truth,com.google.common.truth,ActualValueInferenceTest,multipleOnOneLine,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth,ActualValueInferenceTest,multipleOnOneLine,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth,ActualValueInferenceTest,boringNames,Magic Number,The method contains a magic number: 2,138
truth,com.google.common.truth,ActualValueInferenceTest,oneTwoThree,Magic Number,The method contains a magic number: 2,199
truth,com.google.common.truth,ActualValueInferenceTest,oneTwoThree,Magic Number,The method contains a magic number: 3,199
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 10,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_bigDecimal,Magic Number,The method contains a magic number: 3,46
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 10,56
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_int,Magic Number,The method contains a magic number: 3,56
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 10L,65
truth,com.google.common.truth,BigDecimalSubjectTest,isEqualToIgnoringScale_long,Magic Number,The method contains a magic number: 3L,65
truth,com.google.common.truth,FloatSubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 1.23f,59
truth,com.google.common.truth,FloatSubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 1.23f,59
truth,com.google.common.truth,FloatSubjectTest,j2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23f,76
truth,com.google.common.truth,FloatSubjectTest,j2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23,76
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0f,85
truth,com.google.common.truth,FloatSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0f,85
truth,com.google.common.truth,FloatSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,99
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0f,118
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0f,118
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,132
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001f,146
truth,com.google.common.truth,FloatSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0f,206
truth,com.google.common.truth,FloatSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0f,222
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,238
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001f,251
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,313
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001f,338
truth,com.google.common.truth,FloatSubjectTest,assertThatIsEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,372
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,383
truth,com.google.common.truth,FloatSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,383
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNotEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,394
truth,com.google.common.truth,FloatSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23f,405
truth,com.google.common.truth,FloatSubjectTest,assertThatIsZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,416
truth,com.google.common.truth,FloatSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23f,428
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNonZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,439
truth,com.google.common.truth,FloatSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23f,451
truth,com.google.common.truth,FloatSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,460
truth,com.google.common.truth,FloatSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23f,471
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,480
truth,com.google.common.truth,FloatSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23f,491
truth,com.google.common.truth,FloatSubjectTest,assertThatIsNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,500
truth,com.google.common.truth,FloatSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23f,511
truth,com.google.common.truth,FloatSubjectTest,assertThatIsFiniteFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float> callback=new ExpectFailure.SimpleSubjectBuilderCallback<FloatSubject`Float>(){" is 141.,522
truth,com.google.common.truth,FloatSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23f,534
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,43
truth,com.google.common.truth,TableSubjectTest,tableIsEmptyWithFailure,Magic Number,The method contains a magic number: 7,43
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 5,50
truth,com.google.common.truth,TableSubjectTest,tableIsNotEmpty,Magic Number,The method contains a magic number: 7,50
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,63
truth,com.google.common.truth,TableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,63
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,73
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,TableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,73
truth,com.google.common.truth,TableSubjectTest,containsFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> contains mapping for row/column <row> <row>");" is 145.,88
truth,com.google.common.truth,TableSubjectTest,doesNotContainFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{row={col=val}}> does not contain mapping for " + "row/column <row> <col>");" is 158.,106
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,40
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,40
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,45
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,45
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_throwInSubject_shouldPropagateOriginalException,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_throwAfterSubject_shouldPropagateOriginalException,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,ExpectFailureRuleTest,expectFail_throwAfterSubject_shouldPropagateOriginalException,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,ComparableSubjectCompileTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new ComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class ComparableType implements Comparable<ComparableType> {"`" private final int wrapped;"`" private ComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(ComparableType other) {"`" return wrapped - ((ComparableType) other).wrapped;"`" }"`" }"`"}");" is 559.,34
truth,com.google.common.truth,ComparableSubjectCompileTest,comparableMixedTypesDontCompile,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).withCompilerOptions("-sourcepath"`"").failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.ComparableType").in(file).onLine(5);" is 201.,34
truth,com.google.common.truth,ComparableSubjectCompileTest,comparableMixedTypesDontCompile,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,ComparableSubjectCompileTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "JavaFileObject file=JavaFileObjects.forSourceLines("test.MyTest"`"package test;"`"import static com.google.common.truth.Truth.assertThat;"`"class MyTest {"`" public void testFoo() {"`" assertThat(new RawComparableType(3)).isLessThan(\"kak\");"`" }"`" private static final class RawComparableType implements Comparable {"`" private final int wrapped;"`" private RawComparableType(int toWrap) {"`" this.wrapped = toWrap;"`" }"`" @Override public int compareTo(Object other) {"`" return wrapped - ((RawComparableType) other).wrapped;"`" }"`" }"`"}");" is 547.,66
truth,com.google.common.truth,ComparableSubjectCompileTest,rawComparableTypeMixedTypes,Long Statement,The length of the statement "assertAbout(javaSource()).that(file).withCompilerOptions("-sourcepath"`"").failsToCompile().withErrorContaining("java.lang.String cannot be converted to test.MyTest.RawComparableType").in(file).onLine(5);" is 204.,66
truth,com.google.common.truth,ComparableSubjectCompileTest,rawComparableTypeMixedTypes,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,ExpectFailureTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,56
truth,com.google.common.truth,ExpectFailureTest,expectFail_passesIfUnused,Magic Number,The method contains a magic number: 4,56
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnSuccess,Magic Number,The method contains a magic number: 4,61
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnSuccess,Magic Number,The method contains a magic number: 4,61
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultipleFailures,Magic Number,The method contains a magic number: 5,73
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultipleFailures,Magic Number,The method contains a magic number: 4,73
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Long Statement,The length of the statement "assertThat(expected).hasMessageThat().contains("ExpectFailure.whenTesting() called previously` but did not capture a failure.");" is 128.,85
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Magic Number,The method contains a magic number: 4,85
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings,Magic Number,The method contains a magic number: 4,85
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings_thatFail,Magic Number,The method contains a magic number: 5,99
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsOnMultiplewhenTestings_thatFail,Magic Number,The method contains a magic number: 4,99
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,110
truth,com.google.common.truth,ExpectFailureTest,expectFail_failsAfterTest,Magic Number,The method contains a magic number: 4,110
truth,com.google.common.truth,ExpectFailureTest,expectFail_whenTestingWithoutInContext_shouldFail,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,ExpectFailureTest,expectFail_whenTestingWithoutInContext_shouldFail,Magic Number,The method contains a magic number: 4,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,34
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,39
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,46
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,51
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 2,57
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5,57
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,63
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,63
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,63
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 2,77
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5,77
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 2,83
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5,83
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,94
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,103
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,103
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,103
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,108
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,123
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth,PrimitiveIntArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,IntegerSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4,35
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 4,40
truth,com.google.common.truth,IntegerSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5,40
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 4,51
truth,com.google.common.truth,IntegerSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5,51
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,56
truth,com.google.common.truth,IntegerSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4,56
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail_nullActual,Magic Number,The method contains a magic number: 5,66
truth,com.google.common.truth,IntegerSubjectTest,equalityOfNullsFail_nullExpected,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,IntegerSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4,76
truth,com.google.common.truth,IntegerSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4,76
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_int,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,139
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42,139
truth,com.google.common.truth,IntegerSubjectTest,testPrimitivesVsBoxedPrimitivesVsObject_long,Magic Number,The method contains a magic number: 42L,139
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testAllCombinations_pass,Magic Number,The method contains a magic number: 42L,159
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_long,Magic Number,The method contains a magic number: 42,180
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_long,Magic Number,The method contains a magic number: 42L,180
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_int,Magic Number,The method contains a magic number: 42,185
truth,com.google.common.truth,IntegerSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_int_int,Magic Number,The method contains a magic number: 42,185
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_intToChar,Magic Number,The method contains a magic number: 42,190
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_intToChar,Magic Number,The method contains a magic number: 42,190
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_charToInt,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes_isNotEqual_shouldFail_charToInt,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<Subject`Object> actualFirst=new ExpectFailure.SimpleSubjectBuilderCallback<Subject`Object>(){" is 136.,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<Subject`Object> expectedFirst=new ExpectFailure.SimpleSubjectBuilderCallback<Subject`Object>(){" is 138.,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 42,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,IntegerSubjectTest,testNumericPrimitiveTypes,Magic Number,The method contains a magic number: 41,220
truth,com.google.common.truth,ThrowableSubjectTest,hasCauseThat_tooDeep_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Causal chain is not deep enough - add a .isNotNull() check?\n" + "value of: throwable.getCause().getCause()");" is 173.,101
truth,com.google.common.truth,FactTest,twoFacts,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("foo"`"bar")`fact("longer name"`"other value")))).isEqualTo("foo : bar\nlonger name: other value");" is 171.,48
truth,com.google.common.truth,FactTest,twoFactsOneWithoutValue,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("hello"`"there")`simpleFact("foo")))).isEqualTo("hello: there\nfoo");" is 141.,63
truth,com.google.common.truth,FactTest,newline,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("foo"`"bar\nbaz")))).isEqualTo("foo:\n bar\n baz");" is 123.,72
truth,com.google.common.truth,FactTest,newlineWithoutValue,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of()`ImmutableList.of(fact("hello"`"there\neveryone")`simpleFact("xyz")))).isEqualTo("hello:\n there\n everyone\nxyz");" is 164.,78
truth,com.google.common.truth,FactTest,withMessage,Long Statement,The length of the statement "assertThat(makeMessage(ImmutableList.<String>of("hello")`ImmutableList.of(fact("foo"`"bar")))).isEqualTo("hello\nfoo: bar");" is 124.,87
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.0,49
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2,49
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2,49
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2,49
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3,49
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3,49
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Long Statement,The length of the statement "assertThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`0.0`-0.0)).isEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`0.0`-0.0));" is 147.,63
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2d,63
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4d,63
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2d,63
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4d,63
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Long Statement,The length of the statement "assertThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0)).isEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0));" is 155.,69
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 2.2d,69
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 5.4d,69
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 2.2d,69
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_NaN_Success,Magic Number,The method contains a magic number: 5.4d,69
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2d,76
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,84
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,84
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,84
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,84
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,89
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,89
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2d,89
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3d,89
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 4.4d,89
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,97
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3d,97
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2d,97
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2d,109
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3d,109
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4d,109
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY)).isNotEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY));" is 150.,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4d,114
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0)).isNotEqualTo(array(2.2d`5.4d`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0`-0.0));" is 176.,120
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 2.2d,120
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 5.4d,120
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 2.2d,120
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_NaN_plusZero_FailEquals,Magic Number,The method contains a magic number: 5.4d,120
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2d,127
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,132
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,132
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3d,132
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2d,132
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2d,137
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3d,137
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2d,137
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3d,137
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 4.4d,137
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2d,142
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 3.3d,142
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2d,142
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 2.2d,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 3.3d,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 4.4d,152
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 1.1,157
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.3,157
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.2,157
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0,162
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,162
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + INTOLERABLE_2POINT2 + "` 3.3]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of <2.2>");" is 245.,167
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 1.1,167
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.3,167
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.2,167
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`POSITIVE_INFINITY`3.3)).usingTolerance(DEFAULT_TOLERANCE).contains(POSITIVE_INFINITY);" is 125.,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` Infinity` 3.3]> " + "contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <Infinity>");" is 243.,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 1.1,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.3,182
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` NaN` 3.3]> " + "contains at least one element that is " + "a finite number within " + DEFAULT_TOLERANCE + " of <NaN>");" is 233.,197
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 1.1,197
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.3,197
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 1.1,212
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.3,212
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`Integer.MAX_VALUE + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(Integer.MAX_VALUE);" is 133.,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`2.0 + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(BigInteger.valueOf(2));" is 123.,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0`2.0 + 0.5 * DEFAULT_TOLERANCE`3.0)).usingTolerance(DEFAULT_TOLERANCE).contains(BigDecimal.valueOf(2.0));" is 125.,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2L,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 12,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,217
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <[1.1` 2.2` 3.3]> contains at least one element that is a finite number " + "within " + DEFAULT_TOLERANCE + " of <null>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 260.,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 1.1,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.2,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.3,250
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 1.1,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.2,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.3,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 1.1,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 1.1,268
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(2.2`99.99));" is 131.,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 1.1,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 3.3,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 2.2,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 1.1,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 1.1,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 3.3,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 2.2,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray,Magic Number,The method contains a magic number: 99.99,280
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,290
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,290
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,290
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,290
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(2.2`99.99));" is 131.,297
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains at least one element that is a finite number "+ "within "+ DEFAULT_TOLERANCE+ " of each element of <[2.2` 99.99]>. It is missing an element that is a finite "+ "number within "+ DEFAULT_TOLERANCE+ " of <99.99>");" is 368.,297
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,297
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,297
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,297
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,297
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(1.1`2.2)).inOrder();" is 121.,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,316
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(2.2`1.1)).inOrder();" is 139.,324
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is a finite number within " + DEFAULT_TOLERANCE + " of an expected value"`"expected order for required elements"`"but was");" is 258.,324
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,324
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,324
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,324
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,324
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,341
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,341
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,341
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,341
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99`999.999));" is 133.,348
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains at least one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of any element in <[99.99` 999.999]>");" is 271.,348
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,348
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,348
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,348
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 999.999,348
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,363
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,363
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,363
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,363
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,363
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.2`1.1));" is 129.,370
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains exactly one element that is a finite number within "+ DEFAULT_TOLERANCE+ " of each element of <[2.2` 1.1]>. It has unexpected elements <[3.3]>");" is 301.,370
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,370
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,370
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,370
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,370
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(1.1`2.2`3.3)).inOrder();" is 125.,385
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,385
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,385
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,385
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,385
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,385
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.2`1.1`3.3)).inOrder();" is 143.,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is a finite number within " + DEFAULT_TOLERANCE + " of an expected value"`"expected"`"but was");" is 212.,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,393
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,410
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,410
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,410
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 999.999,410
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.1`TOLERABLE_2POINT2`3.3)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99`2.2));" is 130.,417
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + TOLERABLE_2POINT2 + "` 3.3]> contains no element that is a finite number within "+ DEFAULT_TOLERANCE+ " of any element in <[99.99` 2.2]>. It contains <["+ TOLERABLE_2POINT2+ " which corresponds to 2.2]>");" is 323.,417
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,417
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,417
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,417
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingTolerance_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,417
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 1.1,434
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.2,434
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.3,434
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.2,434
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` " + OVER_2POINT2 + "` 3.3]> contains at least one element that is exactly equal to <2.2>");" is 205.,439
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 1.1,439
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.3,439
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.2,439
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2L,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 53,450
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <[1.1` 2.2` 3.3]> contains at least one element that is exactly equal to <" + expected + ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 232.,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(1.1` " + expected + ") threw java.lang.IllegalArgumentException");" is 135.,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value " + expected + " in assertion using exact double equality was a long with an absolute value "+ "greater than 2^52 which has no exact double representation");" is 231.,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 53,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 1.1,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 2.2,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 3.3,462
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <[1.1` 2.2` 3.3]> contains at least one element that is exactly equal to <" + expected + ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 232.,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(1.1` " + expected + ") threw java.lang.IllegalArgumentException");" is 135.,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value in assertion using exact double equality was of unsupported type " + BigInteger.class + " (it may not have an exact double representation)");" is 215.,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 2,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 1.1,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 2.2,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 3.3,485
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <[1.1` 2.2` 3.3]> contains at least one element that is exactly equal to <" + expected + ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 232.,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(1.1` " + expected + ") threw java.lang.IllegalArgumentException");" is 135.,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value in assertion using exact double equality was of unsupported type " + BigDecimal.class + " (it may not have an exact double representation)");" is 215.,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 2.0,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 1.1,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 2.2,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 3.3,507
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 1.1,529
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.3,529
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 1.1,534
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.3,534
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` -0.0` 3.3]> " + "contains at least one element that is " + "exactly equal to <" + 0.0 + ">");" is 207.,539
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 1.1,539
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.3,539
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <[1.1` 2.2` 3.3]> contains at least one element that is exactly equal to " + "<null>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 225.,558
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 1.1,558
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.2,558
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.3,558
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,572
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,572
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,572
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,572
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,572
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains at least one element that is exactly equal " + "to each element of <[2.2` 99.99]>. It is missing an element that is exactly "+ "equal to <99.99>");" is 286.,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,577
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,591
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected order for required elements"`"but was");" is 223.,599
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,599
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,599
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,599
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,599
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAtLeast_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,599
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,614
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,614
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,614
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,614
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,614
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains at least one element that is exactly equal " + "to any element in <[99.99` 999.999]>");" is 226.,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsAnyOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 999.999,619
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,632
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,632
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,632
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,632
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,632
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,632
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains exactly one element that is exactly equal " + "to each element of <[2.2` 1.1]>. It has unexpected elements <[3.3]>");" is 256.,637
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,637
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,637
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,637
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,637
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,637
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,650
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,650
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,650
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 1.1,650
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 2.2,650
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_success,Magic Number,The method contains a magic number: 3.3,650
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected"`"but was");" is 177.,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 2.2,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 1.1,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsExactly_primitiveDoubleArray_inOrder_failure,Magic Number,The method contains a magic number: 3.3,658
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 1.1,673
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 2.2,673
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 3.3,673
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 99.99,673
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_success,Magic Number,The method contains a magic number: 999.999,673
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("value of: array.asList()\nNot true that <[1.1` 2.2` 3.3]> " + "contains no element that is exactly equal to any " + "element in <[99.99` 2.2]>. It contains <[2.2 which corresponds to 2.2]>");" is 258.,678
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 1.1,678
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,678
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 3.3,678
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 99.99,678
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,usingExactEquality_containsNoneOf_primitiveDoubleArray_failure,Magic Number,The method contains a magic number: 2.2,678
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,smallDifferenceInLongRepresentation,Magic Number,The method contains a magic number: 4.4501477170144023E-308,691
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,smallDifferenceInLongRepresentation,Magic Number,The method contains a magic number: 4.450147717014402E-308,691
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,noCommas,Magic Number,The method contains a magic number: 10000.0,697
truth,com.google.common.truth,PrimitiveDoubleArraySubjectTest,noCommas,Magic Number,The method contains a magic number: 20000.0,697
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5L,36
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5L,41
truth,com.google.common.truth,ObjectArraySubjectTest,asList,Magic Number,The method contains a magic number: 5L,48
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 5L,53
truth,com.google.common.truth,ObjectArraySubjectTest,hasLength,Magic Number,The method contains a magic number: 2,53
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthFail,Magic Number,The method contains a magic number: 5L,61
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Empty catch clause,The method has an empty catch block.,73
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 2,73
truth,com.google.common.truth,ObjectArraySubjectTest,hasLengthNegative,Magic Number,The method contains a magic number: 5,73
truth,com.google.common.truth,ObjectArraySubjectTest,isEmptyFail,Magic Number,The method contains a magic number: 5L,88
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEmpty,Magic Number,The method contains a magic number: 5L,94
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,106
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 5L,106
truth,com.google.common.truth,ObjectArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 5L,137
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,142
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 5L,142
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,148
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 5L,148
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 5L,155
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,160
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 5L,160
truth,com.google.common.truth,ObjectArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 5L,172
truth,com.google.common.truth,ObjectArraySubjectTest,setArrayIsEqualTo_Fail_UnequalOrdering,Long Statement,The length of the statement "expectFailureWhenTestingThat(objectArray(ImmutableSet.of("A")`ImmutableSet.of("B"))).isEqualTo(objectArray(ImmutableSet.of("B")`ImmutableSet.of("A")));" is 151.,232
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000001f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 2.0f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 3.0f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.004f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.3f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 1.303f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.002f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,floatEquals,Magic Number,The method contains a magic number: 0.01f,34
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000001d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 2.0d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 3.0d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.004d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.3d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 1.303d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.002d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,doubleEquals,Magic Number,The method contains a magic number: 0.01d,51
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000001f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 2.0f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 3.0f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.004f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.3f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 1.303f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.002f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,floatNotEquals,Magic Number,The method contains a magic number: 0.01f,68
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000001d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 2.0d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 3.0d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.00000000000000000000000000000001d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.004d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.3d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 1.303d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.002d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,doubleNotEquals,Magic Number,The method contains a magic number: 0.01d,86
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3f,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 1.3d,104
truth,com.google.common.truth,MathUtilTest,equalsDifferentTypes,Magic Number,The method contains a magic number: 0.00000000000001f,104
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 3,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 4,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 3,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x4,Magic Number,The method contains a magic number: 4,53
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive4x4,Magic Number,The method contains a magic number: 4,60
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive3x5,Magic Number,The method contains a magic number: 5,71
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 5,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_exhaustive5x3,Magic Number,The method contains a magic number: 3,82
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,93
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,93
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_fullyConnected8x8,Magic Number,The method contains a magic number: 8,93
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0x5ca1ab1e,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 100,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 8,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_random8x8,Magic Number,The method contains a magic number: 0.25,98
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0x0ddba11,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 100,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 8,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomSparse8x8,Magic Number,The method contains a magic number: 0.125,109
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0x5add1e5,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 100,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 8,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_randomDense8x8,Magic Number,The method contains a magic number: 0.5,119
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullLhs,Empty catch clause,The method has an empty catch block.,134
truth,com.google.common.truth,GraphMatchingTest,maximumCardinalityBipartiteMatching_failsWithNullRhs,Empty catch clause,The method has an empty catch block.,145
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 2L,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 2L,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Same,Magic Number,The method contains a magic number: 5,37
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 5,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 2L,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,asList,Magic Number,The method contains a magic number: 9L,44
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 3,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 2,49
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 3,58
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isEqualTo_Fail_NotAnArray,Magic Number,The method contains a magic number: 4,58
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 3,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_SameLengths,Magic Number,The method contains a magic number: 2,66
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentLengths,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 2,76
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_DifferentTypes,Magic Number,The method contains a magic number: 3,76
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 2,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailEquals,Magic Number,The method contains a magic number: 3,81
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 2,86
truth,com.google.common.truth,PrimitiveLongArraySubjectTest,isNotEqualTo_FailSame,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,87
truth,com.google.common.truth,ExpectTest,expectTrue,Magic Number,The method contains a magic number: 4,87
truth,com.google.common.truth,ExpectTest,expectFail10Aligned,Magic Number,The method contains a magic number: 10,110
truth,com.google.common.truth,ExpectTest,expectFail10WrappedAligned,Magic Number,The method contains a magic number: 10,120
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 3,190
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 4,190
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 10,190
truth,com.google.common.truth,ExpectTest,bash,Magic Number,The method contains a magic number: 1000,190
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 3,194
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 4,194
truth,com.google.common.truth,ExpectTest,failWhenCallingThatAfterTest,Empty catch clause,The method has an empty catch block.,211
truth,com.google.common.truth,ExpectTest,failWhenCallingThatAfterTest,Magic Number,The method contains a magic number: 3,211
truth,com.google.common.truth,ExpectTest,run,Empty catch clause,The method has an empty catch block.,217
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 3,217
truth,com.google.common.truth,ExpectTest,failWhenCallingFailingAssertionMethodAfterTest,Magic Number,The method contains a magic number: 3,230
truth,com.google.common.truth,ExpectTest,failWhenCallingFailingAssertionMethodAfterTest,Magic Number,The method contains a magic number: 4,230
truth,com.google.common.truth,ExpectTest,run,Magic Number,The method contains a magic number: 4,242
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,83
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSum,Magic Number,The method contains a magic number: 2,100
truth,com.google.common.truth,AtomicLongMapSubjectTest,hasSumFails,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,AtomicLongMapSubjectTest,containsEntryFailure,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntry,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth,AtomicLongMapSubjectTest,doesNotContainEntryNullKey,Magic Number,The method contains a magic number: 2,204
truth,com.google.common.truth,AtomicLongMapSubjectTest,failMapContainsKeyWithValue,Magic Number,The method contains a magic number: 2,252
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionInSubject_shouldPropagate,Long Statement,The length of the statement "assertThat(reportedFailure.get(1).getException()).hasMessageThat().contains("ExpectFailure.whenTesting() invoked` but no failure was caught.");" is 143.,36
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionInSubject_shouldPropagate,Magic Number,The method contains a magic number: 2,36
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionAfterSubject_shouldPropagate,Long Statement,The length of the statement "assertThat(reportedFailure.get(1).getException()).hasMessageThat().contains("ExpectFailure.whenTesting() invoked` but no failure was caught.");" is 143.,60
truth,com.google.common.truth,ExpectFailureNonRuleTest,testExpect_userThrowExceptionAfterSubject_shouldPropagate,Magic Number,The method contains a magic number: 2,60
truth,com.google.common.truth,DoubleSubjectTest,testDoubleConstants_matchNextAfter,Magic Number,The method contains a magic number: 1.23,60
truth,com.google.common.truth,DoubleSubjectTest,testJ2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23,76
truth,com.google.common.truth,DoubleSubjectTest,testJ2clCornerCaseDoubleVsFloat,Magic Number,The method contains a magic number: 1.23f,76
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.00001,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1.00001,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 0.99999,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 3.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1003.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 1000.0,85
truth,com.google.common.truth,DoubleSubjectTest,isWithinOf,Magic Number,The method contains a magic number: 2.0,85
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,99
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.00001,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1.00001,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 0.99999,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 3.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1003.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 1000.0,118
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOf,Magic Number,The method contains a magic number: 2.0,118
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotWithinFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,132
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.9,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 5.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.5,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 4.0,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,negativeTolerances,Magic Number,The method contains a magic number: 0.00001,146
truth,com.google.common.truth,DoubleSubjectTest,nanTolerances,Magic Number,The method contains a magic number: 2.0,206
truth,com.google.common.truth,DoubleSubjectTest,infiniteTolerances,Magic Number,The method contains a magic number: 2.0,222
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isWithinOfZero,Magic Number,The method contains a magic number: 0.00001,238
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinOfZero,Magic Number,The method contains a magic number: 0.00001,251
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,313
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isNotWithinNonFinite,Magic Number,The method contains a magic number: 0.00001,338
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,363
truth,com.google.common.truth,DoubleSubjectTest,isEqualTo,Magic Number,The method contains a magic number: 1.23,363
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,372
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,383
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23,383
truth,com.google.common.truth,DoubleSubjectTest,isNotEqualTo,Magic Number,The method contains a magic number: 1.23f,383
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNotEqualToFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,394
truth,com.google.common.truth,DoubleSubjectTest,isZero,Magic Number,The method contains a magic number: 1.23,405
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,416
truth,com.google.common.truth,DoubleSubjectTest,isNonZero,Magic Number,The method contains a magic number: 1.23,428
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNonZeroFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,439
truth,com.google.common.truth,DoubleSubjectTest,isPositiveInfinity,Magic Number,The method contains a magic number: 1.23,451
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsPositiveInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,460
truth,com.google.common.truth,DoubleSubjectTest,isNegativeInfinity,Magic Number,The method contains a magic number: 1.23,471
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNegativeInfinityFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,480
truth,com.google.common.truth,DoubleSubjectTest,isNaN,Magic Number,The method contains a magic number: 1.23,491
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsNaNFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,500
truth,com.google.common.truth,DoubleSubjectTest,isFinite,Magic Number,The method contains a magic number: 1.23,511
truth,com.google.common.truth,DoubleSubjectTest,assertThatIsFiniteFails,Long Statement,The length of the statement "ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double> callback=new ExpectFailure.SimpleSubjectBuilderCallback<DoubleSubject`Double>(){" is 145.,522
truth,com.google.common.truth,DoubleSubjectTest,isNotNaN,Magic Number,The method contains a magic number: 1.23,534
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,34
truth,com.google.common.truth,LongSubjectTest,simpleEquality,Magic Number,The method contains a magic number: 4L,34
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 4L,39
truth,com.google.common.truth,LongSubjectTest,simpleInequality,Magic Number,The method contains a magic number: 5L,39
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 4L,50
truth,com.google.common.truth,LongSubjectTest,equalityFail,Magic Number,The method contains a magic number: 5L,50
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,55
truth,com.google.common.truth,LongSubjectTest,inequalityFail,Magic Number,The method contains a magic number: 4L,55
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail_nullActual,Magic Number,The method contains a magic number: 5L,65
truth,com.google.common.truth,LongSubjectTest,equalityOfNullsFail_nullExpected,Magic Number,The method contains a magic number: 5L,70
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,inequalityOfNulls,Magic Number,The method contains a magic number: 4L,75
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_long,Magic Number,The method contains a magic number: 42L,86
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_long,Magic Number,The method contains a magic number: 42L,86
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_int,Magic Number,The method contains a magic number: 42L,91
truth,com.google.common.truth,LongSubjectTest,testNumericTypeWithSameValue_shouldBeEqual_long_int,Magic Number,The method contains a magic number: 42,91
truth,com.google.common.truth,ChainingTest,twoLevelsNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamed("child"`"child").delegatingToNamed("grandchild"`"grandchild").isThePresentKingOfFrance();" is 144.,107
truth,com.google.common.truth,ChainingTest,twoLevelsOnlyFirstNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamed("child"`"child").delegatingTo("grandchild").isThePresentKingOfFrance();" is 126.,116
truth,com.google.common.truth,ChainingTest,twoLevelsOnlySecondNamed,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingTo("child").delegatingToNamed("grandchild"`"grandchild").isThePresentKingOfFrance();" is 131.,125
truth,com.google.common.truth,ChainingTest,twoLevelsNamedNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamedNoNeedToDisplayBoth("child"`"child").delegatingToNamedNoNeedToDisplayBoth("grandchild"`"grandchild").isThePresentKingOfFrance();" is 182.,142
truth,com.google.common.truth,ChainingTest,twoLevelsOnlyFirstNamedNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamedNoNeedToDisplayBoth("child"`"child").delegatingTo("grandchild").isThePresentKingOfFrance();" is 145.,151
truth,com.google.common.truth,ChainingTest,twoLevelsOnlySecondNamedNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingTo("child").delegatingToNamedNoNeedToDisplayBoth("grandchild"`"grandchild").isThePresentKingOfFrance();" is 150.,160
truth,com.google.common.truth,ChainingTest,twoLevelsNamedOnlyFirstNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamedNoNeedToDisplayBoth("child"`"child").delegatingToNamed("grandchild"`"grandchild").isThePresentKingOfFrance();" is 163.,169
truth,com.google.common.truth,ChainingTest,twoLevelsNamedOnlySecondNoNeedToDisplayBoth,Long Statement,The length of the statement "expectFailureWhenTestingThat("root").delegatingToNamed("child"`"child").delegatingToNamedNoNeedToDisplayBoth("grandchild"`"grandchild").isThePresentKingOfFrance();" is 163.,178
truth,com.google.common.truth,ChainingTest,namedAndMessage,Long Statement,The length of the statement "expectFailure.whenTesting().withMessage("prefix").about(myObjects()).that("root").delegatingToNamed("child"`"child").isThePresentKingOfFrance();" is 144.,187
truth,com.google.common.truth,ChainingTest,badFormat,Empty catch clause,The method has an empty catch block.,211
truth,com.google.common.truth,ChainingTest,badFormat,Magic Number,The method contains a magic number: 2,211
truth,com.google.common.truth,ChainingTest,badFormat,Magic Number,The method contains a magic number: 3,211
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,45
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,45
truth,com.google.common.truth,IterableSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,45
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 2,55
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 3,55
truth,com.google.common.truth,IterableSubjectTest,hasSizeFails,Magic Number,The method contains a magic number: 4,55
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,61
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,61
truth,com.google.common.truth,IterableSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 3,61
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 2,70
truth,com.google.common.truth,IterableSubjectTest,iterableContains,Magic Number,The method contains a magic number: 3,70
truth,com.google.common.truth,IterableSubjectTest,iterableContainsWithNull,Magic Number,The method contains a magic number: 3,75
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2L,80
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 3L,80
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2L,80
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailsWithSameToString,Magic Number,The method contains a magic number: 2,80
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 3,101
truth,com.google.common.truth,IterableSubjectTest,iterableContainsFailure,Magic Number,The method contains a magic number: 5,101
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContain,Magic Number,The method contains a magic number: 5,108
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainNull,Magic Number,The method contains a magic number: 3,113
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 3,118
truth,com.google.common.truth,IterableSubjectTest,iterableDoesNotContainFailure,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 2,125
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicates,Magic Number,The method contains a magic number: 3,125
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2,130
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 2L,130
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesMixedTypes,Magic Number,The method contains a magic number: 3,130
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 2,135
truth,com.google.common.truth,IterableSubjectTest,doesNotContainDuplicatesFailure,Magic Number,The method contains a magic number: 3,135
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 2,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 3,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOf,Magic Number,The method contains a magic number: 5,143
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 3,148
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNull,Magic Number,The method contains a magic number: 5,148
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 4,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithNullInThirdAndFinalPosition,Magic Number,The method contains a magic number: 5,153
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 2,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 3,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 5,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailure,Magic Number,The method contains a magic number: 6,158
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,165
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 3L,165
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,165
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 3,165
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,175
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,175
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,175
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,175
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,175
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 2,205
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 3,205
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyOfWithOneShotIterable,Magic Number,The method contains a magic number: 7,205
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 2,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 3,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 10,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 100,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 2,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 3,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 5,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInIterable,Magic Number,The method contains a magic number: 6,219
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 2,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 3,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 2,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAnyInArray,Magic Number,The method contains a magic number: 3,228
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeast,Magic Number,The method contains a magic number: 2,237
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeast,Magic Number,The method contains a magic number: 3,237
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeast,Magic Number,The method contains a magic number: 2,237
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithMany,Magic Number,The method contains a magic number: 2,242
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithMany,Magic Number,The method contains a magic number: 3,242
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithMany,Magic Number,The method contains a magic number: 2,242
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicates,Magic Number,The method contains a magic number: 3,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicates,Magic Number,The method contains a magic number: 2,247
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithNull,Magic Number,The method contains a magic number: 3,252
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithNull,Magic Number,The method contains a magic number: 3,252
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,257
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithNullAtThirdAndFinalPosition,Magic Number,The method contains a magic number: 3,257
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailure,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailure,Magic Number,The method contains a magic number: 3,284
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailure,Magic Number,The method contains a magic number: 2,284
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailure,Magic Number,The method contains a magic number: 4,284
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 2,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 3,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicatesFailure,Magic Number,The method contains a magic number: 4,304
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicateMissingElements,Magic Number,The method contains a magic number: 2,314
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,314
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,314
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,314
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithNullFailure,Magic Number,The method contains a magic number: 3,320
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastWithNullFailure,Magic Number,The method contains a magic number: 3,320
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,326
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,326
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,333
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,333
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,333
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3L,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 3,347
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrder,Magic Number,The method contains a magic number: 3,363
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrder,Magic Number,The method contains a magic number: 2,363
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrder,Magic Number,The method contains a magic number: 5,363
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrder,Magic Number,The method contains a magic number: 3,363
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrder,Magic Number,The method contains a magic number: 2,363
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrder,Magic Number,The method contains a magic number: 5,363
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 3,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 2,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 5,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 3,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 5,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 3,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 2,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 2,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 4,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 5,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 3,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 2,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 2,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 5,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 3,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 4,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 5,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 3,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithGaps,Magic Number,The method contains a magic number: 5,368
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 3,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 5,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 3,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 5,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 3,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 7,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 5,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 3,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithNull,Magic Number,The method contains a magic number: 5,379
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithFailure,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 124.,385
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithFailure,Magic Number,The method contains a magic number: 3,385
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithFailure,Magic Number,The method contains a magic number: 3,385
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 2,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 4,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,395
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterableWrongOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 124.,415
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 2,415
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 4,415
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,415
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,415
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWrongOrderAndMissing,Magic Number,The method contains a magic number: 2,439
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWrongOrderAndMissing,Magic Number,The method contains a magic number: 2,439
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastInOrderWrongOrderAndMissing,Magic Number,The method contains a magic number: 3,439
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 2,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 3,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 2,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 2,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 3,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 2,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInIterable,Magic Number,The method contains a magic number: 4,444
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInArray,Magic Number,The method contains a magic number: 2,463
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInArray,Magic Number,The method contains a magic number: 3,463
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInArray,Magic Number,The method contains a magic number: 2,463
truth,com.google.common.truth,IterableSubjectTest,iterableContainsAtLeastElementsInArray,Magic Number,The method contains a magic number: 3,463
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 2,474
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 3,474
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 4,474
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 5,474
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOf,Magic Number,The method contains a magic number: 6,474
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,479
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 3,479
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 2,479
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailure,Magic Number,The method contains a magic number: 4,479
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 3,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 2,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInSubject,Magic Number,The method contains a magic number: 4,488
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,494
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 3,494
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,494
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 2,494
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneOfFailureWithDuplicateInExpected,Magic Number,The method contains a magic number: 4,494
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 2,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 5,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 6,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 2,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 3,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 2,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInIterable,Magic Number,The method contains a magic number: 4,509
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 2,519
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 2,519
truth,com.google.common.truth,IterableSubjectTest,iterableContainsNoneInArray,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,540
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,540
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 2,540
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMany,Magic Number,The method contains a magic number: 3,540
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 3,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 4,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyOutOfOrder,Magic Number,The method contains a magic number: 2,545
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 2,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicates,Magic Number,The method contains a magic number: 3,550
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 3,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesOutOfOrder,Magic Number,The method contains a magic number: 2,555
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullThird,Magic Number,The method contains a magic number: 2,578
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,583
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNull,Magic Number,The method contains a magic number: 3,583
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullOutOfOrder,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlySingleElement,Magic Number,The method contains a magic number: 2,639
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,703
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 2,703
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyMissingItemFailure,Magic Number,The method contains a magic number: 4,703
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,709
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,709
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,709
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,715
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,715
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,715
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 2,715
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesNotEnoughItemsFailure,Magic Number,The method contains a magic number: 3,715
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 2,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 3,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesMissingItemFailure,Magic Number,The method contains a magic number: 4,721
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 2,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicatesUnexpectedItemFailure,Magic Number,The method contains a magic number: 3,751
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,761
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,761
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingElements,Magic Number,The method contains a magic number: 4,761
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,767
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithNullFailure,Magic Number,The method contains a magic number: 3,767
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,773
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 3,773
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 2,773
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithMissingAndExtraElements,Magic Number,The method contains a magic number: 4,773
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,780
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,780
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 3,780
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 2,780
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,780
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithDuplicateMissingAndExtraElements,Magic Number,The method contains a magic number: 4,780
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2L,797
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousList,Magic Number,The method contains a magic number: 2,797
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Magic Number,The method contains a magic number: 2L,804
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndListWithNull,Magic Number,The method contains a magic number: 2,804
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Magic Number,The method contains a magic number: 2,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousList,Magic Number,The method contains a magic number: 2L,812
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,820
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,820
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHomogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,820
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2,827
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,827
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyFailsWithSameToStringAndHeterogeneousListWithDuplicates,Magic Number,The method contains a magic number: 2L,827
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Long Identifier,The length of the field CONTAINS_EXACTLY_ITERABLE_WARNING is 33.,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 2,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 3,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneIterableGivesWarning,Magic Number,The method contains a magic number: 4,836
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInWithOneIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,844
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Long Identifier,The length of the field CONTAINS_EXACTLY_ITERABLE_WARNING is 33.,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 2,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 3,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithTwoIterableDoesNotGivesWarning,Magic Number,The method contains a magic number: 4,850
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 2,863
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 3,863
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyWithOneNonIterableDoesNotGiveWarning,Magic Number,The method contains a magic number: 4,863
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,869
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,869
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,869
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 3,869
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 2,869
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrder,Magic Number,The method contains a magic number: 5,869
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,874
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,874
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 3,874
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithNull,Magic Number,The method contains a magic number: 5,874
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,879
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithFailure,Magic Number,The method contains a magic number: 3,879
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,886
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterable,Magic Number,The method contains a magic number: 3,886
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,899
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyInOrderWithOneShotIterableWrongOrder,Magic Number,The method contains a magic number: 3,899
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 2,920
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 3,920
truth,com.google.common.truth,IterableSubjectTest,iterableWithNoToStringOverride,Magic Number,The method contains a magic number: 2,920
truth,com.google.common.truth,IterableSubjectTest,iterator,Magic Number,The method contains a magic number: 2,924
truth,com.google.common.truth,IterableSubjectTest,iterator,Magic Number,The method contains a magic number: 3,924
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,934
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,934
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,934
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 2,934
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInIterable,Magic Number,The method contains a magic number: 4,934
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInArray,Magic Number,The method contains a magic number: 2,942
truth,com.google.common.truth,IterableSubjectTest,iterableContainsExactlyElementsInArray,Magic Number,The method contains a magic number: 2,942
truth,com.google.common.truth,IterableSubjectTest,iterableIsEmptyWithFailure,Magic Number,The method contains a magic number: 3,1001
truth,com.google.common.truth,IterableSubjectTest,iterableIsInStrictOrder,Magic Number,The method contains a magic number: 2,1018
truth,com.google.common.truth,IterableSubjectTest,iterableIsInStrictOrder,Magic Number,The method contains a magic number: 3,1018
truth,com.google.common.truth,IterableSubjectTest,iterableIsInStrictOrder,Magic Number,The method contains a magic number: 4,1018
truth,com.google.common.truth,IterableSubjectTest,isInStrictOrderFailure,Magic Number,The method contains a magic number: 2,1025
truth,com.google.common.truth,IterableSubjectTest,isInStrictOrderFailure,Magic Number,The method contains a magic number: 2,1025
truth,com.google.common.truth,IterableSubjectTest,isInStrictOrderFailure,Magic Number,The method contains a magic number: 4,1025
truth,com.google.common.truth,IterableSubjectTest,isInStrictOrderWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,1035
truth,com.google.common.truth,IterableSubjectTest,isInStrictOrderWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 3,1035
truth,com.google.common.truth,IterableSubjectTest,iterableIsInOrder,Magic Number,The method contains a magic number: 2,1044
truth,com.google.common.truth,IterableSubjectTest,iterableIsInOrder,Magic Number,The method contains a magic number: 3,1044
truth,com.google.common.truth,IterableSubjectTest,iterableIsInOrder,Magic Number,The method contains a magic number: 3,1044
truth,com.google.common.truth,IterableSubjectTest,iterableIsInOrder,Magic Number,The method contains a magic number: 3,1044
truth,com.google.common.truth,IterableSubjectTest,iterableIsInOrder,Magic Number,The method contains a magic number: 4,1044
truth,com.google.common.truth,IterableSubjectTest,isInOrderFailure,Magic Number,The method contains a magic number: 3,1051
truth,com.google.common.truth,IterableSubjectTest,isInOrderFailure,Magic Number,The method contains a magic number: 2,1051
truth,com.google.common.truth,IterableSubjectTest,isInOrderFailure,Magic Number,The method contains a magic number: 4,1051
truth,com.google.common.truth,IterableSubjectTest,isInOrderMultipleFailures,Magic Number,The method contains a magic number: 3,1060
truth,com.google.common.truth,IterableSubjectTest,isInOrderMultipleFailures,Magic Number,The method contains a magic number: 2,1060
truth,com.google.common.truth,IterableSubjectTest,isInOrderMultipleFailures,Magic Number,The method contains a magic number: 4,1060
truth,com.google.common.truth,IterableSubjectTest,isInOrderWithNonComparableElementsFailure,Empty catch clause,The method has an empty catch block.,1065
truth,com.google.common.truth,IterableSubjectTest,isInOrderWithNonComparableElementsFailure,Magic Number,The method contains a magic number: 2,1065
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 2,1140
truth,com.google.common.truth,IterableSubjectTest,iterableOrderedByBaseClassComparator,Magic Number,The method contains a magic number: 3,1140
truth,com.google.common.truth,IterableSubjectTest,isNotIn,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("The actual value is an Iterable` and you've written a test that compares it to some " + "objects that are not Iterables. Did you instead mean to check whether its " + "*contents* match any of the *contents* of the given values? If so` call "+ "containsNoneOf(...)/containsNoneIn(...) instead. Non-iterables: [a` b]");" is 384.,1157
truth,com.google.common.truth,IterableSubjectTest,isNoneOf,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("The actual value is an Iterable` and you've written a test that compares it to some " + "objects that are not Iterables. Did you instead mean to check whether its " + "*contents* match any of the *contents* of the given values? If so` call "+ "containsNoneOf(...)/containsNoneIn(...) instead. Non-iterables: [a` b]");" is 384.,1182
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 123,52
truth,com.google.common.truth,PrimitiveByteArraySubjectTest,isEqualTo_Fail_UnequalOrdering,Magic Number,The method contains a magic number: 123,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.2f,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3f,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3f,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 3.3f,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,testFloatConstants_matchNextAfter,Magic Number,The method contains a magic number: 2.0f,52
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Long Statement,The length of the statement "assertThat(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f)).isEqualTo(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f));" is 159.,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 2.2f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Success,Magic Number,The method contains a magic number: 5.4f,65
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2f,71
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotEqual,Magic Number,The method contains a magic number: 2.2f,71
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,80
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,80
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,80
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,80
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,85
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,85
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 2.2f,85
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 3.3f,85
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Longer,Magic Number,The method contains a magic number: 4.4f,85
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,93
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 3.3f,93
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_Shorter,Magic Number,The method contains a magic number: 2.2f,93
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 2.2f,105
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 3.3f,105
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isEqualTo_WithoutToleranceParameter_Fail_NotAnArray,Magic Number,The method contains a magic number: 4.4f,105
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f)).isNotEqualTo(array(2.2f`5.4f`POSITIVE_INFINITY`NEGATIVE_INFINITY`NaN`0.0f`-0.0f));" is 180.,110
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,110
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4f,110
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 2.2f,110
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_FailEquals,Magic Number,The method contains a magic number: 5.4f,110
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotEqual,Magic Number,The method contains a magic number: 2.2f,117
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,122
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,122
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 3.3f,122
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_DifferentOrder,Magic Number,The method contains a magic number: 2.2f,122
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 2.2f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 3.3f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Longer,Magic Number,The method contains a magic number: 4.4f,127
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2f,132
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 3.3f,132
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_Shorter,Magic Number,The method contains a magic number: 2.2f,132
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 2.2f,142
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 3.3f,142
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,isNotEqualTo_WithoutToleranceParameter_Success_NotAnArray,Magic Number,The method contains a magic number: 4.4f,142
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 3.0f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_success,Magic Number,The method contains a magic number: 2.0f,147
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 3.0f,152
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithExpectedLong,Magic Number,The method contains a magic number: 2L,152
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is a finite " + "number within %s of <%s>"`1.0f`INTOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`2.0f));" is 278.,157
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,157
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,157
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 3.0f,157
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failure,Magic Number,The method contains a magic number: 2.0f,157
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`POSITIVE_INFINITY`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(POSITIVE_INFINITY);" is 127.,172
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` Infinity` %s]> " + "contains at least one element that is " + "a finite number within %s of <Infinity>"`1.0f`3.0f`(double)DEFAULT_TOLERANCE));" is 269.,172
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,172
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithInfinity,Magic Number,The method contains a magic number: 3.0f,172
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` NaN` %s]> " + "contains at least one element that is " + "a finite number within %s of <NaN>"`1.0f`3.0f`(double)DEFAULT_TOLERANCE));" is 259.,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_failureWithNaN,Magic Number,The method contains a magic number: 3.0f,187
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_successWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,202
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`Integer.MIN_VALUE + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(1 << 9).contains(Integer.MIN_VALUE);" is 125.,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`2.0f + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(BigInteger.valueOf(2));" is 127.,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Long Statement,The length of the statement "assertThat(array(1.0f`2.0f + 0.5f * DEFAULT_TOLERANCE`3.0f)).usingTolerance(DEFAULT_TOLERANCE).contains(BigDecimal.valueOf(2.0));" is 129.,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 9,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2L,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 41,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 0.5f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_otherTypes,Magic Number,The method contains a magic number: 2.0,207
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is a finite number "+ "within "+ (double)DEFAULT_TOLERANCE+ " of <null>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 281.,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` null) threw java.lang.NullPointerException");" is 133.,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,243
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,262
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 3.0f,262
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_contains_negativeTolerance,Magic Number,The method contains a magic number: 2.0f,262
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(2.0f`99.99f));" is 131.,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray,Magic Number,The method contains a magic number: 3.0f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray,Magic Number,The method contains a magic number: 2.0f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray,Magic Number,The method contains a magic number: 3.0f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray,Magic Number,The method contains a magic number: 2.0f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray,Magic Number,The method contains a magic number: 99.99f,274
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,284
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,284
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(2.0f`99.99f));" is 131.,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is a " + "finite number within %s of each element of <[%s` %s]>. "+ "It is missing an element that is a finite number within %s of <%s>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`2.0f`99.99f`(double)DEFAULT_TOLERANCE`99.99f));" is 410.,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,291
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(1.0f`2.0f)).inOrder();" is 121.,314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,314
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAtLeast(array(2.0f`1.0f)).inOrder();" is 139.,322
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is a finite number within " + (double)DEFAULT_TOLERANCE + " of an expected value"`"expected order for required elements"`"but was");" is 266.,322
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,322
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,322
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,322
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,340
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsAnyOf(array(99.99f`999.999f));" is 133.,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is " + "a finite number within %s of any element in <[%s` %s]>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`99.99f`999.999f));" is 308.,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,347
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,362
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,362
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,362
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f));" is 129.,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains exactly one element that is a finite " + "number within %s of each element of <[%s` %s]>. "+ "It has unexpected elements <[%s]>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`2.0f`1.0f`3.0f));" is 346.,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,369
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Long Statement,The length of the statement "assertThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(1.0f`2.0f`3.0f)).inOrder();" is 126.,385
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,385
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,385
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,385
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsExactly(array(2.0f`1.0f`3.0f)).inOrder();" is 144.,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is a finite number within " + (double)DEFAULT_TOLERANCE + " of an expected value"`"expected"`"but was");" is 220.,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,393
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 999.999f,410
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`TOLERABLE_TWO`3.0f)).usingTolerance(DEFAULT_TOLERANCE).containsNoneOf(array(99.99f`2.0f));" is 130.,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains no element that is a finite number within %s" + " of any element in <[%s` %s]>. It contains <[%s which corresponds to %s]>"`1.0f`TOLERABLE_TWO`3.0f`(double)DEFAULT_TOLERANCE`99.99f`2.0f`TOLERABLE_TWO`2.0f));" is 357.,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingTolerance_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,417
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,439
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 3.0f,439
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_success,Magic Number,The method contains a magic number: 2.0f,439
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element " + "that is exactly equal to <%s>"`1.0f`JUST_OVER_2POINT2`3.0f`2.2f));" is 242.,444
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,444
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.2f,444
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 3.0f,444
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failure,Magic Number,The method contains a magic number: 2.2f,444
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2.0f,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 2L,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 3.0f,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes,Magic Number,The method contains a magic number: 24,459
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_intOutOfRange,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is exactly equal to <"+ expected+ ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 246.,469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_intOutOfRange,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` "+ expected+ ") threw java.lang.IllegalArgumentException");" is 147.,469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_intOutOfRange,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value " + expected + " in assertion using exact float equality was an int with an absolute value "+ "greater than 2^24 which has no exact float representation");" is 229.,469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_intOutOfRange,Magic Number,The method contains a magic number: 24,469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_intOutOfRange,Magic Number,The method contains a magic number: 2.0f,469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_intOutOfRange,Magic Number,The method contains a magic number: 3.0f,469
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is exactly equal to <"+ expected+ ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 246.,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` "+ expected+ ") threw java.lang.IllegalArgumentException");" is 147.,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value " + expected + " in assertion using exact float equality was a long with an absolute value "+ "greater than 2^24 which has no exact float representation");" is 229.,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 24,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 2.0f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_longOutOfRange,Magic Number,The method contains a magic number: 3.0f,500
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_doubleNotSupported,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is exactly equal to <"+ expected+ ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 246.,531
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_doubleNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` "+ expected+ ") threw java.lang.IllegalArgumentException");" is 147.,531
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_doubleNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value in assertion using exact float equality was a double` which is not " + "supported as a double may not have an exact float representation");" is 213.,531
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_doubleNotSupported,Magic Number,The method contains a magic number: 2.0,531
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_doubleNotSupported,Magic Number,The method contains a magic number: 2.0f,531
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_doubleNotSupported,Magic Number,The method contains a magic number: 3.0f,531
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is exactly equal to <"+ expected+ ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 246.,560
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` "+ expected+ ") threw java.lang.IllegalArgumentException");" is 147.,560
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value in assertion using exact float equality was of unsupported type " + BigInteger.class + " (it may not have an exact float representation)");" is 213.,560
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 2,560
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 2.0f,560
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigIntegerNotSupported,Magic Number,The method contains a magic number: 3.0f,560
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is exactly equal to <"+ expected+ ">"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 246.,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` "+ expected+ ") threw java.lang.IllegalArgumentException");" is 147.,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").contains("Expected value in assertion using exact float equality was of unsupported type " + BigDecimal.class + " (it may not have an exact float representation)");" is 213.,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 2.0,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 2.0f,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_otherTypes_bigDecimalNotSupported,Magic Number,The method contains a magic number: 3.0f,590
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithInfinity,Magic Number,The method contains a magic number: 3.0f,620
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_successWithNaN,Magic Number,The method contains a magic number: 3.0f,627
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` -0.0` %s]> " + "contains at least one element that is " + "exactly equal to <%s>"`1.0f`3.0f`0.0f));" is 226.,632
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,632
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_failureWithNegativeZero,Magic Number,The method contains a magic number: 3.0f,632
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Long Statement,The length of the statement "assertFailureKeys("value of"`"Not true that <" + Arrays.toString(actual) + "> contains at least one element that is exactly equal to "+ "<null>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 240.,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(" + actual[0] + "` null) threw java.lang.NullPointerException");" is 133.,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 2.0f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_contains_nullExpected,Magic Number,The method contains a magic number: 3.0f,645
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,662
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,662
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,662
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is exactly equal " + "to each element of <[%s` %s]>. It is missing an element that is exactly "+ "equal to <%s>"`1.0f`2.0f`3.0f`2.0f`99.99f`99.99f));" is 325.,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,667
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,683
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,683
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,683
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"required elements were all found` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected order for required elements"`"but was");" is 223.,691
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,691
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,691
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,691
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAtLeast_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,691
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,707
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,707
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,707
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,707
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains at least one element that is exactly equal " + "to any element in <[%s` %s]>"`1.0f`2.0f`3.0f`99.99f`999.999f));" is 261.,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsAnyOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 999.999f,712
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,727
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,727
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,727
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,727
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains exactly one element that is exactly equal " + "to each element of <[%s` %s]>. It has unexpected elements <[%s]>"`1.0f`2.0f`3.0f`2.0f`1.0f`3.0f));" is 295.,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,734
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,749
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,749
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 2.0f,749
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_success,Magic Number,The method contains a magic number: 3.0f,749
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(array(1.0f`2.0f`3.0f)).usingExactEquality().containsExactly(array(2.0f`1.0f`3.0f)).inOrder();" is 122.,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Long Statement,The length of the statement "assertFailureKeys("value of"`"contents match` but order was wrong"`"comparing contents by testing that each element is exactly equal to an expected value"`"expected"`"but was");" is 177.,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 2.0f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsExactly_primitiveFloatArray_inOrder_failure,Magic Number,The method contains a magic number: 3.0f,757
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 2.0f,772
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 3.0f,772
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 99.99f,772
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_success,Magic Number,The method contains a magic number: 999.999f,772
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("value of: array.asList()\nNot true that <[%s` %s` %s]> " + "contains no element that is exactly equal to any " + "element in <[%s` %s]>. It contains <[%s which corresponds to %s]>"`1.0f`2.0f`3.0f`99.99f`2.0f`2.0f`2.0f));" is 301.,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 3.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 99.99f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,779
truth,com.google.common.truth,PrimitiveFloatArraySubjectTest,usingExactEquality_containsNoneOf_primitiveFloatArray_failure,Magic Number,The method contains a magic number: 2.0f,779
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,47
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,47
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapA=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 146.,63
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableListMultimap<String`String> multimapB=ImmutableListMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 146.,63
truth,com.google.common.truth,MultimapSubjectTest,listMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` cobain` russell]}> in order. " + "The values for keys <[kurt]> are not in order");" is 238.,63
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,85
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_passes,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"cobain"`"russell").build();" is 144.,85
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapA=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell"`"cobain").build();" is 144.,101
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "ImmutableSetMultimap<String`String> multimapB=ImmutableSetMultimap.<String`String>builder().putAll("kurt"`"kluever"`"russell").build();" is 135.,101
truth,com.google.common.truth,MultimapSubjectTest,setMultimapIsEqualTo_fails,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{kurt=[kluever` russell` cobain]}> contains exactly " + "<{kurt=[kluever` russell]}>. It has unexpected items <{kurt=[cobain]}>");" is 212.,101
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).isEqualTo(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 124.,120
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`e.getMessage()).that(e).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 347.,120
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2,120
truth,com.google.common.truth,MultimapSubjectTest,isEqualTo_failsWithSameToString,Magic Number,The method contains a magic number: 2L,120
truth,com.google.common.truth,MultimapSubjectTest,multimapIsEmptyWithFailure,Magic Number,The method contains a magic number: 5,141
truth,com.google.common.truth,MultimapSubjectTest,multimapIsNotEmpty,Magic Number,The method contains a magic number: 5,148
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 3,161
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 4,161
truth,com.google.common.truth,MultimapSubjectTest,hasSize,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Empty catch clause,The method has an empty catch block.,171
truth,com.google.common.truth,MultimapSubjectTest,hasSizeNegative,Magic Number,The method contains a magic number: 2,171
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Long Statement,The length of the statement "assertFailureKeys("value of"`"expected to contain"`"an instance of"`"but did not"`"though it did contain"`"full contents"`"multimap was");" is 138.,213
truth,com.google.common.truth,MultimapSubjectTest,containsKey_failsWithSameToString,Magic Number,The method contains a magic number: 2L,213
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntry,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=a>. " + "However` it has a mapping from <a> to <[A]>");" is 164.,280
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithNullValuePresentExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[null]}> contains entry <a=A>. " + "However` it has a mapping from <a> to <[null]>");" is 170.,291
truth,com.google.common.truth,MultimapSubjectTest,failContainsEntryWithPresentValueNullExpected,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{a=[A]}> contains entry <a=null>. " + "However` it has a mapping from <a> to <[A]>");" is 167.,303
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.builder().put(1`"1").put(1`1L).put(1L`1).put(2`3).build()).containsEntry(1`1);" is 125.,314
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[1` 1]` 1=[1]` 2=[3]}> contains entry " + "<1=1 (Map.Entry<java.lang.Integer` java.lang.Integer>)>. However` it does " + "contain entries <[1=1 (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=1 (Map.Entry<java.lang.Integer` java.lang.Long>)` "+ "1=1 (Map.Entry<java.lang.Long` java.lang.Integer>)]>");" is 394.,314
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 2,314
truth,com.google.common.truth,MultimapSubjectTest,containsEntry_failsWithSameToString,Magic Number,The method contains a magic number: 3,314
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 4,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 3,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKey,Magic Number,The method contains a magic number: 5,345
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,356
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,356
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 3,356
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,356
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,356
truth,com.google.common.truth,MultimapSubjectTest,valuesForKeyListMultimap,Magic Number,The method contains a magic number: 4,356
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,364
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,364
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 3,364
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,364
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn,Magic Number,The method contains a magic number: 4,364
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,373
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyNoArg,Magic Number,The method contains a magic number: 42,373
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Empty catch clause,The method has an empty catch block.,393
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,393
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,393
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 3,393
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,393
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRejectsNull,Magic Number,The method contains a magic number: 4,393
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 4,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicates,Magic Number,The method contains a magic number: 3,405
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 193.,415
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,415
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,415
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,415
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,415
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,415
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 183.,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 3,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureMissing,Magic Number,The method contains a magic number: 4,431
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 195.,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 3,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 4,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureExtra,Magic Number,The method contains a magic number: 5,449
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 237.,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 3,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 4,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureBoth,Magic Number,The method contains a magic number: 5,467
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}>");" is 177.,488
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]` =[]}> contains exactly <{a=[\"\" (empty String)]}>. " + "It has unexpected items <{\"\" (empty String)=[\"\" (empty String)]}>");" is 214.,498
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyFailureWithEmptyStringBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure().getMessage()).isEqualTo("Not true that <{a=[]}> contains exactly <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}> " + "and has unexpected items <{a=[\"\" (empty String)]}>");" is 239.,508
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 3,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrder,Magic Number,The method contains a magic number: 4,519
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,529
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,529
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,529
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,529
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,529
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(lenientFormat("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 153.,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 4,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailure,Magic Number,The method contains a magic number: 3,538
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 199.,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,553
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,571
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,571
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,571
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVararg,Magic Number,The method contains a magic number: 3,571
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,579
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,579
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,579
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,579
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 3,579
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargWithNull,Magic Number,The method contains a magic number: 4,579
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 183.,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 3,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureMissing,Magic Number,The method contains a magic number: 4,588
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 195.,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 5,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 3,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureExtra,Magic Number,The method contains a magic number: 4,607
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It is missing <{3=[six]` 4=[five]}> " + "and has unexpected items <{4=[nine]` 5=[eight]}>"`actual`expected));" is 237.,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 5,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 3,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargFailureBoth,Magic Number,The method contains a magic number: 4,626
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,648
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It has unexpected items <{3=[one]` 4=[five]}>"`actual`expected));" is 193.,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,656
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 3,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrder,Magic Number,The method contains a magic number: 4,672
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(lenientFormat("Not true that <%s> contains exactly <%s> in order. "`actual`expected));" is 153.,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 4,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailure,Magic Number,The method contains a magic number: 3,682
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains exactly <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 199.,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,699
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2L`"c"));" is 139.,719
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[1=a` 1=b` 2=c] (Map.Entry<java.lang.Long` java.lang.String>)> and " + "has unexpected items "+ "<[1=a` 1=b` 2=c] (Map.Entry<java.lang.Integer` java.lang.String>)>");" is 397.,719
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,719
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_homogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,719
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableMultimap.of(1`"a"`1`"b"`2L`"c")).containsExactlyEntriesIn(ImmutableMultimap.of(1L`"a"`1L`"b"`2`"c"));" is 139.,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Long Statement,The length of the statement "assertWithMessage("Full message: %s"`expectFailure.getFailure().getMessage()).that(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{1=[a` b]` 2=[c]}> contains exactly <{1=[a` b]` 2=[c]}>. It is " + "missing <[" + "1=a (Map.Entry<java.lang.Long` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Long` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Integer` java.lang.String>)]> "+ "and has unexpected items <["+ "1=a (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "1=b (Map.Entry<java.lang.Integer` java.lang.String>)` "+ "2=c (Map.Entry<java.lang.Long` java.lang.String>)]>");" is 607.,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2L,734
truth,com.google.common.truth,MultimapSubjectTest,containsExactlyEntriesIn_heterogeneousMultimap_failsWithSameToString,Magic Number,The method contains a magic number: 2,734
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 4,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 4,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 3,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEntriesIn,Magic Number,The method contains a magic number: 4,754
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastEmpty,Magic Number,The method contains a magic number: 3,764
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRejectsNull,Empty catch clause,The method has an empty catch block.,773
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRejectsNull,Magic Number,The method contains a magic number: 3,773
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRejectsNull,Magic Number,The method contains a magic number: 3,773
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRejectsNull,Magic Number,The method contains a magic number: 3,773
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRejectsNull,Magic Number,The method contains a magic number: 4,773
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRejectsNull,Magic Number,The method contains a magic number: 4,773
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 4,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 4,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 4,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 4,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicates,Magic Number,The method contains a magic number: 3,785
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains at least <%s>. " + "It is missing <{3=[one]` 4=[five]}>"`actual`expected));" is 184.,795
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,795
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,795
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,795
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,795
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,795
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains at least <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 184.,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 3,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 3,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 3,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 4,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 4,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 3,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 4,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureMissing,Magic Number,The method contains a magic number: 50,811
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastFailureWithEmptyStringMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{key=[value]}> contains at least <{\"\" (empty String)=[a]}>. " + "It is missing <{\"\" (empty String)=[a]}>");" is 193.,830
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 4,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 4,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 3,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 4,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrder,Magic Number,The method contains a magic number: 4,841
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 3,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderDifferentTypes,Magic Number,The method contains a magic number: 4,851
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(lenientFormat("Not true that <%s> contains at least <%s> in order. "`actual`expected));" is 154.,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 4,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 4,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 4,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailure,Magic Number,The method contains a magic number: 3,861
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains at least <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 200.,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,877
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVararg,Magic Number,The method contains a magic number: 3,895
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVararg,Magic Number,The method contains a magic number: 3,895
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVararg,Magic Number,The method contains a magic number: 3,895
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVararg,Magic Number,The method contains a magic number: 3,895
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVararg,Magic Number,The method contains a magic number: 3,895
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargWithNull,Magic Number,The method contains a magic number: 3,903
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargWithNull,Magic Number,The method contains a magic number: 3,903
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargWithNull,Magic Number,The method contains a magic number: 4,903
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargWithNull,Magic Number,The method contains a magic number: 3,903
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargWithNull,Magic Number,The method contains a magic number: 4,903
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains at least <%s>. " + "It is missing <{3=[six]` 4=[five]}>"`actual`expected));" is 184.,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 4,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 4,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 4,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 3,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 4,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargFailureMissing,Magic Number,The method contains a magic number: 4,912
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 4,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicates,Magic Number,The method contains a magic number: 3,932
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains at least <%s>. " + "It is missing <{3=[one [2 copies]]}>"`actual`expected));" is 185.,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 3,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargRespectsDuplicatesFailure,Magic Number,The method contains a magic number: 4,940
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 3,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 3,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 3,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 4,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 4,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 3,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 3,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 4,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrder,Magic Number,The method contains a magic number: 4,957
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().startsWith(lenientFormat("Not true that <%s> contains at least <%s> in order. "`actual`expected));" is 154.,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 4,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 4,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 4,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 4,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 4,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailure,Magic Number,The method contains a magic number: 3,965
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo(lenientFormat("Not true that <%s> contains at least <%s> in order. " + "The values for keys <[3]> are not in order"`actual`expected));" is 200.,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 3,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,containsAtLeastVarargInOrderFailureValuesOnly,Magic Number,The method contains a magic number: 4,983
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_success,Magic Number,The method contains a magic number: 789,1003
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`123);" is 124.,1012
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <def> and a value that parses to <123>. " + "However` it has a mapping from that key to <[+456` +789]>");" is 261.,1012
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsExpectedKeyHasWrongValues,Magic Number,The method contains a magic number: 123,1012
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`789);" is 124.,1027
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <789>. " + "However` the following keys are mapped to such values: <[def]>");" is 266.,1027
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsWrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 789,1027
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("xyz"`321);" is 124.,1042
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> contains at least one entry with " + "key <xyz> and a value that parses to <321>");" is 197.,1042
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_failsMissingExpectedKeyAndValue,Magic Number,The method contains a magic number: 321,1042
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_expectedKeyHasWrongValues,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=[one]` 2=[two` deux` null]}> contains at least one entry with key <2> " + "and a value that equals (ignoring case) <ZWEI>. However` it has a mapping from that " + "key to <[two` deux` null]>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 322.,1056
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_expectedKeyHasWrongValues,Magic Number,The method contains a magic number: 2,1056
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_expectedKeyHasWrongValues,Magic Number,The method contains a magic number: 2,1056
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_expectedKeyHasWrongValues,Magic Number,The method contains a magic number: 2,1056
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_expectedKeyHasWrongValues,Magic Number,The method contains a magic number: 2,1056
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_wrongKeyHasExpectedValue,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=[one]` 3=[two` null` zwei]}> contains at least one entry with key <2> " + "and a value that equals (ignoring case) <ZWEI>. However` the following keys are " + "mapped to such values: <[3]>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 320.,1079
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_wrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 3,1079
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_wrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 3,1079
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_wrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 3,1079
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_wrongKeyHasExpectedValue,Magic Number,The method contains a magic number: 2,1079
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing values"`"first exception"`"comparing contents by testing that at least one entry had a key equal to the expected key " + "and a value that equals (ignoring case) the expected value"`"expected key"`"expected value"`"but was");" is 295.,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1103
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsEntry("def"`789);" is 124.,1131
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=[+123]` def=[+456` 789]}> contains at least one entry with key <def> " + "and a value that parses to <789>. However` it has a mapping from that key to " + "<[+456` 789]>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 303.,1131
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,1131
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,1131
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successExcludeKeyHasWrongValues,Magic Number,The method contains a magic number: 123,1149
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successWrongKeyHasExcludedValue,Magic Number,The method contains a magic number: 789,1158
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_successMissingExcludedKeyAndValue,Magic Number,The method contains a magic number: 321,1167
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`789);" is 130.,1176
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+456` +789]}> did not contain an entry with " + "key <def> and a value that parses to <789>. " + "It maps that key to the following such values: <[+789]>");" is 256.,1176
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_failure,Magic Number,The method contains a magic number: 789,1176
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didContainEntry,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=[one]` 2=[two` null` zwei]}> did not contain an entry with key <2> and " + "a value that equals (ignoring case) <ZWEI>. It maps that key to the following such " + "values: <[zwei]>"`"additionally` one or more exceptions were thrown while comparing values"`"first exception");" is 312.,1191
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didContainEntry,Magic Number,The method contains a magic number: 2,1191
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didContainEntry,Magic Number,The method contains a magic number: 2,1191
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didContainEntry,Magic Number,The method contains a magic number: 2,1191
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didContainEntry,Magic Number,The method contains a magic number: 2,1191
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didNotContainEntry,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing values"`"first exception"`"comparing contents by testing that no entry had the forbidden key and a value that " + "equals (ignoring case) the forbidden value"`"forbidden key"`"forbidden value"`"but was");" is 274.,1214
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didNotContainEntry,Magic Number,The method contains a magic number: 2,1214
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didNotContainEntry,Magic Number,The method contains a magic number: 2,1214
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didNotContainEntry,Magic Number,The method contains a magic number: 2,1214
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_handlesException_didNotContainEntry,Magic Number,The method contains a magic number: 2,1214
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).doesNotContainEntry("def"`789);" is 130.,1241
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing values"`"first exception"`"comparing contents by testing that no entry had the forbidden key and a value that " + "parses to the forbidden value"`"forbidden key"`"forbidden value"`"but was");" is 261.,1241
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,1241
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_doesNotContainEntry_wrongTypeInActual,Magic Number,The method contains a magic number: 789,1241
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1263
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,1263
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 128,1263
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 64,1263
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_success,Magic Number,The method contains a magic number: 123,1263
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1274
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,1274
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,1274
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 128,1274
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,1274
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_missingKey,Magic Number,The method contains a magic number: 123,1274
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1293
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1293
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,1293
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,1293
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 128,1293
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_extraKey,Magic Number,The method contains a magic number: 64,1293
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 64,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 123,1311
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=[one]` 2=[null` deux` zwei]}> contains exactly one element that has a " + "key that is equal to and a value that equals (ignoring case) the key and value of " + "each element of <[1=ONE` 2=TWO` 2=DEUX` 2=ZWEI]>. It is missing an element that has "+ "a key that is equal to and a value that equals (ignoring case) the key and value of "+ "<2=TWO> and has unexpected elements <[2=null]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 518.,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(2=null` 2=TWO) threw java.lang.NullPointerException");" is 123.,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1335
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(CASE_INSENSITIVE_EQUALITY_HALF_NULL_SAFE).containsExactlyEntriesIn(expected);" is 135.,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that each element has a key that is equal to and a value " + "that equals (ignoring case) the key and value of an expected value"`"expected"`"but was");" is 281.,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(2=null` 2=TWO) threw java.lang.NullPointerException");" is 123.,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1360
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.<String`Object>of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`999);" is 133.,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected);" is 134.,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=[+123]` def=[+64` 0x40` 999]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=123` def=64` abc=123]>. It is missing an element that has "+ "a key that is equal to and a value that parses to the key and value of <def=123> "+ "and has unexpected elements <[def=999]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 502.,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(def=999` def=64) threw java.lang.ClassCastException");" is 123.,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 999,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1392
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1415
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1415
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1415
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1415
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 128,1415
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1426
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactlyEntriesIn(expected).inOrder();" is 144.,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1446
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactlyNoArgs,Long Statement,The length of the statement "expectFailureWhenTestingThat(ImmutableListMultimap.of("abc"`"+123")).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly();" is 149.,1466
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1484
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 136.,1484
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1484
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 128,1484
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 64,1484
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_success,Magic Number,The method contains a magic number: 123,1484
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64`"abc"`123);" is 154.,1493
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]}> contains exactly one element that has a " + "key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 405.,1493
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1493
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 128,1493
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 64,1493
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_missingKey,Magic Number,The method contains a magic number: 123,1493
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1510
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`64);" is 144.,1510
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element " + "that has a key that is equal to and a value that parses to the key and value " + "of each element of <[def=64` def=128` def=64]>. It has unexpected elements "+ "<[abc=+123]>");" is 329.,1510
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1510
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 128,1510
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_extraKey,Magic Number,The method contains a magic number: 64,1510
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`128`"def"`128`"abc"`123);" is 155.,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` and every element it contains matches "+ "at least one expected element` but there was no 1:1 mapping between all the "+ "actual and expected elements. Using the most complete 1:1 mapping (or one such "+ "mapping` if there is a tie)` it is missing an element that has a key that is "+ "equal to and a value that parses to the key and value of <def=128> and has "+ "unexpected elements ";" is 711.,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isAnyOf(expectedPreamble + "<[def=+64]>"`expectedPreamble + "<[def=0x40]>");" is 132.,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 64,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 128,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongValueForKey,Magic Number,The method contains a magic number: 123,1526
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.<String`Object>of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`999);" is 133.,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`123`"def"`64`"abc"`123);" is 154.,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=[+123]` def=[+64` 0x40` 999]}> contains exactly one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=123` def=64` abc=123]>. It is missing an element that has "+ "a key that is equal to and a value that parses to the key and value of <def=123> "+ "and has unexpected elements <[def=999]>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 502.,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(def=999` def=64) threw java.lang.ClassCastException");" is 123.,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 999,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1548
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1569
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`64`"def"`128);" is 136.,1569
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 123,1569
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1569
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 64,1569
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_success,Magic Number,The method contains a magic number: 128,1569
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("def"`64`"def"`64`"def"`128`"abc"`123).inOrder();" is 164.,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1578
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsExactly("abc"`123`"def"`64`"def"`128`"def"`64).inOrder();" is 164.,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("contents match` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected"`"but was");" is 231.,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsExactly_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1596
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1614
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_success,Magic Number,The method contains a magic number: 64,1614
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_success,Magic Number,The method contains a magic number: 128,1614
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_success,Magic Number,The method contains a magic number: 123,1614
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1625
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]` abc=[+99]}> contains at least one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 417.,1625
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,1625
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_missingKey,Magic Number,The method contains a magic number: 128,1625
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_missingKey,Magic Number,The method contains a magic number: 64,1625
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_missingKey,Magic Number,The method contains a magic number: 123,1625
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 121.,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]}> contains at least one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` but there was no 1:1 mapping between "+ "all the expected elements and any subset of the actual elements. Using the most "+ "complete 1:1 mapping (or one such mapping` if there is a tie)` it is missing an "+ "element that has a key that is equal to and a value that parses to the key and "+ "value of ";" is 628.,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 64,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 128,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongValueForKey,Magic Number,The method contains a magic number: 123,1644
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Long Statement,The length of the statement "assertFailureKeys("Not true that <{1=[one]` 2=[null` deux` zwei]}> contains at least one element that has a " + "key that is equal to and a value that equals (ignoring case) the key and value of " + "each element of <[1=ONE` 2=TWO` 2=DEUX]>. It is missing an element that has "+ "a key that is equal to and a value that equals (ignoring case) the key and value of "+ "<2=TWO>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 472.,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(2=null` 2=TWO) threw java.lang.NullPointerException");" is 123.,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException,Magic Number,The method contains a magic number: 2,1667
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(CASE_INSENSITIVE_EQUALITY_HALF_NULL_SAFE).containsAtLeastEntriesIn(expected);" is 135.,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Long Statement,The length of the statement "assertFailureKeys("one or more exceptions were thrown while comparing elements"`"first exception"`"comparing contents by testing that each element has a key that is equal to and a value " + "that equals (ignoring case) the key and value of an expected value"`"expected"`"but was");" is 281.,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(2=null` 2=TWO) threw java.lang.NullPointerException");" is 123.,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_handlesException_alwaysFails,Magic Number,The method contains a magic number: 2,1692
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.<String`Object>of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`999);" is 133.,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected);" is 134.,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=[+123]` def=[+64` 0x40` 999]}> contains at least one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=123` def=64` abc=123]>. It is missing an element that has "+ "a key that is equal to and a value that parses to the key and value of <def=123>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 459.,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(def=999` def=64) threw java.lang.ClassCastException");" is 123.,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 999,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1724
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("def"`"+64"`"abc"`"+123"`"def"`"0x40"`"m"`"+1"`"def"`"+128");" is 130.,1746
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1746
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 64,1746
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 128,1746
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_success,Magic Number,The method contains a magic number: 123,1746
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"m"`"+1"`"def"`"0x40"`"def"`"+128");" is 130.,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected).inOrder();" is 144.,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected order for required elements"`"but was");" is 277.,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1758
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"m"`"+1"`"def"`"0x40"`"def"`"+128");" is 130.,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeastEntriesIn(expected).inOrder();" is 144.,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected order for required elements"`"but was");" is 277.,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeastEntriesIn_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1780
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"m"`"+1"`"def"`"0x40"`"def"`"+128");" is 130.,1802
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`64`"def"`128`"def"`64`"abc"`123);" is 136.,1802
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_success,Magic Number,The method contains a magic number: 64,1802
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_success,Magic Number,The method contains a magic number: 128,1802
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_success,Magic Number,The method contains a magic number: 64,1802
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_success,Magic Number,The method contains a magic number: 123,1802
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_missingKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`64`"def"`128`"def"`64`"abc"`123);" is 154.,1812
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_missingKey,Long Statement,The length of the statement "assertThat(expectFailure.getFailure()).hasMessageThat().isEqualTo("Not true that <{def=[+64` 0x40` +128]` m=[+1]}> contains at least one element that " + "has a key that is equal to and a value that parses to the key and value of each " + "element of <[def=64` def=128` def=64` abc=123]>. It is missing an element "+ "that has a key that is equal to and a value that parses to the key and value "+ "of <abc=123>");" is 414.,1812
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_missingKey,Magic Number,The method contains a magic number: 64,1812
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_missingKey,Magic Number,The method contains a magic number: 128,1812
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_missingKey,Magic Number,The method contains a magic number: 64,1812
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_missingKey,Magic Number,The method contains a magic number: 123,1812
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"m"`"+1"`"def"`"0x40"`"def"`"+128");" is 130.,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`64`"def"`128`"def"`128`"abc"`123);" is 155.,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Long Statement,The length of the statement "String expectedPreamble="Not true that <{abc=[+123]` def=[+64` 0x40` +128]` m=[+1]}> contains at least one element " + "that has a key that is equal to and a value that parses to the key and value of " + "each element of <[def=64` def=128` def=128` abc=123]>. It contains at least one "+ "element that matches each expected element` but there was no 1:1 mapping between "+ "all the expected elements and any subset of the actual elements. Using the most "+ "complete 1:1 mapping (or one such mapping` if there is a tie)` it is missing an "+ "element that has a key that is equal to and a value that parses to the key and "+ "value of ";" is 636.,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Magic Number,The method contains a magic number: 64,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Magic Number,The method contains a magic number: 128,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Magic Number,The method contains a magic number: 128,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongValueForKey,Magic Number,The method contains a magic number: 123,1829
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Long Statement,The length of the statement "ImmutableListMultimap<String`Object> actual=ImmutableListMultimap.<String`Object>of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"def"`999`"m"`"+1");" is 142.,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`64`"def"`123`"def"`64`"abc"`123);" is 154.,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Long Statement,The length of the statement "assertFailureKeys("Not true that <{abc=[+123]` def=[+64` 0x40` 999]` m=[+1]}> contains at least one element " + "that has a key that is equal to and a value that parses to the key and value of " + "each element of <[def=64` def=123` def=64` abc=123]>. It is missing an element that "+ "has a key that is equal to and a value that parses to the key and value of "+ "<def=123>"`"additionally` one or more exceptions were thrown while comparing elements"`"first exception");" is 471.,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Long Statement,The length of the statement "assertThatFailure().factValue("first exception").startsWith("compare(def=999` def=64) threw java.lang.ClassCastException");" is 123.,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Magic Number,The method contains a magic number: 999,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Magic Number,The method contains a magic number: 64,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_wrongTypeInActual,Magic Number,The method contains a magic number: 123,1851
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"m"`"+1"`"def"`"0x40"`"def"`"+128");" is 130.,1872
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Long Statement,The length of the statement "assertThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("abc"`123`"def"`64`"def"`64`"def"`128);" is 136.,1872
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 123,1872
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 64,1872
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 64,1872
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_success,Magic Number,The method contains a magic number: 128,1872
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"def"`"+64"`"def"`"0x40"`"m"`"+1"`"def"`"+128");" is 130.,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("def"`64`"def"`64`"def"`128`"abc"`123).inOrder();" is 164.,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected order for required elements"`"but was");" is 277.,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 64,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 128,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongKeyOrder,Magic Number,The method contains a magic number: 123,1882
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Long Statement,The length of the statement "ImmutableListMultimap<String`String> actual=ImmutableListMultimap.of("abc"`"+123"`"m"`"+1"`"def"`"+64"`"def"`"0x40"`"def"`"+128");" is 130.,1902
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Long Statement,The length of the statement "expectFailureWhenTestingThat(actual).comparingValuesUsing(STRING_PARSES_TO_INTEGER_CORRESPONDENCE).containsAtLeast("abc"`123`"def"`64`"def"`128`"def"`64).inOrder();" is 164.,1902
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Long Statement,The length of the statement "assertFailureKeys("required elements were all found` but order was wrong"`"comparing contents by testing that each element " + "has a key that is equal to and a value that parses to the key and value of " + "an expected value"`"expected order for required elements"`"but was");" is 277.,1902
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 123,1902
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1902
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 128,1902
truth,com.google.common.truth,MultimapSubjectTest,comparingValuesUsing_containsAtLeast_inOrder_wrongValueOrder,Magic Number,The method contains a magic number: 64,1902
truth,com.google.common.truth,StandardSubjectBuilderTest,failNullMessage,Empty catch clause,The method has an empty catch block.,40
truth,com.google.common.truth,StackTraceCleaner,clean,Complex Method,Cyclomatic complexity of the method is 13,67
truth,com.google.common.truth,StackTraceCleaner,clean,Long Statement,The length of the statement "if (stackTraceElementWrapper.getStackFrameType() == StackFrameType.TEST_FRAMEWORK || stackTraceElementWrapper.getStackFrameType() == StackFrameType.REFLECTION) {" is 161.,67
truth,com.google.common.truth,StackTraceCleaner,isTruthEntrance,Long Identifier,The length of the field STANDARD_SUBJECT_BUILDER_CLASS is 30.,200
truth,com.google.common.truth,StackTraceCleaner,isTruthEntrance,Long Statement,The length of the statement "return isFromClassOrClassNestedInside(stackTraceElement`SUBJECT_CLASS) || isFromClassDirectly(stackTraceElement`STANDARD_SUBJECT_BUILDER_CLASS);" is 144.,200
truth,com.google.common.truth,StackTraceCleaner,createStreakReplacementFrame,Long Statement,The length of the statement "return new StackTraceElementWrapper(new StackTraceElement("[[" + stackFrameType.getName() + ": "+ length+ " frames collapsed ("+ CLEANER_LINK+ ")]]"`""`""`0)`stackFrameType);" is 174.,317
truth,com.google.common.truth,TruthJUnit,fail,Long Statement,The length of the statement "ThrowableAssumptionViolatedException assumptionViolated=new ThrowableAssumptionViolatedException(failure.getMessage()`failure.getCause());" is 138.,47
truth,com.google.common.truth,DoubleSubject,isWithin,Long Statement,The length of the statement "failWithoutActual(fact("expected"`doubleToString(expected))`butWas()`fact("outside tolerance"`doubleToString(tolerance)));" is 122.,85
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithoutActual(fact("expected"`doubleToString(expected))`butWas()`fact("outside tolerance"`doubleToString(tolerance)));" is 122.,109
truth,com.google.common.truth,DoubleSubject,isNotWithin,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`doubleToString(expected))`butWas()`fact("within tolerance"`doubleToString(tolerance)));" is 131.,126
truth,com.google.common.truth,DoubleSubject,of,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`doubleToString(expected))`butWas()`fact("within tolerance"`doubleToString(tolerance)));" is 131.,148
truth,com.google.common.truth,DoubleSubject,isFinite,Complex Conditional,The conditional expression actual == null || actual.isNaN() || actual.isInfinite() is complex.,254
truth,com.google.common.truth,ThrowableSubject,hasMessageThat,Long Statement,The length of the statement "check=check.withMessage("(Note from Truth: When possible` instead of asserting on the full message` assert" + " about individual facts by using ExpectFailure.assertThat.)");" is 173.,49
truth,com.google.common.truth,StringSubject,doesNotContainMatch,Long Statement,The length of the statement "failWithoutActual(fact("expected not to contain a match for"`regex)`fact("but contained"`matcher.group())`fact("full string"`actualCustomStringRepresentationForPackageMembersToCall()));" is 185.,166
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Long Statement,The length of the statement "checkArgument(expected instanceof Double || expected instanceof Float || expected instanceof Integer|| expected instanceof Long`"Expected value in assertion using exact double equality was of unsupported type %s " + "(it may not have an exact double representation)"`expected.getClass());" is 288.,132
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Long Statement,The length of the statement "checkArgument(Math.abs((Long)expected) <= 1L << 53`"Expected value %s in assertion using exact double equality was a long with an absolute " + "value greater than 2^52 which has no exact double representation"`expected);" is 220.,132
truth,com.google.common.truth,PrimitiveDoubleArraySubject,checkedToDouble,Magic Number,The method contains a magic number: 53,132
truth,com.google.common.truth,PrimitiveDoubleArraySubject,iterableSubject,Long Statement,The length of the statement "return checkNoNeedToDisplayBothValues("asList()").about(iterablesWithCustomDoubleToString()).that(Doubles.asList(actual));" is 122.,234
truth,com.google.common.truth,SubjectUtils,accumulate,Magic Number,The method contains a magic number: 2,52
truth,com.google.common.truth,SubjectUtils,countDuplicatesAndAddTypeInfo,Long Statement,The length of the statement "return homogeneousTypeName.isPresent() ? lenientFormat("%s (%s)"`countDuplicates(items)`homogeneousTypeName.get()) : countDuplicates(addTypeInfoToEveryItem(items));" is 164.,102
truth,com.google.common.truth,SubjectUtils,countDuplicatesAndMaybeAddTypeInfoReturnObject,Long Statement,The length of the statement "NonHashingMultiset<?> valuesWithCountsAndMaybeTypes=homogeneousTypeName.isPresent() ? countDuplicatesToMultiset(items) : countDuplicatesToMultiset(addTypeInfoToEveryItem(items));" is 178.,119
truth,com.google.common.truth,SubjectUtils,annotateEmptyStrings,Long Identifier,The length of the field HUMAN_UNDERSTANDABLE_EMPTY_STRING is 33.,361
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains entry <%s (%s)>. However` it does contain entries " + "<%s>"`actualCustomStringRepresentationForPackageMembersToCall()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual.entries()`entryList)))));" is 306.,116
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains entry <%s>. However` it has a mapping from <%s>" + " to <%s>"`actualCustomStringRepresentationForPackageMembersToCall()`entry`key`actual.asMap().get(key))));" is 229.,116
truth,com.google.common.truth,MultimapSubject,containsEntry,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualCustomStringRepresentationForPackageMembersToCall()`entry`value`keys)));" is 219.,116
truth,com.google.common.truth,MultimapSubject,isEqualTo,Complex Conditional,The conditional expression (actual instanceof ListMultimap && other instanceof SetMultimap) || (actual instanceof SetMultimap && other instanceof ListMultimap) is complex.,192
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "if ((actual instanceof ListMultimap && other instanceof SetMultimap) || (actual instanceof SetMultimap && other instanceof ListMultimap)) {" is 139.,192
truth,com.google.common.truth,MultimapSubject,isEqualTo,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that %s <%s> is equal to %s <%s>. " + "A %s cannot equal a %s if either is non-empty."`mapType1`actualCustomStringRepresentationForPackageMembersToCall()`mapType2`other`mapType1`mapType2)));" is 243.,192
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains exactly <%s>. " + "It is missing <%s> and has unexpected items <%s>"`actualCustomStringRepresentationForPackageMembersToCall()`annotateEmptyStringsMultimap(expectedMultimap)`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStringsMultimap(missing).entries()) : countDuplicatesMultimap(annotateEmptyStringsMultimap(missing))`addTypeInfo ? countDuplicatesAndAddTypeInfo(annotateEmptyStringsMultimap(extra).entries()) : countDuplicatesMultimap(annotateEmptyStringsMultimap(extra)))));" is 561.,225
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains exactly"`annotateEmptyStringsMultimap(expectedMultimap)`"is missing"`countDuplicatesMultimap(annotateEmptyStringsMultimap(missing)));" is 162.,225
truth,com.google.common.truth,MultimapSubject,containsExactlyEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains exactly"`annotateEmptyStringsMultimap(expectedMultimap)`"has unexpected items"`countDuplicatesMultimap(annotateEmptyStringsMultimap(extra)));" is 170.,225
truth,com.google.common.truth,MultimapSubject,containsAtLeastEntriesIn,Long Statement,The length of the statement "failWithBadResults("contains at least"`annotateEmptyStringsMultimap(expectedMultimap)`"is missing"`countDuplicatesMultimap(annotateEmptyStringsMultimap(missing)));" is 163.,284
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,342
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,MultimapSubject,accumulateMultimap,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,TruthFailureSubject,doFactValue,Long Identifier,The length of the field HOW_TO_TEST_KEYS_WITHOUT_VALUES is 31.,126
truth,com.google.common.truth,TruthFailureSubject,doFactValue,Long Statement,The length of the statement "failWithoutActual(simpleFact("expected to have a value")`fact("for key"`key)`simpleFact("but the key was present with no value")`HOW_TO_TEST_KEYS_WITHOUT_VALUES);" is 162.,126
truth,com.google.common.truth,TruthFailureSubject,doFactValue,Long Statement,The length of the statement "failWithoutActual(simpleFact("expected to have a value")`fact("for key"`key)`fact("and index"`index)`simpleFact("but the key was present with no value")`HOW_TO_TEST_KEYS_WITHOUT_VALUES);" is 186.,126
truth,com.google.common.truth,Subject,standardIsNotEqualTo,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`unexpectedAsString)`fact("but was; string representation of actual value"`actualCustomStringRepresentation()));" is 155.,184
truth,com.google.common.truth,Subject,compareForEquality,Complex Method,Cyclomatic complexity of the method is 8,200
truth,com.google.common.truth,Subject,isInstanceOf,Long Statement,The length of the statement "throw new UnsupportedOperationException(actualCustomStringRepresentation() + "` an instance of " + actual.getClass().getName()+ "` may or may not be an instance of "+ clazz.getName()+ ". Under -XdisableClassMetadata` we do not have enough information to tell.");" is 262.,284
truth,com.google.common.truth,Subject,isInstanceOf,Long Statement,The length of the statement "failWithoutActual(fact("expected instance of"`clazz.getName())`fact("but was instance of"`actual.getClass().getName())`fact("with value"`actualCustomStringRepresentation()));" is 174.,284
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 2,407
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 4,407
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 0xf,407
truth,com.google.common.truth,Subject,base16,Magic Number,The method contains a magic number: 0xf,407
truth,com.google.common.truth,Subject,apply,Complex Method,Cyclomatic complexity of the method is 10,423
truth,com.google.common.truth,Subject,checkByteArrayEquals,Long Statement,The length of the statement "return ComparisonResult.differentWithDescription(fact("expected"`Arrays.toString(expected))`fact("but was"`Arrays.toString(actual)));" is 133.,504
truth,com.google.common.truth,Subject,checkArrayEqualsRecursive,Complex Conditional,The conditional expression actual != null && actual.getClass().isArray() && expected != null && expected.getClass().isArray() is complex.,517
truth,com.google.common.truth,Subject,checkArrayEqualsRecursive,Long Statement,The length of the statement "return ComparisonResult.differentWithDescription(indexFact`fact("expected"`expectedLength)`fact("but was"`actualLength));" is 121.,517
truth,com.google.common.truth,Subject,arrayType,Complex Method,Cyclomatic complexity of the method is 9,566
truth,com.google.common.truth,Subject,failEqualityCheck,Complex Conditional,The conditional expression equalityCheck == EqualityCheck.EQUAL && actual != null && expected != null is complex.,805
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "String doppelgangerDescription=equal ? "(different but equal instance of same class with same string representation)" : "(non-equal instance of same class with same string representation)";" is 189.,805
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "failEqualityCheckNoComparisonFailure(difference`fact(equalityCheck.keyForExpected`expectedString)`fact("but was"`doppelgangerDescription));" is 139.,805
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "failEqualityCheckNoComparisonFailure(difference`fact(equalityCheck.keyForExpected`expectedString)`fact("an instance of"`expectedClass)`fact("but was"`"(non-equal value with same string representation)")`fact("an instance of"`actualClass));" is 239.,805
truth,com.google.common.truth,Subject,failEqualityCheck,Long Statement,The length of the statement "failEqualityCheckNoComparisonFailure(difference`fact(equalityCheck.keyForExpected`expectedString)`fact("but was"`actualString));" is 128.,805
truth,com.google.common.truth,Subject,failWithBadResults,Long Statement,The length of the statement "String message=lenientFormat("Not true that <%s> %s <%s>. It %s <%s>"`actualCustomStringRepresentation()`verb`expected`failVerb`(actual == null) ? "null reference" : actual);" is 174.,865
truth,com.google.common.truth,Subject,typeDescriptionOrGuess,Long Statement,The length of the statement "String actualClass=(subjectClass.endsWith("Subject") && !subjectClass.equals("Subject")) ? subjectClass.substring(0`subjectClass.length() - "Subject".length()) : "Object";" is 171.,1026
truth,com.google.common.truth,FailureMetadata,failEqualityCheck,Long Statement,The length of the statement "doFail(ComparisonFailureWithFacts.create(evaluateAll(messages)`concat(description()`headFacts)`concat(tailFacts`rootUnlessThrowable())`expected`actual`rootCause()));" is 165.,167
truth,com.google.common.truth,FailureMetadata,fail,Long Statement,The length of the statement "doFail(AssertionErrorWithFacts.create(evaluateAll(messages)`concat(description()`facts`rootUnlessThrowable())`rootCause()));" is 124.,182
truth,com.google.common.truth,FailureMetadata,rootUnlessThrowable,Long Statement,The length of the statement "return seenDerivation ? ImmutableList.of(fact(rootSubject.subject.typeDescription() + " was"`rootSubject.subject.actualCustomStringRepresentationForPackageMembersToCall())) : ImmutableList.<Fact>of();" is 200.,248
truth,com.google.common.truth,ActualValueInference,isThatOrAssertThat,Long Statement,The length of the statement "return (owner.equals("com/google/common/truth/Truth") && name.equals("assertThat")) || (owner.equals("com/google/common/truth/StandardSubjectBuilder") && name.equals("that")) || (owner.equals("com/google/common/truth/SimpleSubjectBuilder") && name.equals("that"));" is 264.,1447
truth,com.google.common.truth,ActualValueInference,isBoxing,Long Statement,The length of the statement "return name.equals("valueOf") && PRIMITIVE_WRAPPERS.contains(owner) && !Type.getArgumentTypes(desc)[0].equals(Type.getType(String.class));" is 138.,1461
truth,com.google.common.truth,ActualValueInference,closeQuietly,Empty catch clause,The method has an empty catch block.,1499
truth,com.google.common.truth,AssertionErrorWithFacts,AssertionErrorWithFacts,Empty catch clause,The method has an empty catch block.,39
truth,com.google.common.truth,StandardSubjectBuilder,StandardSubjectBuilder,Long Identifier,The length of the field metadataDoNotReferenceDirectly is 30.,63
truth,com.google.common.truth,StandardSubjectBuilder,metadata,Long Identifier,The length of the field metadataDoNotReferenceDirectly is 30.,243
truth,com.google.common.truth,Platform,inferDescription,Long Statement,The length of the statement "return (String)Class.forName("com.google.common.truth.ActualValueInference").getDeclaredMethod("describeActualValue"`String.class`String.class`int.class).invoke(null`top.getClassName()`top.getMethodName()`top.getLineNumber());" is 226.,76
truth,com.google.common.truth,Platform,inferDescription,Long Statement,The length of the statement "catch ( IllegalAccessException|InvocationTargetException|NoSuchMethodException|ClassNotFoundException|LinkageError|RuntimeException e) {" is 136.,76
truth,com.google.common.truth,Platform,makeDiff,Magic Number,The method contains a magic number: 3,127
truth,com.google.common.truth,Platform,makeDiff,Magic Number,The method contains a magic number: 2,127
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(!(expected instanceof Double)`"Expected value in assertion using exact float equality was a double` which is not " + "supported as a double may not have an exact float representation");" is 199.,131
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(expected instanceof Float || expected instanceof Integer || expected instanceof Long`"Expected value in assertion using exact float equality was of unsupported type %s " + "(it may not have an exact float representation)"`expected.getClass());" is 257.,131
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(Math.abs((Integer)expected) <= 1 << 24`"Expected value %s in assertion using exact float equality was an int with an absolute " + "value greater than 2^24 which has no exact float representation"`expected);" is 220.,131
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Long Statement,The length of the statement "checkArgument(Math.abs((Long)expected) <= 1L << 24`"Expected value %s in assertion using exact float equality was a long with an absolute " + "value greater than 2^24 which has no exact float representation"`expected);" is 218.,131
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Magic Number,The method contains a magic number: 24,131
truth,com.google.common.truth,PrimitiveFloatArraySubject,checkedToFloat,Magic Number,The method contains a magic number: 24,131
truth,com.google.common.truth,Platform,isInstanceOfType,Long Statement,The length of the statement "throw new UnsupportedOperationException("Under GWT` we can't determine whether an object is an instance of an interface Class");" is 128.,36
truth,com.google.common.truth,ComparisonFailureWithFacts,create,Long Parameter List,The method has 6 parameters. ,41
truth,com.google.common.truth,ComparisonFailureWithFacts,ComparisonFailureWithFacts,Long Parameter List,The method has 5 parameters. ,54
truth,com.google.common.truth,ComparisonFailureWithFacts,removeCommonPrefixAndSuffix,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,ComparisonFailureWithFacts,removeCommonPrefixAndSuffix,Magic Number,The method contains a magic number: 3,108
truth,com.google.common.truth,ComparisonFailureWithFacts,validSurrogatePairAt,Long Statement,The length of the statement "return index >= 0 && index <= (string.length() - 2) && isHighSurrogate(string.charAt(index)) && isLowSurrogate(string.charAt(index + 1));" is 137.,154
truth,com.google.common.truth,ComparisonFailureWithFacts,validSurrogatePairAt,Magic Number,The method contains a magic number: 2,154
truth,com.google.common.truth,MapSubject,containsEntry,Complex Method,Cyclomatic complexity of the method is 9,111
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains entry <%s (%s)>. However` it does contain keys " + "<%s>."`actualCustomStringRepresentationForPackageMembersToCall()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual.keySet()`keyList)))));" is 301.,111
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains entry <%s (%s)>. However` it does contain values " + "<%s>."`actualCustomStringRepresentationForPackageMembersToCall()`entry`objectToTypeName(entry)`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual.values()`valueList)))));" is 305.,111
truth,com.google.common.truth,MapSubject,containsEntry,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> contains entry <%s>. " + "However` the following keys are mapped to <%s>: %s"`actualCustomStringRepresentationForPackageMembersToCall()`entry`value`keys)));" is 219.,111
truth,com.google.common.truth,MapSubject,accumulateMap,Long Statement,The length of the statement "checkArgument(rest.length % 2 == 0`"There must be an equal number of key/value pairs " + "(i.e.` the number of key/value parameters (%s) must be even)."`rest.length + 2);" is 170.,207
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,MapSubject,accumulateMap,Magic Number,The method contains a magic number: 2,207
truth,com.google.common.truth,MapSubject,containsEntriesInAnyOrder,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> %s <%s>. It %s"`actualCustomStringRepresentationForPackageMembersToCall()`failVerb`expectedMap`diff.describe(VALUE_DIFFERENCE_FORMAT))));" is 200.,267
truth,com.google.common.truth,MapSubject,apply,Long Statement,The length of the statement "return lenientFormat("(expected %s but got %s)"`includeTypes ? new TypedToStringWrapper(values.expected) : values.expected`includeTypes ? new TypedToStringWrapper(values.actual) : values.actual);" is 195.,401
truth,com.google.common.truth,ExpectFailure,ensureFailureCaught,Long Statement,The length of the statement "throw new AssertionError("ExpectFailure.whenTesting() invoked` but no failure was caught." + Platform.EXPECT_FAILURE_WARNING_IF_GWT);" is 133.,120
truth,com.google.common.truth,ExpectFailure,captureFailure,Long Statement,The length of the statement "throw new AssertionError(lenientFormat("ExpectFailure.whenTesting() caught multiple failures:\n\n%s\n\n%s\n"`Platform.getStackTraceAsString(failure)`Platform.getStackTraceAsString(captured)));" is 192.,140
truth,com.google.common.truth,Correspondence,equals,Long Statement,The length of the statement "throw new UnsupportedOperationException("Correspondence.equals(object) is not supported. If you meant to compare objects` use" + " .compare(actual` expected) instead.");" is 169.,752
truth,com.google.common.truth,FloatSubject,isNotWithin,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`floatToString(expected))`butWas()`fact("within tolerance"`floatToString(tolerance)));" is 129.,126
truth,com.google.common.truth,FloatSubject,of,Long Statement,The length of the statement "failWithoutActual(fact("expected not to be"`floatToString(expected))`butWas()`fact("within tolerance"`floatToString(tolerance)));" is 129.,148
truth,com.google.common.truth,FloatSubject,isFinite,Complex Conditional,The conditional expression actual == null || actual.isNaN() || actual.isInfinite() is complex.,252
truth,com.google.common.truth,Fact,makeMessage,Complex Method,Cyclomatic complexity of the method is 8,83
truth,com.google.common.truth,IterableSubject,isEqualTo,Complex Conditional,The conditional expression (actual instanceof Set && expected instanceof Set) || (actual instanceof Multiset && expected instanceof Multiset) is complex.,118
truth,com.google.common.truth,IterableSubject,isEqualTo,Long Statement,The length of the statement "else if ((actual instanceof Set && expected instanceof Set) || (actual instanceof Multiset && expected instanceof Multiset)) {" is 126.,118
truth,com.google.common.truth,IterableSubject,contains,Long Statement,The length of the statement "failWithoutActual(fact("expected to contain"`element)`fact("an instance of"`objectToTypeName(element))`simpleFact("but did not")`fact("though it did contain"`countDuplicatesAndAddTypeInfo(retainMatchingToString(actual`elementList)))`fullContents());" is 249.,161
truth,com.google.common.truth,IterableSubject,containsAnyIn,Long Statement,The length of the statement "failWithoutActual(fact("expected to contain any of"`countDuplicatesAndAddTypeInfo(expected))`simpleFact("but did not")`fact("though it did contain"`countDuplicatesAndAddTypeInfo(retainMatchingToString(this.actual`expected)))`fullContents());" is 241.,210
truth,com.google.common.truth,IterableSubject,containsAtLeastElementsIn,Long Statement,The length of the statement "failWithActual(simpleFact("required elements were all found` but order was wrong")`fact("expected order for required elements"`expected));" is 138.,261
truth,com.google.common.truth,IterableSubject,inOrder,Long Statement,The length of the statement "failWithActual(simpleFact("required elements were all found` but order was wrong")`fact("expected order for required elements"`expected));" is 138.,311
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Complex Conditional,The conditional expression isFirst && !actualIter.hasNext() && !requiredIter.hasNext() is complex.,416
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Complex Method,Cyclomatic complexity of the method is 12,416
truth,com.google.common.truth,IterableSubject,containsExactlyElementsIn,Long Statement,The length of the statement "checkNoNeedToDisplayBothValues("onlyElement()").that(actualElement).failEqualityCheckForEqualsWithoutDescription(requiredElement);" is 130.,416
truth,com.google.common.truth,IterableSubject,failExactly,Long Statement,The length of the statement "facts.add(simpleFact("Passing an iterable to the varargs method containsExactly(Object...) is " + "often not the correct thing to do. Did you mean to call " + "containsExactlyElementsIn(Iterable) instead?"));" is 208.,524
truth,com.google.common.truth,IterableSubject,pickGrouping,Complex Conditional,The conditional expression (firstHasMultiple || secondHasMultiple) && anyContainsCommaOrNewline(first`second) is complex.,631
truth,com.google.common.truth,IterableSubject,containsEmptyOrLong,Magic Number,The method contains a magic number: 200,668
truth,com.google.common.truth,IterableSubject,containsNoneIn,Long Statement,The length of the statement "failWithoutActual(fact("expected not to contain any of"`annotateEmptyStrings(excluded))`fact("but contained"`annotateEmptyStrings(present))`fullContents());" is 156.,700
truth,com.google.common.truth,IterableSubject,isNotIn,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("The actual value is an Iterable` and you've written a test that compares it to " + "some objects that are not Iterables. Did you instead mean to check " + "whether its *contents* match any of the *contents* of the given values? "+ "If so` call containsNoneOf(...)/containsNoneIn(...) instead. "+ "Non-iterables: %s"`nonIterables)));" is 376.,849
truth,com.google.common.truth,StreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,52
truth,com.google.common.truth,StreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth,StreamSubjectTest,testContainsAnyOf_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(Stream.of("hello")).containsAnyOf("goodbye"`"good"));" is 121.,135
truth,com.google.common.truth,StreamSubjectTest,testContainsAnyIn_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(Stream.of("hello")).containsAnyIn(asList("goodbye"`"good")));" is 129.,147
truth,com.google.common.truth,StreamSubjectTest,testContainsNoneIn_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(Stream.of("hello")).containsNoneIn(asList("hello"`"hell")));" is 128.,183
truth,com.google.common.truth,StreamSubjectTest,testContainsAtLeast_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(Stream.of("hell"`"hello")).containsAtLeast("hell"`"hello"`"goodbye"));" is 138.,196
truth,com.google.common.truth,StreamSubjectTest,testContainsAtLeast_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,211
truth,com.google.common.truth,StreamSubjectTest,testContainsAtLeastElementsIn_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(Stream.of("hell"`"hello")).containsAtLeastElementsIn(asList("hell"`"hello"`"goodbye")));" is 156.,231
truth,com.google.common.truth,StreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,248
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 2,335
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,335
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,335
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,335
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 4,335
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 3,342
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 2,342
truth,com.google.common.truth,StreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 4,342
truth,com.google.common.truth,StreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 2,348
truth,com.google.common.truth,StreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 3,348
truth,com.google.common.truth,StreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 4,348
truth,com.google.common.truth,StreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 2,355
truth,com.google.common.truth,StreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 2,355
truth,com.google.common.truth,StreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 4,355
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualTo,Magic Number,The method contains a magic number: 42,39
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,45
truth,com.google.common.truth,IntStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,45
truth,com.google.common.truth,IntStreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,52
truth,com.google.common.truth,IntStreamSubjectTest,testIsEmpty_fails,Magic Number,The method contains a magic number: 42,79
truth,com.google.common.truth,IntStreamSubjectTest,testIsNotEmpty,Magic Number,The method contains a magic number: 42,85
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize,Magic Number,The method contains a magic number: 42,96
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 42,101
truth,com.google.common.truth,IntStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates,Magic Number,The method contains a magic number: 42,107
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,112
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,112
truth,com.google.common.truth,IntStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,118
truth,com.google.common.truth,IntStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,118
truth,com.google.common.truth,IntStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 42,123
truth,com.google.common.truth,IntStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 100,123
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,129
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,129
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 43,129
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 42,134
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 43,134
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 44,134
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,140
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,140
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 43,140
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 42,145
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 43,145
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 44,145
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 42,152
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 43,152
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,157
truth,com.google.common.truth,IntStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,157
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 42,163
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 43,163
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 44,163
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,168
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,168
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 43,168
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 42,174
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 43,174
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 44,174
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,179
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,179
truth,com.google.common.truth,IntStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 43,179
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 42,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 43,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 42,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 43,186
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 42,191
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 43,191
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 42,191
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 43,191
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 44,191
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 43,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 42,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 43,198
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 42,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 43,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 43,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 42,203
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 42,218
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 43,218
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 42,218
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 43,218
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(IntStream.of(42`43)).containsAtLeastElementsIn(asList(42`43`44)));" is 134.,223
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 42,223
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 43,223
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 42,223
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 43,223
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 44,223
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 42,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 43,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 42,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 43,233
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,238
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,253
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 43,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,258
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,269
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,269
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,269
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,269
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,274
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,274
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,274
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,274
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,285
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,291
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 43,291
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,291
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,302
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,307
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,307
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,307
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,307
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 2,318
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 3,318
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 4,318
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 2,318
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 3,318
truth,com.google.common.truth,IntStreamSubjectTest,testContainsExactlyElementsIn_inOrder_intStream,Magic Number,The method contains a magic number: 4,318
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 2,323
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,323
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,323
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,323
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 4,323
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 3,330
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 2,330
truth,com.google.common.truth,IntStreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 4,330
truth,com.google.common.truth,IntStreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 2,336
truth,com.google.common.truth,IntStreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 3,336
truth,com.google.common.truth,IntStreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 4,336
truth,com.google.common.truth,IntStreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 2,343
truth,com.google.common.truth,IntStreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 2,343
truth,com.google.common.truth,IntStreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 4,343
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualTo,Magic Number,The method contains a magic number: 42,39
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42,45
truth,com.google.common.truth,LongStreamSubjectTest,testIsEqualToList,Magic Number,The method contains a magic number: 42L,45
truth,com.google.common.truth,LongStreamSubjectTest,testNullStream_fails,Empty catch clause,The method has an empty catch block.,52
truth,com.google.common.truth,LongStreamSubjectTest,testIsEmpty_fails,Magic Number,The method contains a magic number: 42,79
truth,com.google.common.truth,LongStreamSubjectTest,testIsNotEmpty,Magic Number,The method contains a magic number: 42,85
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize,Magic Number,The method contains a magic number: 42,96
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 42,101
truth,com.google.common.truth,LongStreamSubjectTest,testHasSize_fails,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates,Magic Number,The method contains a magic number: 42,107
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,112
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoDuplicates_fails,Magic Number,The method contains a magic number: 42,112
truth,com.google.common.truth,LongStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,LongStreamSubjectTest,testContains,Magic Number,The method contains a magic number: 42,119
truth,com.google.common.truth,LongStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 42,124
truth,com.google.common.truth,LongStreamSubjectTest,testContains_fails,Magic Number,The method contains a magic number: 100,124
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,130
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 42,130
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf,Magic Number,The method contains a magic number: 43,130
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 42,135
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 43,135
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyOf_fails,Magic Number,The method contains a magic number: 44,135
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42,141
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 42L,141
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn,Magic Number,The method contains a magic number: 43L,141
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 42,146
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 43,146
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAnyIn_fails,Magic Number,The method contains a magic number: 44,146
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 42,153
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain,Magic Number,The method contains a magic number: 43,153
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,158
truth,com.google.common.truth,LongStreamSubjectTest,testDoesNotContain_fails,Magic Number,The method contains a magic number: 42,158
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 42,164
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 43,164
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf,Magic Number,The method contains a magic number: 44,164
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,169
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 42,169
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneOf_fails,Magic Number,The method contains a magic number: 43,169
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 42,175
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 43,175
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn,Magic Number,The method contains a magic number: 44,175
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42,180
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 42L,180
truth,com.google.common.truth,LongStreamSubjectTest,testContainsNoneIn_fails,Magic Number,The method contains a magic number: 43L,180
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 42,187
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 43,187
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 42,187
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast,Magic Number,The method contains a magic number: 43,187
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 42,192
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 43,192
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 42,192
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 43,192
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_fails,Magic Number,The method contains a magic number: 44,192
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 43,199
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder,Magic Number,The method contains a magic number: 43,199
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,204
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 42,204
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 43,204
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 43,204
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeast_inOrder_fails,Magic Number,The method contains a magic number: 42,204
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 42,219
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 43,219
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 42L,219
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn,Magic Number,The method contains a magic number: 43L,219
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(LongStream.of(42`43)).containsAtLeastElementsIn(asList(42L`43L`44L)));" is 138.,224
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 42,224
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 43,224
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 42L,224
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 43L,224
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_fails,Magic Number,The method contains a magic number: 44L,224
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_wrongType_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(LongStream.of(42`43)).containsAtLeastElementsIn(asList(42`43`44)));" is 135.,234
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,234
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 43,234
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,234
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 43,234
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 44,234
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 42,244
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 43,244
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 42L,244
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder,Magic Number,The method contains a magic number: 43L,244
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Long Statement,The length of the statement "assertFailureKeys(expected`"required elements were all found` but order was wrong"`"expected order for required elements"`"but was");" is 133.,249
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,249
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,249
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43L,249
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42L,249
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_wrongType_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(LongStream.of(42`43)).containsAtLeastElementsIn(asList(43`42)).inOrder());" is 142.,264
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,264
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,264
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,264
truth,com.google.common.truth,LongStreamSubjectTest,testContainsAtLeastElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,264
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,275
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,275
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 42,275
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly,Magic Number,The method contains a magic number: 43,275
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,280
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 43,280
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_fails,Magic Number,The method contains a magic number: 42,280
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,291
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,291
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 42,291
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder,Magic Number,The method contains a magic number: 43,291
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,296
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,296
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 43,296
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactly_inOrder_fails,Magic Number,The method contains a magic number: 42,296
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42L,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43L,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 43L,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn,Magic Number,The method contains a magic number: 42L,307
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42,313
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 43,313
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_fails,Magic Number,The method contains a magic number: 42L,313
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(LongStream.of(42`43)).containsExactlyElementsIn(asList(42)));" is 129.,324
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,324
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 43,324
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_wrongType_fails,Magic Number,The method contains a magic number: 42,324
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42,332
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43,332
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 42L,332
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder,Magic Number,The method contains a magic number: 43L,332
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42,337
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43,337
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 43L,337
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_fails,Magic Number,The method contains a magic number: 42L,337
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(LongStream.of(42`43)).containsExactlyElementsIn(asList(43`42)).inOrder());" is 142.,348
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,348
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,348
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 43,348
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_wrongType_fails,Magic Number,The method contains a magic number: 42,348
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 2,359
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 3,359
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 4,359
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 2,359
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 3,359
truth,com.google.common.truth,LongStreamSubjectTest,testContainsExactlyElementsIn_inOrder_LongStream,Magic Number,The method contains a magic number: 4,359
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 2,364
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,364
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,364
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 3,364
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder,Magic Number,The method contains a magic number: 4,364
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 3,371
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 2,371
truth,com.google.common.truth,LongStreamSubjectTest,testIsInOrder_fails,Magic Number,The method contains a magic number: 4,371
truth,com.google.common.truth,LongStreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 2,377
truth,com.google.common.truth,LongStreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 3,377
truth,com.google.common.truth,LongStreamSubjectTest,testIsInStrictOrder,Magic Number,The method contains a magic number: 4,377
truth,com.google.common.truth,LongStreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,LongStreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 2,384
truth,com.google.common.truth,LongStreamSubjectTest,testIsInStrictOrder_fails,Magic Number,The method contains a magic number: 4,384
truth,com.google.common.truth,OptionalIntSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337,42
truth,com.google.common.truth,OptionalIntSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337,59
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,73
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337,73
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337,78
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337,89
truth,com.google.common.truth,OptionalIntSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42,89
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError unused=expectFailure(whenTesting -> whenTesting.that(OptionalInt.of(1337)).hasValueThat().isLessThan(42));" is 121.,106
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337,106
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42,106
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337,115
truth,com.google.common.truth,OptionalIntSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42,115
truth,com.google.common.truth,OptionalDoubleSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337.0,42
truth,com.google.common.truth,OptionalDoubleSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337.0,59
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,73
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337.0,73
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337.0,78
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337.0,89
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42.0,89
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalDouble.of(1337.0)).hasValueThat().isLessThan(42.0));" is 130.,106
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337.0,106
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42.0,106
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337.0,116
truth,com.google.common.truth,OptionalDoubleSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42.0,116
truth,com.google.common.truth,OptionalLongSubjectTest,isPresent,Magic Number,The method contains a magic number: 1337L,42
truth,com.google.common.truth,OptionalLongSubjectTest,isEmptyFailing,Magic Number,The method contains a magic number: 1337L,59
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,73
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue,Magic Number,The method contains a magic number: 1337L,73
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithEmpty,Magic Number,The method contains a magic number: 1337L,78
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 1337L,89
truth,com.google.common.truth,OptionalLongSubjectTest,hasValue_FailingWithWrongValue,Magic Number,The method contains a magic number: 42L,89
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Long Statement,The length of the statement "AssertionError expected=expectFailure(whenTesting -> whenTesting.that(OptionalLong.of(1337L)).hasValueThat().isLessThan(42L));" is 126.,106
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 1337L,106
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_FailingWithComparison,Magic Number,The method contains a magic number: 42L,106
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 1337L,115
truth,com.google.common.truth,OptionalLongSubjectTest,hasValueThat_SuccessWithComparison,Magic Number,The method contains a magic number: 42L,115
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 4,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 5,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailure,Magic Number,The method contains a magic number: 4,32
truth,com.google.common.truth,ExpectFailure8Test,testExpectFailureAbout,Long Statement,The length of the statement "AssertionError unused=expectFailureAbout(STRINGS`(SimpleSubjectBuilderCallback<StringSubject`String>)whenTesting -> whenTesting.that("foo").contains("bar"));" is 157.,42
truth,com.google.common.truth.extension,AutoValue_Employee,AutoValue_Employee,Long Parameter List,The method has 5 parameters. ,18
truth,com.google.common.truth.extension,AutoValue_Employee,toString,Long Statement,The length of the statement "return "Employee{" + "username=" + username + "` "+ "id="+ id+ "` "+ "name="+ name+ "` "+ "location="+ location+ "` "+ "isCeo="+ isCeo+ "}";" is 140.,65
truth,com.google.common.truth.extension,AutoValue_Employee,equals,Long Statement,The length of the statement "return this.username.equals(that.username()) && this.id == that.id() && this.name.equals(that.name()) && this.location.equals(that.location()) && this.isCeo == that.isCeo();" is 173.,76
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1000003,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1000003,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 32,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1000003,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1000003,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1000003,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1231,92
truth,com.google.common.truth.extension,AutoValue_Employee,hashCode,Magic Number,The method contains a magic number: 1237,92
truth,com.google.common.truth.extension,EmployeeSubjectTest,id,Magic Number,The method contains a magic number: 37802,38
truth,com.google.common.truth.extension,EmployeeSubjectTest,id,Magic Number,The method contains a magic number: 12345,38
truth,com.google.common.truth.extension,Employee,create,Long Parameter List,The method has 5 parameters. ,23
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testInteger,Magic Number,The method contains a magic number: 457923,56
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 2,124
truth,com.google.common.truth.gwt,TruthGwtTest,testIterable,Magic Number,The method contains a magic number: 3,124
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 2,128
truth,com.google.common.truth.gwt,TruthGwtTest,testCollection,Magic Number,The method contains a magic number: 3,128
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 2,132
truth,com.google.common.truth.gwt,TruthGwtTest,testList,Magic Number,The method contains a magic number: 3,132
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCallTest,refactoring,Long Statement,The length of the statement "refactoringHelper.addInput("CorrespondenceSubclassToFactoryCallPositiveCases.java").addOutput("CorrespondenceSubclassToFactoryCallPositiveCases_expected.java").doTest();" is 169.,62
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCallTest,refactoring2,Long Statement,The length of the statement "refactoringHelper.addInput("CorrespondenceSubclassToFactoryCallPositiveCases2.java").addOutput("CorrespondenceSubclassToFactoryCallPositiveCases2_expected.java").doTest();" is 171.,70
truth,com.google.common.truth.refactorings,StoreActualValueInFieldTest,refactoring,Long Statement,The length of the statement "refactoringHelper.addInput("StoreActualValueInFieldPositiveCases.java").addOutput("StoreActualValueInFieldPositiveCases_expected.java").doTest();" is 145.,50
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Complex Conditional,The conditional expression first.equals("does") && old.size() >= 2 && old.get(1).equals("not") is complex.,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Complex Conditional,The conditional expression first.equals("is") && old.size() >= 2 && old.get(1).equals("not") is complex.,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Complex Conditional,The conditional expression first.equals("is") || first.equals("are") || first.equals("was") is complex.,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Complex Method,Cyclomatic complexity of the method is 9,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth.refactorings,FailWithFacts,newVerb,Magic Number,The method contains a magic number: 2,101
truth,com.google.common.truth.refactorings,StoreActualValueInField,matchMethodInvocation,Complex Method,Cyclomatic complexity of the method is 10,80
truth,com.google.common.truth.refactorings,StoreActualValueInField,matchMethodInvocation,Long Statement,The length of the statement "if (enclosingClass.getMembers().stream().filter(t -> t.getKind() == VARIABLE).map(t -> (VariableTree)t).anyMatch(t -> t.getName().contentEquals("actual"))) {" is 157.,80
truth,com.google.common.truth.refactorings,StoreActualValueInField,matchMethodInvocation,Long Statement,The length of the statement "if (tree.getMethodSelect().getKind() != IDENTIFIER || !((IdentifierTree)tree.getMethodSelect()).getName().contentEquals("super")) {" is 131.,80
truth,com.google.common.truth.refactorings,StoreActualValueInField,matchMethodInvocation,Long Statement,The length of the statement "Tree putFieldBefore=enclosingClass.getMembers().stream().map(( Tree t) -> t).filter(t -> t.getKind() == VARIABLE && !((VariableTree)t).getModifiers().getFlags().contains(STATIC)).findFirst().orElse(state.findEnclosing(MethodTree.class));" is 237.,80
truth,com.google.common.truth.refactorings,StoreActualValueInField,findActualArg,Complex Conditional,The conditional expression args.size() == 2 && isSameType(getType(args.get(0))`failureMetadataType`state) && args.get(1).getKind() == IDENTIFIER is complex.,211
truth,com.google.common.truth.refactorings,StoreActualValueInField,findActualArg,Long Statement,The length of the statement "Type actualType=extractTypeArgAsMemberOfSupertype(getType(state.findEnclosing(ClassTree.class))`state.getSymbolFromString("com.google.common.truth.Subject")`1`state.getTypes());" is 177.,211
truth,com.google.common.truth.refactorings,StoreActualValueInField,findActualArg,Long Statement,The length of the statement "ImmutableSet<IdentifierTree> candidates=args.stream().flatMap(a -> maybeToIdentifier(a`state)).filter(a -> !isSameType(getType(a)`failureMetadataType`state)).filter(a -> isSubtype(getType(a)`actualType`state)).collect(toImmutableSet());" is 236.,211
truth,com.google.common.truth.refactorings,StoreActualValueInField,findActualArg,Long Statement,The length of the statement "if (args.size() == 2 && isSameType(getType(args.get(0))`failureMetadataType`state) && args.get(1).getKind() == IDENTIFIER) {" is 124.,211
truth,com.google.common.truth.refactorings,StoreActualValueInField,findActualArg,Magic Number,The method contains a magic number: 2,211
truth,com.google.common.truth.refactorings,StoreActualValueInField,findActualFormalType,Long Statement,The length of the statement "return method.getParameters().stream().filter(p -> p.getName().equals(name)).findFirst().map(p -> p.getType()).orElse(null);" is 124.,253
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,matchClass,Complex Method,Cyclomatic complexity of the method is 15,99
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,matchClass,Long Statement,The length of the statement "int startOfExtends=state.getSourceCode().subSequence(0`extendsClause.getStartPosition()).toString().lastIndexOf("extends");" is 123.,99
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,matchClass,Long Statement,The length of the statement "fix.replace(startOfExtends`state.getEndPosition(tree)`format("{ %s static final %s INSTANCE = %s; %s }"`visibilityModifierOnConstructor(tree)`state.getSourceForNode(extendsClause)`replacement.callSite()`replacement.supportingMethodDefinition()));" is 246.,99
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,matchClass,Long Statement,The length of the statement "fix.replace(tree`format("%s static final %s %s = %s; %s"`visibilityModifierOnConstructor(tree)`state.getSourceForNode(tree.getExtendsClause())`name`replacement.callSite()`replacement.supportingMethodDefinition()));" is 214.,99
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,visibilityModifierOnConstructor,Long Statement,The length of the statement "MethodTree constructor=tree.getMembers().stream().filter(t -> t instanceof MethodTree).map(t -> (MethodTree)t).filter(t -> t.getName().contentEquals("<init>")).findAny().get();" is 176.,266
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,visibilityModifierOnConstructor,Long Statement,The length of the statement "return constructor.getModifiers().getFlags().stream().filter(m -> m == PUBLIC || m == PROTECTED || m == PRIVATE).findAny().map(Modifier::toString).orElse("");" is 158.,266
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,findCalls,Long Statement,The length of the statement "boolean isComparingElementsUsing=Optional.of(node.getMethodSelect()).filter(t -> t.getKind() == MEMBER_SELECT).map(t -> (MemberSelectTree)t).filter(t -> t.getIdentifier().contentEquals("comparingElementsUsing")).isPresent();" is 224.,282
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,visitMethodInvocation,Long Statement,The length of the statement "boolean isComparingElementsUsing=Optional.of(node.getMethodSelect()).filter(t -> t.getKind() == MEMBER_SELECT).map(t -> (MemberSelectTree)t).filter(t -> t.getIdentifier().contentEquals("comparingElementsUsing")).isPresent();" is 224.,289
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,computePossibleReplacements,Complex Conditional,The conditional expression members.containsKey(MemberType.OTHER) || members.get(CONSTRUCTOR).size() != 1 || members.get(COMPARE_METHOD).size() != 1 || members.get(TO_STRING_METHOD).size() != 1 is complex.,363
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,computePossibleReplacements,Long Statement,The length of the statement "ImmutableSetMultimap<MemberType`Tree> members=classTree.getMembers().stream().collect(toImmutableSetMultimap(m -> MemberType.from(m`state)`m -> m));" is 148.,363
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,computePossibleReplacements,Long Statement,The length of the statement "if (members.containsKey(MemberType.OTHER) || members.get(CONSTRUCTOR).size() != 1 || members.get(COMPARE_METHOD).size() != 1 || members.get(TO_STRING_METHOD).size() != 1) {" is 172.,363
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,computePossibleReplacements,Long Statement,The length of the statement "String description=toStringReturns.getKind() == NULL_LITERAL ? "\"corresponds to\"" : state.getSourceForNode(toStringReturns);" is 126.,363
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,makeBinaryPredicates,Long Statement,The length of the statement "String supportingMethodDefinition=format("private static boolean %s(%s` %s) %s"`newCompareMethodName`state.getSourceForNode(compareMethod.getParameters().get(0))`state.getSourceForNode(compareMethod.getParameters().get(1))`compareMethod.getBody());" is 248.,406
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,makeBinaryPredicates,Long Statement,The length of the statement "return ImmutableList.of(BinaryPredicateCode.create(newCompareMethodOwner + "::" + newCompareMethodName`supportingMethodDefinition));" is 132.,406
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,makeBinaryPredicates,Long Statement,The length of the statement "return ImmutableList.of(BinaryPredicateCode.fromParamsAndExpression(compareMethod.getParameters().get(0).getName()`compareMethod.getParameters().get(1).getName()`state.getSourceForNode(comparison))`BinaryPredicateCode.fromParamsAndExpression(state.getSourceForNode(compareMethod.getParameters().get(0))`state.getSourceForNode(compareMethod.getParameters().get(1))`state.getSourceForNode(comparison)));" is 401.,406
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,maybeMakeLambdaBody,Long Statement,The length of the statement "ImmutableSet<Symbol> paramsOfEnclosingMethod=enclosingMethod.getParameters().stream().map(p -> getDeclaredSymbol(p)).collect(toImmutableSet());" is 143.,446
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,overrides,Long Statement,The length of the statement "Symbol overridable=state.getTypeFromString(clazz).tsym.getEnclosedElements().stream().filter(s -> s.getKind() == METHOD).filter(m -> m.getSimpleName().contentEquals(method)).collect(onlyElement());" is 197.,638
truth,com.google.common.truth.refactorings,CorrespondenceSubclassToFactoryCall,overrides,Long Statement,The length of the statement "return potentialOverrider.getSimpleName().contentEquals(method) && potentialOverrider.overrides(overridable`(TypeSymbol)overridable.owner`state.getTypes()`true);" is 161.,638
truth,com.google.common.truth.refactorings,NamedToWithMessage,matchMethodInvocation,Complex Method,Cyclomatic complexity of the method is 16,68
truth,com.google.common.truth.refactorings,NamedToWithMessage,matchMethodInvocation,Long Identifier,The length of the field ONLY_GENERATE_REFERENCES_TO_FACTORIES_THAT_ALREADY_EXIST is 56.,68
truth,com.google.common.truth.refactorings,NamedToWithMessage,matchMethodInvocation,Long Identifier,The length of the field STANDARD_SUBJECT_BUILDER_ABOUT is 30.,68
truth,com.google.common.truth.refactorings,NamedToWithMessage,matchMethodInvocation,Long Statement,The length of the statement "String parensAndNamedArgs=state.getSourceCode().subSequence(state.getEndPosition(namedCall.getMethodSelect())`state.getEndPosition(namedCall)).toString();" is 154.,68
truth,com.google.common.truth.refactorings,NamedToWithMessage,matchMethodInvocation,Long Statement,The length of the statement "fix.replace(thatCall.getMethodSelect()`format("assertWithMessage%s.about(%s()).that"`parensAndNamedArgs`factory.method()));" is 123.,68
truth,com.google.common.truth.refactorings,NamedToWithMessage,tryFindFactory,Long Identifier,The length of the field CUSTOM_SUBJECT_BUILDER_FACTORY_CLASS is 36.,182
truth,com.google.common.truth.refactorings,NamedToWithMessage,tryFindFactory,Long Statement,The length of the statement "ImmutableSet<MethodSymbol> factories=concat(assertThatSymbol.owner.getEnclosedElements().stream()`assertThatSymbol.getReturnType().asElement().getEnclosedElements().stream()).filter(s -> s instanceof MethodSymbol).map(s -> (MethodSymbol)s).filter(s -> returns(s`SUBJECT_FACTORY_CLASS`state) || returns(s`CUSTOM_SUBJECT_BUILDER_FACTORY_CLASS`state)).collect(toImmutableSet());" is 375.,182
truth,com.google.common.truth.refactorings,NamedToWithMessage,findThatCall,Complex Conditional,The conditional expression ANY_ASSERT_THAT.matches(tree`state) || STANDARD_SUBJECT_BUILDER_THAT.matches(tree`state) || OTHER_SUBJECT_BUILDER_THAT.matches(tree`state) is complex.,218
truth,com.google.common.truth.refactorings,NamedToWithMessage,findThatCall,Long Statement,The length of the statement "if (ANY_ASSERT_THAT.matches(tree`state) || STANDARD_SUBJECT_BUILDER_THAT.matches(tree`state) || OTHER_SUBJECT_BUILDER_THAT.matches(tree`state)) {" is 145.,218
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsEqualToFailed,Long Statement,The length of the statement "expectFailureMatches("Not true that messages compare equal\\.\\s*" + "(Differences were found:\\n.*|No differences were reported\\..*)");" is 137.,180
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,expectIsNotEqualToFailed,Long Statement,The length of the statement "expectFailureMatches("Not true that messages compare not equal\\.\\s*" + "(Only ignorable differences were found:\\n.*|" + "No differences were found\\..*)");" is 158.,186
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,mapOf,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,mapOf,Magic Number,The method contains a magic number: 2,217
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,multimapOf,Magic Number,The method contains a magic number: 2,229
truth,com.google.common.truth.extensions.proto,ProtoSubjectTestBase,multimapOf,Magic Number,The method contains a magic number: 2,229
truth,com.google.common.truth.extensions.proto,MultiExpectFailure,whenTesting,Long Statement,The length of the statement "Preconditions.checkState(currentIndex < expectFailures.size() - 1`"Not enough ExpectFailures (%s)"`expectFailures.size());" is 122.,47
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_ignoringField,Long Statement,The length of the statement "expectFailureWhenTesting().that(ignoringFieldDiffMessage).ignoringFields(goodFieldNumber).isEqualTo(ignoringFieldMessage);" is 122.,114
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_ignoringField,Long Statement,The length of the statement "expectFailureWhenTesting().that(ignoringFieldDiffMessage).ignoringFields(badFieldNumber).isNotEqualTo(ignoringFieldMessage);" is 124.,114
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 134.,138
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 133.,138
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 130.,138
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 135.,138
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(goodFieldNumber)).isEqualTo(ignoringFieldMessage);" is 131.,154
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(goodFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 136.,154
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFields(badFieldNumber)).isNotEqualTo(ignoringFieldMessage);" is 133.,154
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFields,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFields(badFieldNumber)).isEqualTo(ignoringFieldMessage);" is 132.,154
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 145.,170
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 150.,170
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 147.,170
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_allowingFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 146.,170
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 148.,186
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(goodFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 147.,186
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).withPartialScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isEqualTo(ignoringFieldMessage);" is 144.,186
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringTopLevelField_fieldScopes_ignoringFieldDescriptors,Long Statement,The length of the statement "expectThat(ignoringFieldDiffMessage).ignoringFieldScope(FieldScopes.ignoringFieldDescriptors(badFieldDescriptor)).isNotEqualTo(ignoringFieldMessage);" is 149.,186
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message message=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 141.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage1=parse("o_int: 999999 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage2=parse("o_int: 3 o_sub_test_message: { o_int: 999999 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 151.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage3=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 999999 r_string: \"bar\" }");" is 151.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message diffMessage4=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"foo\" } " + "r_sub_test_message: { o_int: 5 r_string: \"999999\" }");" is 149.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 3 o_sub_test_message: { o_int: 4 r_string: \"999999\" } " + "r_sub_test_message: { o_int: 5 r_string: \"bar\" }");" is 146.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoringAllButOneFieldOfSubMessage,Long Statement,The length of the statement "FieldScope fieldScope=FieldScopes.ignoringFields(getFieldNumber("o_sub_test_message")).allowingFieldDescriptors(getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_int"));" is 196.,273
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message scopeMessage=parse("o_int: 1 r_string: \"x\" o_test_message: { o_int: 1 } " + "r_test_message: { r_string: \"x\" } r_test_message: { o_int: 1 } " + "o_sub_test_message: { o_test_message: { o_int: 1 } }");" is 212.,328
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"2\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } "+ "o_sub_test_message: { o_int: 2 o_test_message: { o_int: 1 r_string: \"2\" } }");" is 276.,328
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message diffMessage=parse("o_int: 4 r_string: \"4\" o_test_message: {o_int: 4 r_string: \"3\" } " + "r_test_message: { o_int: 4 r_string: \"4\" } " + "r_test_message: { o_int: 4 r_string: \"4\" }"+ "o_sub_test_message: { r_string: \"3\" o_int: 3 "+ "o_test_message: { o_int: 4 r_string: \"3\" } }");" is 299.,328
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "Message eqMessage=parse("o_int: 1 r_string: \"1\" o_test_message: {o_int: 1 r_string: \"3\" } " + "r_test_message: { o_int: 1 r_string: \"1\" } " + "r_test_message: { o_int: 1 r_string: \"1\" }"+ "o_sub_test_message: { o_int: 3 o_test_message: { o_int: 1 r_string: \"3\" } }");" is 277.,328
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isEqualTo(message);" is 122.,328
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(eqMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isNotEqualTo(message);" is 123.,328
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message scopeMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).build()).addField(21`Field.newBuilder().addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).build()).build()).addGroup(UnknownFieldSet.newBuilder().addField(2`Field.newBuilder().addFixed64(1).build()).build()).build()).build());" is 466.,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message message=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(2).addFixed64(2).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(2).addLengthDelimited(ByteString.copyFrom("2"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(2).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(2).addFixed64(2).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(2).build()).addField(2`Field.newBuilder().addFixed32(2).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(2).build()).build()).build()).build());" is 772.,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message diffMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(4).addFixed64(4).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(4).addLengthDelimited(ByteString.copyFrom("4"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(4).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(4).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build());" is 776.,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "Message eqMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(19`Field.newBuilder().addFixed32(3).addFixed64(3).build()).addField(20`Field.newBuilder().addFixed32(1).addFixed64(1).addVarint(3).addLengthDelimited(ByteString.copyFrom("3"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(3).build()).build()).build()).addField(21`Field.newBuilder().addFixed32(3).addFixed64(3).addVarint(1).addLengthDelimited(ByteString.copyFrom("1"`StandardCharsets.UTF_8)).addGroup(UnknownFieldSet.newBuilder().addField(1`Field.newBuilder().addFixed32(1).addFixed64(3).build()).addField(2`Field.newBuilder().addFixed32(3).addFixed64(1).build()).addField(3`Field.newBuilder().addFixed32(3).build()).build()).build()).build());" is 774.,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isEqualTo(message);" is 122.,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(eqMessage).withPartialScope(FieldScopes.fromSetFields(scopeMessage)).isNotEqualTo(message);" is 123.,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 4,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 19,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 20,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 21,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 2,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_unknownFields,Magic Number,The method contains a magic number: 3,396
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFieldNumbersAreRecursive,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).withPartialScope(FieldScopes.allowingFields(fieldNumber)).isEqualTo(message);" is 122.,557
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFieldNumbersAreRecursive,Long Statement,The length of the statement "expectFailureWhenTesting().that(eqMessage).withPartialScope(FieldScopes.allowingFields(fieldNumber)).isNotEqualTo(message);" is 123.,557
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testInvalidFieldNumber,Magic Number,The method contains a magic number: 999,622
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message message=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 145.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage1=parse("o_int: 111 r_string: \"foo\" o_sub_test_message: { o_int: 222 " + "o_sub_sub_test_message: { o_int: 333 r_string: \"bar\" } }");" is 154.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage2=parse("o_int: 1 r_string: \"foo\" o_sub_test_message: { o_int: 2 " + "o_sub_sub_test_message: { o_int: 3 r_string: \"bar\" } }");" is 148.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage3=parse("r_string: \"foo\" o_sub_test_message: { " + "o_sub_sub_test_message: { r_string: \"bar\" } }");" is 121.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "Message eqMessage4=parse("o_int: 333 r_string: \"foo\" o_sub_test_message: { o_int: 111 " + "o_sub_sub_test_message: { o_int: 222 r_string: \"bar\" } }");" is 154.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "FieldDescriptor bottom=getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("o_sub_sub_test_message").getMessageType().findFieldByName("o_int");" is 165.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIgnoreFieldsAtDifferentLevels,Long Statement,The length of the statement "ImmutableMap<String`FieldScope> fieldScopes=ImmutableMap.of("BASIC"`FieldScopes.ignoringFieldDescriptors(top`middle`bottom)`"CHAINED"`FieldScopes.ignoringFieldDescriptors(top).ignoringFieldDescriptors(middle).ignoringFieldDescriptors(bottom)`"REPEATED"`FieldScopes.ignoringFieldDescriptors(top`middle).ignoringFieldDescriptors(middle`bottom));" is 343.,649
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqMessage1`eqMessage2);" is 131.,719
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqMessage1`eqMessage2);" is 180.,719
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 166.,719
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 224.,719
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(parse("o_int: -1")`nullMessage`parse("r_string: \"NaN\""))).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 215.,719
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_skipNulls,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".withPartialScope("+ "FieldScopes.fromSetFields(["+ "{o_int: -1\n}` null` {r_string: \"NaN\"\n}]))"+ ".isEqualTo(target)");" is 224.,719
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(Collections.<Message>emptyList())).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 169.,772
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsExactly(eqIgnoredMessage1`eqIgnoredMessage2);" is 145.,772
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(Collections.<Message>emptyList())).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 189.,772
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_vacuousIfEmptyOrAllNull,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).withPartialScope(FieldScopes.fromSetFields(messages)).containsNoneOf(eqIgnoredMessage1`eqIgnoredMessage2);" is 165.,772
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,802
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorForDifferentMessageTypes,Magic Number,The method contains a magic number: 2,802
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "assertThat(message).withPartialScope(FieldScopes.fromSetFields(TestMessage3.newBuilder().setOInt(2).build()`TestMessage3.newBuilder().addRString("foo").build())).isEqualTo(eqMessage);" is 183.,824
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Long Statement,The length of the statement "expect.that(expected).hasMessageThat().contains("Message given to FieldScopes.fromSetFields() " + "does not have the same descriptor as the message being tested");" is 163.,824
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_errorIfDescriptorMismatchesSubject,Magic Number,The method contains a magic number: 2,824
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "expectThat(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage1);" is 144.,856
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testFromSetFields_iterables_unionsElements,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message)).ignoringFieldScope(FieldScopes.fromSetFields(parse("o_int: 1")`parse("o_enum: TWO"))).containsExactly(diffMessage2);" is 165.,856
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).ignoringFieldScope(FieldScopes.allowingFields(listOf(getFieldNumber("o_int")))).isEqualTo(eqExceptInt);" is 123.,873
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).withPartialScope(FieldScopes.ignoringFields(listOf(getFieldNumber("o_int")))).isEqualTo(eqExceptInt);" is 121.,873
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).reportingMismatchesOnly().ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).isEqualTo(eqExceptInt);" is 131.,873
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).ignoringFieldScope(FieldScopes.allowingFieldDescriptors(listOf(getFieldDescriptor("o_int")))).isEqualTo(eqExceptInt);" is 137.,873
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_protoSubject,Long Statement,The length of the statement "expectThat(message).withPartialScope(FieldScopes.ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int")))).isEqualTo(eqExceptInt);" is 135.,873
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnly().ignoringFields(listOf(getFieldNumber("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 134.,905
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 122.,905
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_iterableOfProtosSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnly().ignoringFieldDescriptors(listOf(getFieldDescriptor("o_int"))).containsExactlyElementsIn(eqExceptInt);" is 148.,905
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldsForValues(listOf(getFieldNumber("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 151.,926
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 130.,926
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_mapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 165.,926
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldsForValues(listOf(getFieldNumber("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 151.,949
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 130.,949
truth,com.google.common.truth.extensions.proto,FieldScopesTest,testIterableFieldScopeMethodVariants_multimapWithProtoValuesSubject,Long Statement,The length of the statement "expectThat(messages).reportingMismatchesOnlyForValues().ignoringFieldDescriptorsForValues(listOf(getFieldDescriptor("o_int"))).containsExactlyEntriesIn(eqExceptInt);" is 165.,949
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,71
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,71
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,79
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,95
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactlyEntriesIn(multimapOf(1`eqMessage2`2`eqMessage1`1`eqMessage1));" is 134.,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactlyEntriesIn(multimapOf(1`eqMessage1`1`eqMessage2`2`eqMessage1)).inOrder();" is 144.,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`2`message2)).containsExactlyEntriesIn(multimapOf(2`eqMessage2`1`eqMessage1)).inOrder();" is 141.,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,112
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).containsExactly(1`eqMessage1`1`eqMessage2`2`eqMessage1).inOrder();" is 123.,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,141
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).containsExactly(eqMessage2`eqMessage1).inOrder();" is 143.,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testPlain_valuesForKey,Magic Number,The method contains a magic number: 2,161
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqIgnoredMessage2);" is 135.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqIgnoredMessage2);" is 136.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqRepeatedMessage2);" is 157.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqRepeatedMessage2);" is 158.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,176
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(multimapOf(1`eqIgnoredMessage2`2`eqIgnoredMessage1`1`eqIgnoredMessage1));" is 198.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(multimapOf(1`eqRepeatedMessage1`1`eqRepeatedMessage2`2`eqRepeatedMessage1)).inOrder();" is 206.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(multimapOf(2`eqRepeatedMessage2`1`eqRepeatedMessage1));" is 174.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(multimapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1)).inOrder();" is 198.,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactlyEntriesIn,Magic Number,The method contains a magic number: 2,210
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(1`eqIgnoredMessage2`2`eqIgnoredMessage1`1`eqIgnoredMessage1);" is 177.,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`1`eqRepeatedMessage2`2`eqRepeatedMessage1).inOrder();" is 185.,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(2`eqRepeatedMessage2`1`eqRepeatedMessage1);" is 153.,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1).inOrder();" is 177.,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,253
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).ignoringFields(ignoreFieldNumber).containsExactly(eqIgnoredMessage2`eqIgnoredMessage1);" is 160.,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectThat(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(2).ignoringRepeatedFieldOrder().containsExactly(eqRepeatedMessage1);" is 138.,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Long Statement,The length of the statement "expectFailureWhenTesting().that(multimapOf(1`message1`1`message2`2`message1)).valuesForKey(1).ignoringFields(ignoreFieldNumber).containsExactly(eqRepeatedMessage1`eqRepeatedMessage2);" is 183.,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testFluent_valuesForKey,Magic Number,The method contains a magic number: 2,277
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(ImmutableMultimap.of(2`TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`2`TestMessage2.newBuilder().addRString("quibble").addRString("frozzit").build()`3`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(ImmutableMultimap.of(2`TestMessage2.newBuilder().addRString("frozzit").addRString("quibble").build()`3`TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`2`TestMessage2.newBuilder().addRString("bar").addRString("foo").build()));" is 568.,296
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,296
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,296
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,296
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,296
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,296
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,296
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,72
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,72
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).containsExactlyElementsIn(listOf(eqMessage2`eqMessage1)).inOrder();" is 126.,145
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).containsExactlyElementsIn(arrayOf(eqMessage2`eqMessage1)).inOrder();" is 127.,145
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).contains(eqRepeatedMessage1);" is 122.,228
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,228
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().doesNotContain(eqRepeatedMessage1);" is 123.,228
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_contains,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,228
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqIgnoredMessage1`eqRepeatedMessage2);" is 124.,262
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 127.,262
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsAnyOf(eqRepeatedMessage1`eqRepeatedMessage2);" is 146.,262
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,262
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsAnyIn(listOf(eqIgnoredMessage1`eqIgnoredMessage2));" is 147.,262
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAny,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,262
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAtLeast,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqRepeatedMessage2)).ignoringFields(ignoreFieldNumber).containsAtLeast(eqIgnoredMessage1`eqIgnoredMessage2);" is 144.,296
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAtLeast,Long Statement,The length of the statement "expectThat(listOf(message1`message2`eqIgnoredMessage1)).ignoringRepeatedFieldOrder().containsAtLeastElementsIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2));" is 158.,296
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsAtLeast,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringRepeatedFieldOrder().containsAtLeastElementsIn(listOf(eqMessage1`eqMessage2));" is 136.,296
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsExactly(eqIgnoredMessage2`eqIgnoredMessage1);" is 125.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactly(eqRepeatedMessage1`eqRepeatedMessage2).inOrder();" is 132.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsExactlyElementsIn(listOf(eqIgnoredMessage2`eqIgnoredMessage1));" is 143.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqRepeatedMessage1`eqRepeatedMessage2)).inOrder();" is 150.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactly(eqMessage2`eqMessage1).inOrder();" is 137.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqMessage1`eqMessage2));" is 136.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsExactlyElementsIn(listOf(eqMessage2`eqMessage1)).inOrder();" is 155.,321
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringFields(ignoreFieldNumber).containsNoneOf(eqRepeatedMessage1`eqIgnoredMessage2);" is 146.,365
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,365
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1`message2)).ignoringRepeatedFieldOrder().containsNoneIn(listOf(eqIgnoredMessage1`eqRepeatedMessage2));" is 149.,365
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_containsNone,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,365
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).withPartialScope(FieldScopes.fromSetFields(message2)).ignoringRepeatedFieldOrder().contains(message2);" is 152.,399
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("assertThat(proto).withPartialScope(FieldScopes.fromSetFields({o_int: 3\n" + "r_string: \"baz\"\n" + "r_string: \"qux\"\n"+ "})).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 224.,399
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringRepeatedFieldOrder().ignoringFieldScope(FieldScopes.ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string"))).ignoringFieldAbsence().contains(message2);" is 220.,399
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("assertThat(proto)" + ".ignoringRepeatedFieldOrder()" + ".ignoringFieldScope("+ "FieldScopes.ignoringFields(" + fullMessageName() + ".o_int` "+ fullMessageName()+ ".r_string))"+ ".ignoringFieldAbsence()"+ ".isEqualTo(target)");" is 273.,399
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(message1)).ignoringFields(getFieldNumber("o_enum")`getFieldNumber("o_test_message")).reportingMismatchesOnly().contains(message2);" is 169.,399
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFluent_correspondenceToString,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_enum` "+ fullMessageName()+ ".o_test_message)"+ ".reportingMismatchesOnly()"+ ".isEqualTo(target)");" is 213.,399
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testFormatDiff,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("(diff: Differences were found:\n" + "modified: o_int: 3 -> 1\n" + "added: r_string[0]: \"foo\"\n"+ "added: r_string[1]: \"bar\"\n"+ "deleted: r_string[0]: \"baz\"\n"+ "deleted: r_string[1]: \"qux\"\n");" is 249.,460
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testDisplayingDiffsPairedBy,Long Statement,The length of the statement "expectFailureWhenTesting().that(listOf(actualInt3`actualInt4)).displayingDiffsPairedBy(getInt).containsExactly(expectedInt3`expectedInt4);" is 138.,477
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(listOf(TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrder().containsExactly(TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 346.,500
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compareByOIntAscending,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,517
truth,com.google.common.truth.extensions.proto,IterableOfProtosSubjectTest,compare,Long Statement,The length of the statement "return Integer.compare((Integer)message1.getField(getFieldDescriptor("o_int"))`(Integer)message2.getField(getFieldDescriptor("o_int")));" is 136.,519
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1111,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 10,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 100,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testObjectOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 1000,94
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,113
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 139.,130
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,144
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testIterableOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,160
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,170
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,179
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFieldsForValues(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(1`message3`2`message4).inOrder();" is 152.,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,195
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 2,209
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_assertAbout,Magic Number,The method contains a magic number: 2,234
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_assertAbout_listAndSet,Magic Number,The method contains a magic number: 2,245
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,270
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,270
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 3,270
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,270
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods,Magic Number,The method contains a magic number: 2,270
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 2,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_normalMethods_listAndSet,Magic Number,The method contains a magic number: 3,288
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).ignoringFieldsForValues(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactlyEntriesIn(multimapOf(1`message3`1`message4`2`message3)).inOrder();" is 184.,313
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Long Statement,The length of the statement "assertThat(actualMessages).valuesForKey(1).ignoringFields(getFieldNumber("o_int")`getFieldNumber("r_string")).containsExactly(message3`message4).inOrder();" is 155.,313
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,313
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_testMessages_specializedMethods,Magic Number,The method contains a magic number: 2,313
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyMessages,Magic Number,The method contains a magic number: 3,333
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Long Statement,The length of the statement "assertThat(altActualObjects).containsExactlyEntriesIn(multimapOf("b"`21 * 2`"a"`"Ba" + "z!"`"a"`"Foo! Bar!".substring(0`4)));" is 125.,350
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,350
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 42,350
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 21,350
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 2,350
truth,com.google.common.truth.extensions.proto,OverloadResolutionTest,testMultimapOverloads_objects_actuallyNotMessages,Magic Number,The method contains a magic number: 4,350
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_isEqualTo,Magic Number,The method contains a magic number: 2,58
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 2,84
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_hasSize,Magic Number,The method contains a magic number: 3,84
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 3,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsKey,Magic Number,The method contains a magic number: 2,92
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsEntry,Magic Number,The method contains a magic number: 2,104
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).containsExactlyEntriesIn(mapOf(2`eqMessage2`1`eqMessage1)).inOrder();" is 131.,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testPlain_containsExactly,Magic Number,The method contains a magic number: 2,118
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsEntry(1`eqRepeatedMessage1);" is 141.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto)" + ".ignoringFields(" + fullMessageName() + ".o_int)"+ ".isEqualTo(target)");" is 174.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().doesNotContainEntry(1`eqRepeatedMessage1);" is 142.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Long Statement,The length of the statement "expectThatFailure().hasMessageThat().contains("is equivalent according to " + "assertThat(proto).ignoringRepeatedFieldOrder().isEqualTo(target)");" is 146.,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsEntry,Magic Number,The method contains a magic number: 2,153
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1);" is 141.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`2`eqRepeatedMessage2).inOrder();" is 148.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(mapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1));" is 157.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectThat(mapOf(1`message1`2`message2)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(mapOf(1`eqRepeatedMessage1`2`eqRepeatedMessage2)).inOrder();" is 164.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactly(1`eqRepeatedMessage1`2`eqMessage2);" is 140.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactly(2`eqIgnoredMessage2`1`eqIgnoredMessage1).inOrder();" is 172.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1)).ignoringRepeatedFieldOrderForValues().containsExactlyEntriesIn(mapOf(2`eqRepeatedMessage2`1`eqRepeatedMessage1));" is 164.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Long Statement,The length of the statement "expectFailureWhenTesting().that(mapOf(1`message1`2`message2)).ignoringFieldsForValues(ignoreFieldNumber).containsExactlyEntriesIn(mapOf(2`eqIgnoredMessage2`1`eqIgnoredMessage1)).inOrder();" is 188.,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testFluent_containsExactly,Magic Number,The method contains a magic number: 2,187
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Long Statement,The length of the statement "expectThat(ImmutableMap.of(2`TestMessage2.newBuilder().addRString("foo").addRString("bar").build()`3`TestMessage3.newBuilder().addRString("baz").addRString("qux").build())).ignoringRepeatedFieldOrderForValues().containsExactly(3`TestMessage3.newBuilder().addRString("qux").addRString("baz").build()`2`TestMessage2.newBuilder().addRString("bar").addRString("foo").build());" is 372.,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 3,231
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubjectTest,testCompareMultipleMessageTypes,Magic Number,The method contains a magic number: 2,231
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDifferentDynamicDescriptors,Long Statement,The length of the statement "DynamicMessage message1=DynamicMessage.parseFrom(TestMessage2.getDescriptor()`TestMessage2.newBuilder().setOInt(43).build().toByteString());" is 140.,58
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDifferentDynamicDescriptors,Long Statement,The length of the statement "DynamicMessage message2=DynamicMessage.parseFrom(TestMessage3.getDescriptor()`TestMessage3.newBuilder().setOInt(43).build().toByteString());" is 140.,58
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDifferentDynamicDescriptors,Magic Number,The method contains a magic number: 43,58
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDifferentDynamicDescriptors,Magic Number,The method contains a magic number: 43,58
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Identifier,The length of the identifier subTestMessageTestMessageField is 30.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Statement,The length of the statement "FieldDescriptor subTestMessageTestMessageField=checkNotNull(subTestMessageField.getMessageType().findFieldByName("o_test_message"));" is 132.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Statement,The length of the statement "expectFailureWhenTesting().that(emptyMessage).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageTestMessageField).isEqualTo(message);" is 136.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Statement,The length of the statement "expectThat(partialMessage).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageField).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageTestMessageField).isEqualTo(message);" is 177.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Statement,The length of the statement "expectThat(partialMessage).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageField`subTestMessageTestMessageField).isEqualTo(message);" is 137.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Statement,The length of the statement "expectThat(emptyMessage).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageField).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageTestMessageField).isEqualTo(message);" is 175.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringFieldAbsence_scoped,Long Statement,The length of the statement "expectThat(emptyMessage).ignoringFieldAbsenceOfFieldDescriptors(subTestMessageField`subTestMessageTestMessageField).isEqualTo(message);" is 135.,132
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message message=fromUnknownFields(UnknownFieldSet.newBuilder().addField(99`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build());" is 142.,199
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Long Statement,The length of the statement "Message diffMessage=fromUnknownFields(UnknownFieldSet.newBuilder().addField(93`UnknownFieldSet.Field.newBuilder().addVarint(42).build()).build());" is 146.,199
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 99,199
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 93,199
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testUnknownFields,Magic Number,The method contains a magic number: 42,199
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message nestedMessage=parse("r_test_message: { o_int: 33 r_string: \"foo\" r_string: \"bar\" } " + "r_test_message: { o_int: 44 r_string: \"baz\" r_string: \"qux\" } ");" is 169.,225
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message diffNestedMessage=parse("r_test_message: { o_int: 33 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 44 r_string: \"bar\" r_string: \"foo\" } ");" is 173.,225
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder,Long Statement,The length of the statement "Message eqNestedMessage=parse("r_test_message: { o_int: 44 r_string: \"qux\" r_string: \"baz\" } " + "r_test_message: { o_int: 33 r_string: \"bar\" r_string: \"foo\" } ");" is 171.,225
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder_scoped,Long Statement,The length of the statement "FieldDescriptor subMessageRepeatedField=checkNotNull(getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("r_string"));" is 140.,277
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder_scoped,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffSubMessage).ignoringRepeatedFieldOrderOfFieldDescriptors(rootMessageRepeatedfield).isEqualTo(message);" is 138.,277
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testRepeatedFieldOrder_scoped,Long Statement,The length of the statement "expectThat(diffAll).ignoringRepeatedFieldOrderOfFieldDescriptors(rootMessageRepeatedfield`subMessageRepeatedField).isEqualTo(message);" is 134.,277
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance,Magic Number,The method contains a magic number: 0.2,334
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance,Magic Number,The method contains a magic number: 0.05,334
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance,Magic Number,The method contains a magic number: 0.2f,334
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1,346
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingDoubleTolerance(0.2).usingDoubleToleranceForFields(0.6`double2FieldNumber).isEqualTo(message);" is 123.,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingDoubleToleranceForFields(0.6`doubleFieldNumber`double2FieldNumber).usingDoubleToleranceForFields(0.2`doubleFieldNumber).isEqualTo(message);" is 168.,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingDoubleTolerance(0.2).usingDoubleToleranceForFields(0.6`doubleFieldNumber).isNotEqualTo(message);" is 125.,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingDoubleToleranceForFields(0.6`double2FieldNumber).usingDoubleTolerance(0.2).isNotEqualTo(message);" is 126.,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingDoubleToleranceForFields(0.6`doubleFieldNumber`double2FieldNumber).usingDoubleToleranceForFields(0.2`double2FieldNumber).isNotEqualTo(message);" is 172.,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.6,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.2,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.2,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.6,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.6,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.2,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.2,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.6,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.6,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.2,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.6,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 0.2,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testDoubleTolerance_scoped,Magic Number,The method contains a magic number: 3.14159,386
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance,Magic Number,The method contains a magic number: 0.2f,431
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance,Magic Number,The method contains a magic number: 0.05f,431
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance,Magic Number,The method contains a magic number: 0.2,431
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_defaultValue,Magic Number,The method contains a magic number: 0.1f,443
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingFloatTolerance(0.2f).usingFloatToleranceForFields(0.6f`float2FieldNumber).isEqualTo(message);" is 122.,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingFloatTolerance(0.2f).usingFloatToleranceForFields(0.6f`floatFieldNumber).isNotEqualTo(message);" is 124.,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingFloatToleranceForFields(0.6f`float2FieldNumber).usingFloatTolerance(0.2f).isNotEqualTo(message);" is 125.,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingFloatToleranceForFields(0.6f`floatFieldNumber`float2FieldNumber).usingFloatToleranceForFields(0.2f`floatFieldNumber).isEqualTo(message);" is 165.,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Long Statement,The length of the statement "expectThat(diffMessage).usingFloatToleranceForFields(0.6f`floatFieldNumber`float2FieldNumber).usingFloatToleranceForFields(0.2f`float2FieldNumber).isNotEqualTo(message);" is 169.,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.6f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.2f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.2f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.6f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.2f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.6f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.6f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.2f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.6f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.2f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.6f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 0.2f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testFloatTolerance_scoped,Magic Number,The method contains a magic number: 3.1416f,483
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_ignoringOrder,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).ignoringExtraRepeatedFieldElements().ignoringRepeatedFieldOrder().isEqualTo(message);" is 130.,569
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_empty,Long Statement,The length of the statement "expectThat(diffMessage).comparingExpectedFieldsOnly().ignoringExtraRepeatedFieldElements().ignoringRepeatedFieldOrder().isEqualTo(message);" is 139.,593
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_scoped,Long Statement,The length of the statement "FieldDescriptor subMessageRepeatedField=checkNotNull(getFieldDescriptor("o_sub_test_message").getMessageType().findFieldByName("r_string"));" is 140.,615
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_scoped,Long Statement,The length of the statement "expectThat(diffMessage).ignoringExtraRepeatedFieldElementsOfFieldDescriptors(subMessageRepeatedField).isEqualTo(message);" is 121.,615
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_scoped,Long Statement,The length of the statement "expectThat(diffMessage).ignoringExtraRepeatedFieldElementsOfFieldDescriptors(rootRepeatedField`subMessageRepeatedField).isEqualTo(message);" is 139.,615
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 2,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 3,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 3,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 4,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 2,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 5,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testIgnoringExtraRepeatedFieldElements_map,Magic Number,The method contains a magic number: 2,664
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testReportingMismatchesOnly_isNotEqualTo,Long Statement,The length of the statement "expectFailureWhenTesting().that(diffMessage).ignoringRepeatedFieldOrder().reportingMismatchesOnly().isNotEqualTo(message);" is 122.,711
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testHasAllRequiredFields,Long Statement,The length of the statement "expectThatFailure().factKeys().containsExactly("expected to have all required fields set"`"but was missing"`"proto was");" is 121.,733
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testHasAllRequiredFields,Long Statement,The length of the statement "expectFailureWhenTesting().that(parsePartial("r_required_string_message: {} r_required_string_message: {}")).hasAllRequiredFields();" is 132.,733
truth,com.google.common.truth.extensions.proto,ProtoSubjectTest,testHasAllRequiredFields,Long Statement,The length of the statement "expectThatFailure().factKeys().containsExactly("expected to have all required fields set"`"but was missing"`"proto was");" is 121.,733
truth,com.google.common.truth.extensions.proto,ProtoSubject,sameClassMessagesWithDifferentDescriptors,Complex Conditional,The conditional expression actual == null || !(expected instanceof Message) || actual.getClass() != expected.getClass() is complex.,271
truth,com.google.common.truth.extensions.proto,ProtoSubject,isEqualTo,Long Statement,The length of the statement "failWithoutActual(simpleFact("Not true that messages compare equal; they have different descriptors.")`fact("expected"`expected)`fact("with descriptor"`((Message)expected).getDescriptorForType())`fact("but was"`actual)`fact("with descriptor"`actual.getDescriptorForType()));" is 274.,290
truth,com.google.common.truth.extensions.proto,ProtoSubject,isEqualTo,Long Statement,The length of the statement "failWithoutActual(simpleFact("Not true that messages compare equal.\n" + diffResult.printToString(config.reportMismatchesOnly())));" is 131.,290
truth,com.google.common.truth.extensions.proto,ProtoSubject,isNotEqualTo,Long Statement,The length of the statement "failWithoutActual(simpleFact("Not true that messages compare not equal.\n" + diffResult.printToString(config.reportMismatchesOnly())));" is 135.,329
truth,com.google.common.truth.extensions.proto,ProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithoutActual(simpleFact("expected to have all required fields set")`fact("but was missing"`actual.findInitializationErrors())`fact("proto was"`actualCustomStringRepresentationForProtoPackageMembersToCall()));" is 213.,345
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "checkArgument(actual.getDescriptorForType() == expected.getDescriptorForType()`"The actual [%s] and expected [%s] message descriptors do not match."`actual.getDescriptorForType()`expected.getDescriptorForType());" is 212.,78
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Complex Method,Cyclomatic complexity of the method is 8,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Identifier,The length of the identifier ignoreExtraRepeatedFieldElements is 32.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addAllSingularFields(fieldDescriptor.getNumber()`compareMapFieldsByKey(actualMap`expectedMap`keyOrder`fieldDescriptor`config.subScope(rootDescriptor`fieldDescriptorOrUnknown)));" is 185.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "boolean ignoreRepeatedFieldOrder=config.ignoreRepeatedFieldOrderScope().contains(rootDescriptor`fieldDescriptorOrUnknown);" is 122.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "boolean ignoreExtraRepeatedFieldElements=config.ignoreExtraRepeatedFieldElementsScope().contains(rootDescriptor`fieldDescriptorOrUnknown);" is 138.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addRepeatedField(fieldDescriptor.getNumber()`compareRepeatedFieldIgnoringOrder(actualList`expectedList`shouldCompare == FieldScopeResult.EXCLUDED_NONRECURSIVELY`fieldDescriptor`ignoreExtraRepeatedFieldElements`config.subScope(rootDescriptor`fieldDescriptorOrUnknown)));" is 277.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addRepeatedField(fieldDescriptor.getNumber()`compareRepeatedFieldExpectingSubsequence(actualList`expectedList`shouldCompare == FieldScopeResult.EXCLUDED_NONRECURSIVELY`fieldDescriptor`config.subScope(rootDescriptor`fieldDescriptorOrUnknown)));" is 251.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addAllSingularFields(fieldDescriptor.getNumber()`compareRepeatedFieldByIndices(actualList`expectedList`shouldCompare == FieldScopeResult.EXCLUDED_NONRECURSIVELY`fieldDescriptor`config.subScope(rootDescriptor`fieldDescriptorOrUnknown)));" is 244.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffMessages,Long Statement,The length of the statement "builder.addSingularField(fieldDescriptor.getNumber()`compareSingularValue(actualFields.get(fieldDescriptor)`expectedFields.get(fieldDescriptor)`actual.getDefaultInstanceForType().getField(fieldDescriptor)`shouldCompare == FieldScopeResult.EXCLUDED_NONRECURSIVELY`fieldDescriptor`name(fieldDescriptor)`config.subScope(rootDescriptor`fieldDescriptorOrUnknown)));" is 360.,91
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,toProtoMap,Magic Number,The method contains a magic number: 2,197
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Complex Conditional,The conditional expression ignoreExtraRepeatedFieldElements && !expectedMap.isEmpty() && expectedValue == null is complex.,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Identifier,The length of the identifier ignoreExtraRepeatedFieldElements is 32.,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Parameter List,The method has 5 parameters. ,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Statement,The length of the statement "FieldDescriptorOrUnknown valueFieldDescriptorOrUnknown=FieldDescriptorOrUnknown.fromFieldDescriptor(valueFieldDescriptor);" is 122.,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Statement,The length of the statement "boolean ignoreExtraRepeatedFieldElements=mapConfig.ignoreExtraRepeatedFieldElementsScope().contains(rootDescriptor`FieldDescriptorOrUnknown.fromFieldDescriptor(mapFieldDescriptor));" is 181.,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Long Statement,The length of the statement "builder.add(compareSingularValue(actualValue`expectedValue`null`compareValues == FieldScopeResult.EXCLUDED_NONRECURSIVELY`valueFieldDescriptor`indexedName(mapFieldDescriptor`key`keyFieldDescriptor)`valuesConfig));" is 213.,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareMapFieldsByKey,Magic Number,The method contains a magic number: 2,223
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Identifier,The length of the parameter ignoreExtraRepeatedFieldElements is 32.,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Parameter List,The method has 6 parameters. ,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "RepeatedField.Builder builder=RepeatedField.newBuilder().setFieldDescriptor(fieldDescriptor).setActual(actualList).setExpected(expectedList);" is 141.,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "RepeatedField.PairResult pairResult=compareRepeatedFieldElementPair(actual`expected`excludeNonRecursive`fieldDescriptor`i`j`config);" is 132.,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(RepeatedField.PairResult.newBuilder().setResult(Result.IGNORED).setActual(actualList.get(i)).setActualFieldIndex(i).setFieldDescriptor(fieldDescriptor).build());" is 183.,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(compareRepeatedFieldElementPair(actualList.get(i)`null`excludeNonRecursive`fieldDescriptor`i`null`config));" is 129.,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldIgnoringOrder,Long Statement,The length of the statement "builder.addPairResult(compareRepeatedFieldElementPair(null`expectedList.get(j)`excludeNonRecursive`fieldDescriptor`null`j`config));" is 131.,274
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Parameter List,The method has 5 parameters. ,344
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "RepeatedField.Builder builder=RepeatedField.newBuilder().setFieldDescriptor(fieldDescriptor).setActual(actualList).setExpected(expectedList);" is 141.,344
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "@NullableDecl RepeatedField.PairResult matchingResult=findMatchingPairResult(actualIndices`actualList`expectedIndex`expected`excludeNonRecursive`fieldDescriptor`config);" is 169.,344
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "matchingResult=findMatchingPairResult(actualNotInOrder`actualList`expectedIndex`expected`excludeNonRecursive`fieldDescriptor`config);" is 133.,344
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "builder.addPairResult(RepeatedField.PairResult.newBuilder().setResult(Result.REMOVED).setFieldDescriptor(fieldDescriptor).setExpected(expected).setExpectedFieldIndex(expectedIndex).build());" is 190.,344
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldExpectingSubsequence,Long Statement,The length of the statement "builder.addPairResult(RepeatedField.PairResult.newBuilder().setResult(Result.IGNORED).setFieldDescriptor(fieldDescriptor).setActual(actualList.get(index)).setActualFieldIndex(index).build());" is 191.,344
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,findMatchingPairResult,Long Parameter List,The method has 7 parameters. ,435
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,findMatchingPairResult,Long Statement,The length of the statement "RepeatedField.PairResult pairResult=compareRepeatedFieldElementPair(actualValues.get(actualIndex)`expectedValue`excludeNonRecursive`fieldDescriptor`actualIndex`expectedIndex`config);" is 182.,435
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Parameter List,The method has 7 parameters. ,465
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Statement,The length of the statement "SingularField comparison=compareSingularValue(actual`expected`null`excludeNonRecursive`fieldDescriptor`"<no field path>"`config);" is 129.,465
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldElementPair,Long Statement,The length of the statement "RepeatedField.PairResult.Builder pairResultBuilder=RepeatedField.PairResult.newBuilder().setResult(comparison.result()).setFieldDescriptor(fieldDescriptor);" is 156.,465
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldByIndices,Long Parameter List,The method has 5 parameters. ,508
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareRepeatedFieldByIndices,Long Statement,The length of the statement "builder.add(compareSingularValue(actual`expected`null`excludeNonRecursive`fieldDescriptor`indexedName(fieldDescriptor`i)`config));" is 130.,508
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularValue,Long Parameter List,The method has 7 parameters. ,540
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularValue,Long Statement,The length of the statement "return compareSingularMessage((Message)actual`(Message)expected`(Message)defaultValue`excludeNonRecursive`fieldDescriptor`fieldName`config);" is 140.,540
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularMessage,Long Parameter List,The method has 7 parameters. ,579
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularMessage,Long Statement,The length of the statement "boolean ignoreFieldAbsence=config.ignoreFieldAbsenceScope().contains(rootDescriptor`FieldDescriptorOrUnknown.fromFieldDescriptor(fieldDescriptor));" is 147.,579
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularMessage,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromFieldDescriptor(fieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 211.,579
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Parameter List,The method has 6 parameters. ,636
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Statement,The length of the statement "boolean isNonRepeatedProto3=!fieldDescriptor.isRepeated() && fieldDescriptor.getContainingOneof() == null && fieldDescriptor.getFile().getSyntax() == Syntax.PROTO3;" is 164.,636
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Statement,The length of the statement "boolean ignoreFieldAbsence=isNonRepeatedProto3 || config.ignoreFieldAbsenceScope().contains(rootDescriptor`fieldDescriptorOrUnknown);" is 133.,636
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Statement,The length of the statement "result.markModifiedIf(!doublesEqual((double)actual`(double)expected`config.doubleCorrespondenceMap().get(rootDescriptor`fieldDescriptorOrUnknown)));" is 148.,636
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Statement,The length of the statement "result.markModifiedIf(!floatsEqual((float)actual`(float)expected`config.floatCorrespondenceMap().get(rootDescriptor`fieldDescriptorOrUnknown)));" is 144.,636
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareSingularPrimitive,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromFieldDescriptor(fieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 211.,636
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,diffUnknowns,Long Statement,The length of the statement "builder.addAllSingularFields(fieldNumber`compareUnknownFieldList(actualValues`expectedValues`compareFields == FieldScopeResult.EXCLUDED_NONRECURSIVELY`unknownFieldDescriptor`config.subScope(rootDescriptor`fieldDescriptorOrUnknown)));" is 233.,722
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldList,Long Parameter List,The method has 5 parameters. ,766
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldList,Long Statement,The length of the statement "builder.add(compareUnknownFieldValue(actual`expected`excludeNonRecursive`unknownFieldDescriptor`indexedName(unknownFieldDescriptor`i)`config));" is 143.,766
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldValue,Long Parameter List,The method has 6 parameters. ,790
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldValue,Long Statement,The length of the statement "return compareUnknownFieldSet((UnknownFieldSet)actual`(UnknownFieldSet)expected`excludeNonRecursive`unknownFieldDescriptor`fieldName`config);" is 141.,790
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldSet,Long Parameter List,The method has 6 parameters. ,811
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownFieldSet,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromUnknown(unknownFieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 210.,811
truth,com.google.common.truth.extensions.proto,ProtoTruthMessageDifferencer,compareUnknownPrimitive,Long Statement,The length of the statement "SingularField.Builder singularFieldBuilder=SingularField.newBuilder().setFieldDescriptorOrUnknown(FieldDescriptorOrUnknown.fromUnknown(unknownFieldDescriptor)).setFieldName(fieldName).setResult(result.build());" is 210.,857
truth,com.google.common.truth.extensions.proto,DiffResult,childEntities,Long Statement,The length of the statement "ImmutableList.Builder<RecursableDiffEntity> builder=ImmutableList.builderWithExpectedSize(singularFields().size() + repeatedFields().size() + unknownFields().asSet().size());" is 174.,540
truth,com.google.common.truth.extensions.proto,MapWithProtoValuesSubject,usingCorrespondence,Long Statement,The length of the statement "return comparingValuesUsing(config.withExpectedMessages(expectedValues).<M>toCorrespondence(FieldScopeUtil.getSingleDescriptor(actual.values())));" is 146.,606
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubject,usingConfig,Long Statement,The length of the statement "return new MultimapWithProtoValuesFluentAssertionImpl<>(new MultimapWithProtoValuesSubject<>(metadata`newConfig`actual));" is 121.,101
truth,com.google.common.truth.extensions.proto,MultimapWithProtoValuesSubject,usingCorrespondence,Long Statement,The length of the statement "return comparingValuesUsing(config.withExpectedMessages(expectedValues).<M>toCorrespondence(FieldScopeUtil.getSingleDescriptor(actual.values())));" is 146.,628
truth,com.google.common.truth.extensions.proto,RecursableDiffEntity,isAnyChildMatched,Complex Conditional,The conditional expression (entity.isMatched() && !entity.isContentEmpty()) || entity.isAnyChildMatched() is complex.,64
truth,com.google.common.truth.extensions.proto,RecursableDiffEntity,isAnyChildIgnored,Complex Conditional,The conditional expression (entity.isIgnored() && !entity.isContentEmpty()) || entity.isAnyChildIgnored() is complex.,82
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldAbsence,Long Statement,The length of the statement "return toBuilder().setIgnoreFieldAbsenceScope(FieldScopeLogic.all()).addUsingCorrespondenceString(".ignoringFieldAbsence()").build();" is 133.,115
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldAbsenceOfFields,Long Statement,The length of the statement "return toBuilder().setIgnoreFieldAbsenceScope(ignoreFieldAbsenceScope().allowingFieldsNonRecursive(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringFieldAbsenceOf(%s)"`fieldNumbers).build();" is 207.,122
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldAbsenceOfFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setIgnoreFieldAbsenceScope(ignoreFieldAbsenceScope().allowingFieldDescriptorsNonRecursive(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldAbsenceOf(%s)"`fieldDescriptors).build();" is 229.,130
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringRepeatedFieldOrder,Long Statement,The length of the statement "return toBuilder().setIgnoreRepeatedFieldOrderScope(FieldScopeLogic.all()).addUsingCorrespondenceString(".ignoringRepeatedFieldOrder()").build();" is 145.,140
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringRepeatedFieldOrderOfFields,Long Statement,The length of the statement "return toBuilder().setIgnoreRepeatedFieldOrderScope(ignoreRepeatedFieldOrderScope().allowingFieldsNonRecursive(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringRepeatedFieldOrderOf(%s)"`fieldNumbers).build();" is 225.,147
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringRepeatedFieldOrderOfFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setIgnoreRepeatedFieldOrderScope(ignoreRepeatedFieldOrderScope().allowingFieldDescriptorsNonRecursive(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringRepeatedFieldOrderOf(%s)"`fieldDescriptors).build();" is 247.,155
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringExtraRepeatedFieldElements,Long Statement,The length of the statement "return toBuilder().setIgnoreExtraRepeatedFieldElementsScope(FieldScopeLogic.all()).addUsingCorrespondenceString(".ignoringExtraRepeatedFieldElements()").build();" is 161.,165
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringExtraRepeatedFieldElementsOfFields,Long Statement,The length of the statement "return toBuilder().setIgnoreExtraRepeatedFieldElementsScope(ignoreExtraRepeatedFieldElementsScope().allowingFieldsNonRecursive(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringExtraRepeatedFieldElements(%s)"`fieldNumbers).build();" is 247.,172
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringExtraRepeatedFieldElementsOfFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setIgnoreExtraRepeatedFieldElementsScope(ignoreExtraRepeatedFieldElementsScope().allowingFieldDescriptorsNonRecursive(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringExtraRepeatedFieldElements(%s)"`fieldDescriptors).build();" is 269.,182
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingDoubleTolerance,Long Statement,The length of the statement "return toBuilder().setDoubleCorrespondenceMap(FieldScopeLogicMap.defaultValue(Correspondence.tolerance(tolerance))).addUsingCorrespondenceString(".usingDoubleTolerance(" + tolerance + ")").build();" is 197.,193
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingDoubleToleranceForFields,Long Statement,The length of the statement "return toBuilder().setDoubleCorrespondenceMap(doubleCorrespondenceMap().with(FieldScopeLogic.none().allowingFieldsNonRecursive(fieldNumbers)`Correspondence.tolerance(tolerance))).addUsingCorrespondenceFieldNumbersString(".usingDoubleTolerance(" + tolerance + "` %s)"`fieldNumbers).build();" is 289.,201
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingDoubleToleranceForFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setDoubleCorrespondenceMap(doubleCorrespondenceMap().with(FieldScopeLogic.none().allowingFieldDescriptorsNonRecursive(fieldDescriptors)`Correspondence.tolerance(tolerance))).addUsingCorrespondenceFieldDescriptorsString(".usingDoubleTolerance(" + tolerance + "` %s)"`fieldDescriptors).build();" is 311.,214
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingFloatTolerance,Long Statement,The length of the statement "return toBuilder().setFloatCorrespondenceMap(FieldScopeLogicMap.defaultValue(Correspondence.tolerance(tolerance))).addUsingCorrespondenceString(".usingFloatTolerance(" + tolerance + ")").build();" is 195.,227
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingFloatToleranceForFields,Long Statement,The length of the statement "return toBuilder().setFloatCorrespondenceMap(floatCorrespondenceMap().with(FieldScopeLogic.none().allowingFieldsNonRecursive(fieldNumbers)`Correspondence.tolerance(tolerance))).addUsingCorrespondenceFieldNumbersString(".usingFloatTolerance(" + tolerance + "` %s)"`fieldNumbers).build();" is 286.,235
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,usingFloatToleranceForFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setFloatCorrespondenceMap(floatCorrespondenceMap().with(FieldScopeLogic.none().allowingFieldDescriptorsNonRecursive(fieldDescriptors)`Correspondence.tolerance(tolerance))).addUsingCorrespondenceFieldDescriptorsString(".usingFloatTolerance(" + tolerance + "` %s)"`fieldDescriptors).build();" is 308.,248
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,comparingExpectedFieldsOnly,Long Statement,The length of the statement "return toBuilder().setCompareExpectedFieldsOnly(true).addUsingCorrespondenceString(".comparingExpectedFieldsOnly()").build();" is 125.,261
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,withPartialScope,Long Statement,The length of the statement "return toBuilder().setCompareFieldsScope(FieldScopeLogic.and(compareFieldsScope()`partialScope.logic())).addUsingCorrespondenceFieldScopeString(".withPartialScope(%s)"`partialScope).build();" is 190.,283
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFields,Long Statement,The length of the statement "return toBuilder().setCompareFieldsScope(compareFieldsScope().ignoringFields(fieldNumbers)).addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers).build();" is 177.,290
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldDescriptors,Long Statement,The length of the statement "return toBuilder().setCompareFieldsScope(compareFieldsScope().ignoringFieldDescriptors(fieldDescriptors)).addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDescriptors(%s)"`fieldDescriptors).build();" is 209.,297
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,ignoringFieldScope,Long Statement,The length of the statement "return toBuilder().setCompareFieldsScope(FieldScopeLogic.and(compareFieldsScope()`FieldScopeLogic.not(fieldScope.logic()))).addUsingCorrespondenceFieldScopeString(".ignoringFieldScope(%s)"`fieldScope).build();" is 209.,305
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,subScope,Long Statement,The length of the statement "return toBuilder().setIgnoreFieldAbsenceScope(ignoreFieldAbsenceScope().subScope(rootDescriptor`fieldDescriptorOrUnknown)).setIgnoreRepeatedFieldOrderScope(ignoreRepeatedFieldOrderScope().subScope(rootDescriptor`fieldDescriptorOrUnknown)).setIgnoreExtraRepeatedFieldElementsScope(ignoreExtraRepeatedFieldElementsScope().subScope(rootDescriptor`fieldDescriptorOrUnknown)).setDoubleCorrespondenceMap(doubleCorrespondenceMap().subScope(rootDescriptor`fieldDescriptorOrUnknown)).setFloatCorrespondenceMap(floatCorrespondenceMap().subScope(rootDescriptor`fieldDescriptorOrUnknown)).setCompareFieldsScope(compareFieldsScope().subScope(rootDescriptor`fieldDescriptorOrUnknown)).build();" is 679.,320
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,toCorrespondence,Long Statement,The length of the statement "`"is equivalent according to assertThat(proto)" + usingCorrespondenceString(optDescriptor) + ".isEqualTo(target) to").formattingDiffsUsing(new Correspondence.DiffFormatter<M`M>(){" is 179.,366
truth,com.google.common.truth.extensions.proto,FluentEqualityConfig,formatDiff,Long Statement,The length of the statement "return toMessageDifferencer(actual.getDescriptorForType()).diffMessages(actual`expected).printToString(reportMismatchesOnly());" is 127.,394
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,create,Long Identifier,The length of the parameter usingCorrespondenceStringFunction is 33.,50
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(message)`Functions.constant(String.format("FieldScopes.fromSetFields({%s})"`message.toString())));" is 141.,65
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none()`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`messages.toString())));" is 125.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "checkArgument(optDescriptor.isPresent()`"Cannot create scope from messages with different descriptors: %s"`getDescriptors(messages));" is 133.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createFromSetFields,Long Statement,The length of the statement "return create(FieldScopeLogic.partialScope(aggregateMessage)`Functions.constant(String.format("FieldScopes.fromSetFields(%s)"`formatList(messages))));" is 150.,71
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFields,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.ignoringFields(%s)"`fieldNumbers));" is 149.,103
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createIgnoringFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.all().ignoringFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.ignoringFieldDescriptors(%s)"`join(fieldDescriptors))));" is 181.,109
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFields,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFields(fieldNumbers)`FieldScopeUtil.fieldNumbersFunction("FieldScopes.allowingFields(%s)"`fieldNumbers));" is 150.,116
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,createAllowingFieldDescriptors,Long Statement,The length of the statement "return create(FieldScopeLogic.none().allowingFieldDescriptors(fieldDescriptors)`Functions.constant(String.format("FieldScopes.allowingFieldDescriptors(%s)"`join(fieldDescriptors))));" is 182.,122
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFields,Long Statement,The length of the statement "return create(logic().ignoringFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".ignoringFields(%s)"`fieldNumbers));" is 129.,165
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,ignoringFieldDescriptors,Long Statement,The length of the statement "return create(logic().ignoringFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".ignoringFieldDescriptors(%s)"`fieldDescriptors));" is 161.,178
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFields,Long Statement,The length of the statement "return create(logic().allowingFields(fieldNumbers)`addUsingCorrespondenceFieldNumbersString(".allowingFields(%s)"`fieldNumbers));" is 129.,191
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,allowingFieldDescriptors,Long Statement,The length of the statement "return create(logic().allowingFieldDescriptors(fieldDescriptors)`addUsingCorrespondenceFieldDescriptorsString(".allowingFieldDescriptors(%s)"`fieldDescriptors));" is 161.,204
truth,com.google.common.truth.extensions.proto,FieldScopeImpl,addUsingCorrespondenceFieldDescriptorsString,Long Statement,The length of the statement "return FieldScopeUtil.concat(usingCorrespondenceStringFunction()`Functions.constant(String.format(fmt`join(fieldDescriptors))));" is 128.,219
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "TestMessageLite2WithRequiredFields withoutRequiredFields=TestMessageLite2WithRequiredFields.newBuilder().setOptionalString("foo").buildPartial();" is 145.,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto2Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite2.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite2.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite2.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite2.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite2.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite2.newBuilder().buildPartial()).setMessageWithoutRequiredFields(withoutRequiredFields).build();" is 672.,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Long Statement,The length of the statement "Config proto3Config=Config.newBuilder().setNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setEquivalentNonEmptyMessage(TestMessageLite3.newBuilder().setOptionalInt(3).build()).setNonEmptyMessageOfOtherValue(TestMessageLite3.newBuilder().setOptionalInt(3).setSubMessage(TestMessageLite3.SubMessage.newBuilder().setOptionalString("foo")).build()).setNonEmptyMessageOfOtherType(OtherTestMessageLite3.newBuilder().setOptionalInt(3).build()).setDefaultInstance(TestMessageLite3.newBuilder().buildPartial()).setDefaultInstanceOfOtherType(OtherTestMessageLite3.newBuilder().buildPartial()).build();" is 617.,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,data,Magic Number,The method contains a magic number: 3,86
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`"Not true that \\(.*\\) proto is equal to the expected \\(.*\\) object\\.\\s*" + "They are not of the same class\\.");" is 132.,175
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testIsEqualTo_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that protos are different\\.\\s*Both are \\(%s\\) <.*optional_int: 3.*>\\."`Pattern.quote(config.nonEmptyMessage().getClass().getName())));" is 177.,175
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testHasAllRequiredFields_failures,Long Statement,The length of the statement "expectRegex(e`"expected to have all required fields set\\s*but was: .*\\(Lite runtime could not" + " determine which fields were missing.\\)");" is 143.,212
truth,com.google.common.truth.extensions.proto,LiteProtoSubjectTest,testDefaultInstance_failure,Long Statement,The length of the statement "expectRegex(e`String.format("Not true that \\(%s\\) <.*\\[empty proto\\].*> is not a default " + "proto instance\\.\\s*It has no set values\\."`Pattern.quote(config.defaultInstance().getClass().getName())));" is 207.,239
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,getTrimmedToString,Long Statement,The length of the statement "String objectToString=String.format("# %s@%s"`messageLite.getClass().getName()`Integer.toHexString(messageLite.hashCode()));" is 124.,80
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualTo,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that (%s) proto is equal to the expected (%s) object. " + "They are not of the same class."`actual.getClass().getName()`expected.getClass().getName())));" is 206.,105
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualTo,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that protos are different. Both are (%s) <%s>."`actual.getClass().getName()`getTrimmedToString(actual))));" is 159.,156
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualToDefaultInstance,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> is a default proto instance. It is null."`actualCustomStringRepresentationForProtoPackageMembersToCall())));" is 171.,180
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isEqualToDefaultInstance,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that <%s> is a default proto instance. It has set values."`actualCustomStringRepresentationForProtoPackageMembersToCall())));" is 178.,180
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,isNotEqualToDefaultInstance,Long Statement,The length of the statement "failWithoutActual(simpleFact(lenientFormat("Not true that (%s) <%s> is not a default proto instance. It has no set values."`actual.getClass().getName()`actualCustomStringRepresentationForProtoPackageMembersToCall())));" is 218.,197
truth,com.google.common.truth.extensions.proto,LiteProtoSubject,hasAllRequiredFields,Long Statement,The length of the statement "failWithoutActual(simpleFact("expected to have all required fields set")`fact("but was"`actualCustomStringRepresentationForProtoPackageMembersToCall())`simpleFact("(Lite runtime could not determine which fields were missing.)"));" is 229.,209
